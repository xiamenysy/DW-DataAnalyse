--- SVD Report 6/20/2014
--	Limit data by only taking materials with SG 40 and Z4
--	Mtype is ZTG and ZFG only
--'5041', '5051', '5101', '5111', '5121', '5161', '5191', '5201','5071','5141'
--'5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140'
--New Version of the SVD Reports
--Material
--Ship Plant
--Supply Plant
--Business Unit
--Strategy Group
--Safety Stock
--Weekly Usage (Avg 13wks)
--Weekly Forecast (Avg 13wks)
--DC On Hand Inventory
--In Transit to DC
--Past Due
--Due within Transit
--Due outside Transit till 13 wks
--Due outside 13 wks
--No Due Date
--Days of Supply
--13wk Intake vs Forecast
--Issue Indicator
--Planner Review Comment
--Last Comment Date
--USE STEPS
TRUNCATE TABLE INV_SAP_ITEM_SO_STAT;
INSERT INTO INV_SAP_ITEM_SO_STAT SELECT * FROM VIEW_INV_SAP_IMSO_LTIN13TMP;
INSERT INTO INV_SAP_ITEM_SO_STAT SELECT * FROM VIEW_INV_SAP_IMSO_LTOUT13TMP;

--COMMENT 
CREATE TABLE INV_SAP_SVD_COMMENTS;
INSERT
INTO INV_SAP_SVD_COMMENTS
  (
    ID,
    LAST_COMMENT_DATE,
    COMMENTS,
    PLANNER,
    LAST_UPDATE_DATE
  )
  VALUES
  (
    'ID_1',
    'LAST_COMMENT_DATE_1',
    'COMMENTS_1',
    'PLANNER_1',
    SYSDATE
  );
INSERT
INTO INV_SAP_SVD_COMMENTS
  (
    ID,
    LAST_COMMENT_DATE,
    COMMENTS,
    PLANNER,
    LAST_UPDATE_DATE
  )
  VALUES
  (
    '0041-5076_5040',
    '23-Jun-14',
    'HI_TEST',
    'HUANG MOYUE',
    SYSDATE
  );

--1 clear all data in tmp
TRUNCATE TABLE INV_SAP_SVD_COMMENTS_TMP;
--2 Upload to tmp first
INSERT
INTO INV_SAP_SVD_COMMENTS_TMP
  (
    ID,
    LAST_COMMENT_DATE,
    COMMENTS,
    PLANNER,
    LAST_UPDATE_DATE
  )
  VALUES
  (
    'ID_1',
    'LAST_COMMENT_DATE_1',
    'COMMENTS_1',
    'PLANNER_1',
    SYSDATE
  );
  
--3 Merge data
MERGE INTO INV_SAP_SVD_COMMENTS SVD_COM USING
(SELECT ID,
  LAST_COMMENT_DATE,
  COMMENTS,
  PLANNER,
  LAST_UPDATE_DATE
FROM INV_SAP_SVD_COMMENTS_TMP
) TMP ON ( SVD_COM.ID=TMP.ID)
WHEN MATCHED THEN
  UPDATE
  SET SVD_COM.LAST_COMMENT_DATE = TMP.LAST_COMMENT_DATE,
    SVD_COM.COMMENTS            = TMP.COMMENTS,
    SVD_COM.PLANNER             = TMP.PLANNER,
    SVD_COM.LAST_UPDATE_DATE    = TMP.LAST_UPDATE_DATE WHEN NOT MATCHED THEN
  INSERT VALUES
    (
      TMP.ID,
      TMP.LAST_COMMENT_DATE,
      TMP.COMMENTS,
      TMP.PLANNER,
      TMP.LAST_UPDATE_DATE
    );


--Delete Comments
delete from INV_SAP_SVD_COMMENTS where ID = 'ID_1';

--FINAL DOWNLOAD THE REPORT FORM THE DW..
SELECT SVD_BASIC.ID,
  SVD_BASIC.MATERIAL,
  SVD_BASIC.CATALOG_DASH,
  SVD_BASIC.PLANT,
  SVD_BASIC.VENDOR,
  SVD_BASIC.PRODUCTION_PLANT,
  SVD_BASIC.BU,
  SVD_BASIC.LEAD_TIME,
  SVD_BASIC.MRP_CONTROLLER,
  SVD_BASIC.UNIT_COST,
  SVD_BASIC.STRATEGY_GRP,
  SVD_BASIC.SAFETY_STOCK,
  SVD_BASIC.AVG13_USAGE_QTY,
  SVD_BASIC.FC_AVG13_WEEK_QTY,
  SVD_BASIC.OH_VALUE,
  SVD_BASIC.TRANSIT_VALUE,
  SVD_BASIC.TOT_OPEN_VALUE,
  SVD_BASIC.PASS_DUE_QTY,
  SVD_BASIC.LT_OPEN_QTY,
  SVD_BASIC.LT_WEEKS13_OPEN_QTY,
  SVD_BASIC.OUT_WEEKS13_OPEN_QTY,
  SVD_BASIC.TOT_NO_COMMITTED_DATE_QTY,
  0 AS Days_of_Supply,
  0 AS wk13_Intake_fc,
  0 AS Issu_ind,
  SVD_COMM.PLANNER,
  SVD_COMM.COMMENTS,
  SVD_COMM.LAST_COMMENT_DATE
FROM
  (SELECT ID,
    MATERIAL,
    CATALOG_DASH,
    PLANT,
    VENDOR,
    BU,
    LEAD_TIME,
    MRP_CONTROLLER,
    UNIT_COST,
    STRATEGY_GRP,
    SAFETY_STOCK,
    AVG13_USAGE_QTY,
    FC_AVG13_WEEK_QTY,
    PRODUCTION_PLANT,
    NVL(OH_QTY*UNIT_COST,0) AS OH_VALUE,
    NVL(STOCK_IN_TRANSIT_QTY*UNIT_COST,0) AS TRANSIT_VALUE,
    NVL(TOT_OPEN_QTY*UNIT_COST,0) AS TOT_OPEN_VALUE,
    PASS_DUE_QTY,
    LT_OPEN_QTY,
    LT_WEEKS13_OPEN_QTY,
    OUT_WEEKS13_OPEN_QTY,
    TOT_NO_COMMITTED_DATE_QTY,
    PRODUCTION_PLANT
  FROM VIEW_INV_SAP_SVD_REPORT
  WHERE CHECK_KEY <> 0 AND BU NOT IN ('ACS', 'VIS', 'SFW', 'ESB', 'CCT', 'SSB', 'LVM', 'MVM', 'MVD') AND STRATEGY_GRP IN ('40','Z4')
  )SVD_BASIC
LEFT JOIN
  (SELECT ID,
    LAST_COMMENT_DATE,
    COMMENTS,
    PLANNER,
    LAST_UPDATE_DATE
  FROM INV_SAP_SVD_COMMENTS
  )SVD_COMM
ON SVD_BASIC.ID = SVD_COMM.ID;



--INI SETUP
CREATE TABLE INV_SAP_ITEM_SO_STAT AS
SELECT * FROM VIEW_INV_SAP_IMSO_LTIN13TMP;

--Add Comments
SELECT * FROM INV_SAP_SVD_COMMENTS;

SELECT count(*) FROM INV_SAP_SVD_REPORT WHERE TOT_OPEN_QTY <> 0 OR  STOCK_IN_TRANSIT_QTY <> 0 OR OH_QTY <> 0;

DROP VIEW VIEW_INV_SAP_SVD_REPORT;
CREATE TABLE INV_SAP_SVD_REPORT AS 
SELECT * FROM VIEW_INV_SAP_SVD_REPORT;
CREATE VIEW VIEW_INV_SAP_SVD_REPORT AS
SELECT SPPX_FC_TRIN_OPEN_NOCM.ID                                                                                                         AS ID,
  SPPX_FC_TRIN_OPEN_NOCM.MATERIAL                                                                                                        AS MATERIAL,
  SPPX_FC_TRIN_OPEN_NOCM.CATALOG_DASH                                                                                                    AS CATALOG_DASH,
  SPPX_FC_TRIN_OPEN_NOCM.PLANT                                                                                                           AS PLANT,
  SPPX_FC_TRIN_OPEN_NOCM.VENDOR                                                                                                          AS VENDOR,
  SPPX_FC_TRIN_OPEN_NOCM.BU                                                                                                              AS BU,
  NVL(SPPX_FC_TRIN_OPEN_NOCM.LEAD_TIME,0)                                                                                                AS LEAD_TIME,
  SPPX_FC_TRIN_OPEN_NOCM.STRATEGY_GRP                                                                                                    AS STRATEGY_GRP,
  SPPX_FC_TRIN_OPEN_NOCM.MRP_TYPE                                                                                                        AS MRP_TYPE,
  NVL(SPPX_FC_TRIN_OPEN_NOCM.SAFETY_STOCK,0)                                                                                             AS SAFETY_STOCK,
  NVL(SPPX_FC_TRIN_OPEN_NOCM.AVG13_USAGE_QTY,0)                                                                                          AS AVG13_USAGE_QTY,
  NVL(SPPX_FC_TRIN_OPEN_NOCM.FC_AVG13_WEEK_QTY,0)                                                                                        AS FC_AVG13_WEEK_QTY,
  NVL(SPPX_FC_TRIN_OPEN_NOCM.OH_QTY,0)                                                                                                   AS OH_QTY,
  NVL(SPPX_FC_TRIN_OPEN_NOCM.UNIT_COST,0)                                                                                                AS UNIT_COST,
  SPPX_FC_TRIN_OPEN_NOCM.MRP_CONTROLLER AS MRP_CONTROLLER,
  NVL(SPPX_FC_TRIN_OPEN_NOCM.STOCK_IN_TRANSIT_QTY,0)                                                                                     AS STOCK_IN_TRANSIT_QTY,
  NVL(SPPX_FC_TRIN_OPEN_NOCM.TOT_OPEN_QTY,0)                                                                                             AS TOT_OPEN_QTY,
  NVL(SO_STAT.PASS_DUE_QTY,0)                                                                                                            AS PASS_DUE_QTY,
  NVL(SO_STAT.LT_OPEN_QTY,0)                                                                                                             AS LT_OPEN_QTY,
  NVL(SO_STAT.LT_WEEKS13_OPEN_QTY,0)                                                                                                     AS LT_WEEKS13_OPEN_QTY,
  NVL(SO_STAT.OUT_WEEKS13_OPEN_QTY,0)                                                                                                    AS OUT_WEEKS13_OPEN_QTY,
  NVL(SPPX_FC_TRIN_OPEN_NOCM.TOT_NO_COMMITTED_DATE_QTY,0)                                                                                AS TOT_NO_COMMITTED_DATE_QTY,
  NVL(SPPX_FC_TRIN_OPEN_NOCM.ULTIMATE_SOURCE,0)                                                                                          AS PRODUCTION_PLANT,
  (NVL(SPPX_FC_TRIN_OPEN_NOCM.TOT_OPEN_QTY,0)+NVL(SPPX_FC_TRIN_OPEN_NOCM.STOCK_IN_TRANSIT_QTY,0)+ NVL(SPPX_FC_TRIN_OPEN_NOCM.OH_QTY, 0)) AS CHECK_KEY
FROM
  (SELECT SPPX_FC_TRIN_OPEN.ID,
    SPPX_FC_TRIN_OPEN.MATERIAL,
    SPPX_FC_TRIN_OPEN.CATALOG_DASH,
    SPPX_FC_TRIN_OPEN.PLANT,
    SPPX_FC_TRIN_OPEN.VENDOR,
    SPPX_FC_TRIN_OPEN.BU,
    SPPX_FC_TRIN_OPEN.STRATEGY_GRP,
    SPPX_FC_TRIN_OPEN.MRP_TYPE,
    SPPX_FC_TRIN_OPEN.SAFETY_STOCK,
    SPPX_FC_TRIN_OPEN.AVG13_USAGE_QTY,
    SPPX_FC_TRIN_OPEN.LEAD_TIME,
    SPPX_FC_TRIN_OPEN.FC_AVG13_WEEK_QTY,
    SPPX_FC_TRIN_OPEN.OH_QTY,
    SPPX_FC_TRIN_OPEN.UNIT_COST,
    SPPX_FC_TRIN_OPEN.MRP_CONTROLLER,
    SPPX_FC_TRIN_OPEN.ULTIMATE_SOURCE,
    SPPX_FC_TRIN_OPEN.STOCK_IN_TRANSIT_QTY,
    SPPX_FC_TRIN_OPEN.TOT_OPEN_QTY,
    NO_COMMITTED_DATE.TOT_NO_COMMITTED_DATE_QTY
  FROM
    (SELECT SPPX_FC_TRIN.ID,
      SPPX_FC_TRIN.MATERIAL,
      SPPX_FC_TRIN.CATALOG_DASH,
      SPPX_FC_TRIN.PLANT,
      SPPX_FC_TRIN.VENDOR,
      SPPX_FC_TRIN.BU,
      SPPX_FC_TRIN.STRATEGY_GRP,
      SPPX_FC_TRIN.MRP_TYPE,
      SPPX_FC_TRIN.SAFETY_STOCK,
      SPPX_FC_TRIN.AVG13_USAGE_QTY,
      SPPX_FC_TRIN.LEAD_TIME,
      SPPX_FC_TRIN.FC_AVG13_WEEK_QTY,
      SPPX_FC_TRIN.OH_QTY,
      SPPX_FC_TRIN.UNIT_COST,
      SPPX_FC_TRIN.MRP_CONTROLLER,
      SPPX_FC_TRIN.ULTIMATE_SOURCE,
      SPPX_FC_TRIN.STOCK_IN_TRANSIT_QTY,
      TOT_OPEN.TOT_OPEN_QTY
    FROM
      (SELECT PPX_FC.ID,
        PPX_FC.MATERIAL,
        PPX_FC.CATALOG_DASH,
        PPX_FC.PLANT,
        PPX_FC.VENDOR,
        PPX_FC.BU,
        PPX_FC.STRATEGY_GRP,
        PPX_FC.MRP_TYPE,
        PPX_FC.SAFETY_STOCK,
        PPX_FC.AVG13_USAGE_QTY,
        PPX_FC.LEAD_TIME,
        PPX_FC.FC_AVG13_WEEK_QTY,
        PPX_FC.UNIT_COST,
        PPX_FC.MRP_CONTROLLER,
        PPX_FC.OH_QTY,
        PPX_FC.ULTIMATE_SOURCE,
        STOCK_IN_TRAINST.STOCK_IN_TRANSIT_QTY
      FROM
        (SELECT SALES_PP_X.ID,
          SALES_PP_X.MATERIAL,
          SALES_PP_X.CATALOG_DASH,
          SALES_PP_X.PLANT,
          SALES_PP_X.VENDOR,
          SALES_PP_X.BU,
          SALES_PP_X.STRATEGY_GRP,
          SALES_PP_X.MRP_TYPE,
          SALES_PP_X.SAFETY_STOCK,
          SALES_PP_X.AVG13_USAGE_QTY,
          SALES_PP_X.LEAD_TIME,
          SALES_PP_X.UNIT_COST,
          SALES_PP_X.MRP_CONTROLLER,
          FC_AVG13_WEEK.FC_AVG13_WEEK_QTY,
          SALES_PP_X.OH_QTY,
          SALES_PP_X.ULTIMATE_SOURCE
        FROM
          (SELECT ID,
            MATERIAL,
            PLANT,
            CATALOG_DASH,
            SAFETY_STOCK,
            OH_QTY,
            STRATEGY_GRP,
            MRP_TYPE,
            SUBSTR(VENDOR_KEY,0,4) AS VENDOR,
            SUBSTR(PROD_BU,0,3)    AS BU,
            AVG13_USAGE_QTY,
            LEAD_TIME,
            UNIT_COST,
            MRP_CONTROLLER,
            ULTIMATE_SOURCE
          FROM VIEW_INV_SAP_PP_OPT_X
          WHERE MATL_TYPE IN ('ZTG','ZFG')
          AND PLANT       IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140')
          )SALES_PP_X
        LEFT JOIN
          ---FC 13 WEEKS AVG
          (
          SELECT MATERIALID
            ||'_'
            ||PLANTID                           AS ID,
            MATERIALID                          AS MATERIALID,
            PLANTID                             AS PLANTID,
            CEIL(SUM(PLNMG_PLANNEDQUANTITY)/13) AS FC_AVG13_WEEK_QTY
          FROM INV_SAP_PP_FRCST_PBIM_PBED
          WHERE (PDATU_DELIV_ORDFINISHDATE BETWEEN TO_CHAR(sysdate) AND TO_CHAR(sysdate + 91))
          AND VERSBP_VERSION = '00'
          GROUP BY MATERIALID,
            PLANTID
          )FC_AVG13_WEEK
        ON SALES_PP_X.ID = FC_AVG13_WEEK.ID
        )PPX_FC
      LEFT JOIN
        (
        --Stock In Stransit To DC
        SELECT MATERIALID
          ||'_'
          ||PLANTID AS ID,
          MATERIALID,
          PLANTID,
          SUM(DELIVERY_QTY_SUOM) AS STOCK_IN_TRANSIT_QTY
        FROM INV_SAP_LIKP_LIPS_DAILY
        WHERE REFERENCE_DOC_TRIM IN
          (SELECT EBELNPURCHDOCNO
          FROM INV_SAP_PP_PO_HISTORY
          WHERE DELIVERYCOMPLETE IS NULL
          )
        AND CHANGED_ON_DATE IS NULL --THIS DATA IS IMPORTANT. IT SHOW THE REAL QTY IN TRANSIT.
        GROUP BY MATERIALID,
          MATERIALID,
          PLANTID
        )STOCK_IN_TRAINST
      ON STOCK_IN_TRAINST.ID = PPX_FC.ID
      )SPPX_FC_TRIN
    LEFT JOIN
      --TOT OPEN
      (
      SELECT MATERIAL
        ||'_'
        || PLANT AS ID,
        MATERIAL,
        PLANT,
        NVL(SUM(OPEN_QTY),0) AS TOT_OPEN_QTY
      FROM INV_SAP_SALES_VBAK_VBAP_VBUP
      GROUP BY MATERIAL,
        PLANT
      )TOT_OPEN
    ON TOT_OPEN.ID = SPPX_FC_TRIN.ID
    )SPPX_FC_TRIN_OPEN
  LEFT JOIN
    --TOT NO_COMMITTED_DATE
    (
    SELECT MATERIAL
      ||'_'
      || PLANT AS ID,
      MATERIAL,
      PLANT,
      NVL(SUM(OPEN_QTY),0) AS TOT_NO_COMMITTED_DATE_QTY
    FROM INV_SAP_SALES_VBAK_VBAP_VBUP
    WHERE MAX_COMMIT_DATE IS NULL
    GROUP BY MATERIAL,
      PLANT
    )NO_COMMITTED_DATE
  ON NO_COMMITTED_DATE.ID = SPPX_FC_TRIN_OPEN.ID
  )SPPX_FC_TRIN_OPEN_NOCM
LEFT JOIN
  (SELECT ID,
    MATERIAL,
    PLANT,
    LEAD_TIME,
    PASS_DUE_QTY,
    LT_OPEN_QTY,
    LT_WEEKS13_OPEN_QTY,
    OUT_WEEKS13_OPEN_QTY
  FROM INV_SAP_ITEM_SO_STAT
  )SO_STAT
ON SO_STAT.ID = SPPX_FC_TRIN_OPEN_NOCM.ID;



--CREATE CALCULATE TABLE FOR SALES ORDER STATISTICS
--Statics of Sales Order
CREATE VIEW VIEW_INV_SAP_IMSO_LTIN13TMP AS
SELECT ID,
  MATERIAL,
  PLANT,
  LEAD_TIME,
  PASS_DUE             AS PASS_DUE_QTY,
  (LT_OPEN             - PASS_DUE) AS LT_OPEN_QTY,
  (LT_WEEKS13_OPEN - LT_OPEN)  AS LT_WEEKS13_OPEN_QTY,
  OUT_WEEKS13_OPEN                     AS OUT_WEEKS13_OPEN_QTY
FROM
  (SELECT ID,
    MATERIAL,
    PLANT,
    LEAD_TIME,
    SUM(PASS_DUE)            AS PASS_DUE,
    SUM(LT_OPEN)             AS LT_OPEN,
    SUM(LT_WEEKS13_OPEN) AS LT_WEEKS13_OPEN,
    SUM(OUT_WEEKS13_OPEN)        AS OUT_WEEKS13_OPEN
  FROM
    (SELECT ID,
      SALES_DOC,
      MATERIAL,
      PLANT,
      LEAD_TIME,
      CASE
        WHEN COMMITTED_DATE < SYSDATE - 1
        THEN OPEN_QTY
        ELSE 0
      END PASS_DUE,
      CASE
        WHEN COMMITTED_DATE < SYSDATE + LEAD_TIME
        THEN OPEN_QTY
        ELSE 0
      END LT_OPEN,
      CASE
        WHEN COMMITTED_DATE < SYSDATE + 91
        THEN OPEN_QTY
        ELSE 0
      END LT_WEEKS13_OPEN,
      CASE
        WHEN COMMITTED_DATE > SYSDATE + 91
        THEN OPEN_QTY
        ELSE 0
      END OUT_WEEKS13_OPEN
    FROM
      (SELECT SALES_OPEN.ID,
        SALES_OPEN.SALES_DOC,
        SALES_OPEN.MATERIAL,
        SALES_OPEN.PLANT,
        SALES_OPEN.OPEN_QTY,
        SALES_OPEN.COMMITTED_DATE,
        ITEM_LT.LEAD_TIME
      FROM (
        (SELECT 
        MATERIAL||'_'||PLANT
        AS ID,
          SALESDOC AS SALES_DOC,
          MATERIAL,
          PLANT,
          OPEN_QTY,
          MAX_COMMIT_DATE AS COMMITTED_DATE
        FROM INV_SAP_SALES_VBAK_VBAP_VBUP
        )SALES_OPEN
      LEFT JOIN
        (SELECT ID, MATERIAL, LEAD_TIME FROM VIEW_INV_SAP_PP_OPT_X
        )ITEM_LT
      ON SALES_OPEN.ID = ITEM_LT.ID)
      )WHERE LEAD_TIME < 91
    )
  GROUP BY ID,
    MATERIAL,
    PLANT,
    LEAD_TIME
  );

--CREATE CALCULATE TABLE FOR SALES ORDER STATISTICS
--Statics of Sales Order
DROP VIEW VIEW_INV_SAP_IMSO_LTOUT13TMP
CREATE VIEW VIEW_INV_SAP_IMSO_LTOUT13TMP AS
SELECT ID,
  MATERIAL,
  PLANT,
  LEAD_TIME,
  PASS_DUE             AS PASS_DUE_QTY,
  (LT_OPEN             - PASS_DUE) AS LT_OPEN_QTY,
  0  AS LT_WEEKS13_OPEN_QTY,
  OUT_WEEKS13_OPEN                     AS OUT_WEEKS13_OPEN_QTY
FROM
  (SELECT ID,
    MATERIAL,
    PLANT,
    LEAD_TIME,
    SUM(PASS_DUE)            AS PASS_DUE,
    SUM(LT_OPEN)             AS LT_OPEN,
    SUM(OUT_WEEKS13_OPEN)        AS OUT_WEEKS13_OPEN
  FROM
    (SELECT ID,
      SALES_DOC,
      MATERIAL,
      PLANT,
      LEAD_TIME,
      CASE
        WHEN COMMITTED_DATE < SYSDATE - 1
        THEN OPEN_QTY
        ELSE 0
      END PASS_DUE,
      CASE
        WHEN COMMITTED_DATE < SYSDATE + LEAD_TIME
        THEN OPEN_QTY
        ELSE 0
      END LT_OPEN,
      CASE
        WHEN COMMITTED_DATE > SYSDATE + LEAD_TIME
        THEN OPEN_QTY
        ELSE 0
      END OUT_WEEKS13_OPEN
    FROM
      (SELECT SALES_OPEN.ID,
        SALES_OPEN.SALES_DOC,
        SALES_OPEN.MATERIAL,
        SALES_OPEN.PLANT,
        SALES_OPEN.OPEN_QTY,
        SALES_OPEN.COMMITTED_DATE,
        ITEM_LT.LEAD_TIME
      FROM (
        (SELECT 
        MATERIAL||'_'||PLANT
        AS ID,
          SALESDOC AS SALES_DOC,
          MATERIAL,
          PLANT,
          OPEN_QTY,
          MAX_COMMIT_DATE AS COMMITTED_DATE
        FROM INV_SAP_SALES_VBAK_VBAP_VBUP
        )SALES_OPEN
      LEFT JOIN
        (SELECT ID, MATERIAL, LEAD_TIME FROM VIEW_INV_SAP_PP_OPT_X
        )ITEM_LT
      ON SALES_OPEN.ID = ITEM_LT.ID)
      )WHERE LEAD_TIME > 91
    )
  GROUP BY ID,
    MATERIAL,
    PLANT,
    LEAD_TIME
  );
  

  
  


--Add View
CREATE VIEW VIEW_INV_SAP_ITEM_X AS 
		SELECT DISTINCT * FROM
		(SELECT ISPM.ID           AS ID,
		  ISPM.DIRECT_SHIP_PLANT AS PLANT,
		  ISPM.MATERIALID        AS MATERIAL,
		  ISMC.CATALOG_STRING1   AS CATALOG_DASH,
		  ISMC.CATALOG_STRING2   AS CATALOG_NO_DASH,
		  ISPM.DIST_CHL          AS DIST_CHL,
		  ISPM.CURRENT_SERIES    AS CURRENT_SERIES
		FROM
		  (SELECT MATERIALID
			||'_'
			||DIRECT_SHIP_PLANT AS ID,
			MATERIALID,
			DIST_CHL,
			DIRECT_SHIP_PLANT,
			CURRENT_SERIES
		  FROM INV_SAP_PP_MVKE
		  WHERE CURRENT_SERIES = 'X'
		  )ISPM
		LEFT JOIN
		  (SELECT CATALOG_STRING1,
			CATALOG_STRING2,
			MATERIALID
		  FROM INV_SAP_NODASH_MAT_CATA
		  )ISMC
		ON ISPM.MATERIALID = ISMC.MATERIALID)	
    
    CREATE VIEW VIEW_INV_SAP_PP_OPT_X AS
		SELECT *
		FROM
		  (SELECT PP_BASIC.ID,
			PP_BASIC.LAST_REVIEW,
			PP_BASIC.MATERIAL,
			ITEM_X.CATALOG_DASH,
			ITEM_X.CATALOG_NO_DASH,
			PP_BASIC.PLANT,
			PP_BASIC.MAT_DESC,
			PP_BASIC.SAFETY_STOCK,
			PP_BASIC.OH_QTY,
			PP_BASIC.UNIT,
			PP_BASIC.UNIT_COST,
			PP_BASIC.OH_QTY_INTRANSIT,
			PP_BASIC.PROD_BU,
			PP_BASIC.PROD_FAM,
			PP_BASIC.PROC_TYPE,
			PP_BASIC.STRATEGY_GRP,
			PP_BASIC.MRP_TYPE,
			PP_BASIC.PROD_SCHEDULER,
			PP_BASIC.PLANT_SP_MATL_STA,
			PP_BASIC.VENDOR_KEY,
			PP_BASIC.VENDOR_ITEM,
			PP_BASIC.MIN_INV,
			PP_BASIC.TARGET_INV,
			PP_BASIC.MAX_INV,
			PP_BASIC.LOT_SIZE_QTY,
			PP_BASIC.LOT_ROUNDING_VALUE,
			PP_BASIC.LOT_SIZE_DISLS,
			PP_BASIC.LOT_MIN_BUY,
			PP_BASIC.AVG26_USAGE_QTY,
			PP_BASIC.STDEV26_USAGE,
			PP_BASIC.AVG13_USAGE_QTY,
			PP_BASIC.STDEV13_USAGE,
			PP_BASIC.Q1_LINES,
			PP_BASIC.Q2_LINES,
			PP_BASIC.Q3_LINES,
			PP_BASIC.Q4_LINES,
			PP_BASIC.Q1_FREQ_COUNT,
			PP_BASIC.Q2_FREQ_COUNT,
			PP_BASIC.Q3_FREQ_COUNT,
			PP_BASIC.Q4_FREQ_COUNT,
			PP_BASIC.EXCHANGE_RATE,
			PP_BASIC.LEVEL_TYPE,
			PP_BASIC.OUT_QTY_W01,
			PP_BASIC.OUT_QTY_W02,
			PP_BASIC.OUT_QTY_W03,
			PP_BASIC.OUT_QTY_W04,
			PP_BASIC.OUT_QTY_W05,
			PP_BASIC.OUT_QTY_W06,
			PP_BASIC.OUT_QTY_W07,
			PP_BASIC.OUT_QTY_W08,
			PP_BASIC.OUT_QTY_W09,
			PP_BASIC.OUT_QTY_W10,
			PP_BASIC.OUT_QTY_W11,
			PP_BASIC.OUT_QTY_W12,
			PP_BASIC.OUT_QTY_W13,
			PP_BASIC.OUT_QTY_W14,
			PP_BASIC.OUT_QTY_W15,
			PP_BASIC.OUT_QTY_W16,
			PP_BASIC.OUT_QTY_W17,
			PP_BASIC.OUT_QTY_W18,
			PP_BASIC.OUT_QTY_W19,
			PP_BASIC.OUT_QTY_W20,
			PP_BASIC.OUT_QTY_W21,
			PP_BASIC.OUT_QTY_W22,
			PP_BASIC.OUT_QTY_W23,
			PP_BASIC.OUT_QTY_W24,
			PP_BASIC.OUT_QTY_W25,
			PP_BASIC.OUT_QTY_W26,
			PP_BASIC.IN_QTY_W01,
			PP_BASIC.IN_QTY_W02,
			PP_BASIC.IN_QTY_W03,
			PP_BASIC.IN_QTY_W04,
			PP_BASIC.IN_QTY_W05,
			PP_BASIC.IN_QTY_W06,
			PP_BASIC.IN_QTY_W07,
			PP_BASIC.IN_QTY_W08,
			PP_BASIC.IN_QTY_W09,
			PP_BASIC.IN_QTY_W10,
			PP_BASIC.IN_QTY_W11,
			PP_BASIC.IN_QTY_W12,
			PP_BASIC.IN_QTY_W13,
			PP_BASIC.IN_QTY_W14,
			PP_BASIC.IN_QTY_W15,
			PP_BASIC.IN_QTY_W16,
			PP_BASIC.IN_QTY_W17,
			PP_BASIC.IN_QTY_W18,
			PP_BASIC.IN_QTY_W19,
			PP_BASIC.IN_QTY_W20,
			PP_BASIC.IN_QTY_W21,
			PP_BASIC.IN_QTY_W22,
			PP_BASIC.IN_QTY_W23,
			PP_BASIC.IN_QTY_W24,
			PP_BASIC.IN_QTY_W25,
			PP_BASIC.IN_QTY_W26,
			PP_BASIC.MATERIAL_LEVEL_VALUE,
			PP_BASIC.MRP_CONTROLLER,
			PP_BASIC.MRP_CONTROLLER_KEY,
			PP_BASIC.PURCH_GROUP,
			PP_BASIC.PURCH_GROUP_KEY,
			PP_BASIC.PROD_SCHED_KEY,
			PP_BASIC.RECORDER_POINT,
			PP_BASIC.LEAD_TIME,
			PP_BASIC.PDT,
			PP_BASIC.GRT,
			ITEM_X.DIST_CHL,
			PP_BASIC.ISSUE_UOM_NUMERATOR,
			PP_BASIC.PO_UOM_NUMERATOR,
			PP_BASIC.MATL_TYPE,
			ITEM_X.CURRENT_SERIES,
			PP_BASIC.ULTIMATE_SOURCE
		  FROM
			(SELECT MATERIALID
			  ||'_'
			  ||(PLANTID - 1) AS ID,
			  LAST_REVIEW,
			  MATERIALID    AS MATERIAL,
			  (PLANTID - 1) AS PLANT,
			  MAT_DESC,
			  SAFETY_STK AS SAFETY_STOCK,
			  OH_QTY,
			  UNIT_COST,
			  OH_QTY_INTRANSIT,
			  SUBSTR(PROD_BU,0,3) AS PROD_BU,
			  PROD_FAM,
			  PROC_TYPE,
			  STRATEGY_GRP,
			  MRP_TYPE,
			  PROD_SCHEDULER,
			  SP_MATL_STAT_MMSTA AS PLANT_SP_MATL_STA,
			  SPC_PROC_KEY_SOBSL AS VENDOR_KEY,
			  MATERIALID
			  ||'_'
			  ||SUBSTR(VENDOR_NAME,0,4)           AS VENDOR_ITEM,
			  (SAFETY_STK)                        AS MIN_INV,
			  CEIL(SAFETY_STK + 0.5*LOT_SIZE_QTY) AS TARGET_INV,
			  CEIL(SAFETY_STK + 1.2*LOT_SIZE_QTY) AS MAX_INV,
			  LOT_SIZE_QTY,
			  LOT_ROUNDING_VALUE,
			  LOT_SIZE_DISLS,
        LOT_MIN_BUY,
			  AVG26_USAGE_QTY,
			  STDEV26_USAGE,
			  AVG13_USAGE_QTY,
			  STDEV13_USAGE,
			  Q1_LINES,
			  Q2_LINES,
			  Q3_LINES,
			  Q4_LINES,
			  Q1_FREQ_COUNT,
			  Q2_FREQ_COUNT,
			  Q3_FREQ_COUNT,
			  Q4_FREQ_COUNT,
			  EXCHANGE_RATE,
			  LEVEL_TYPE,
			  OUT_QTY_W01,
			  OUT_QTY_W02,
			  OUT_QTY_W03,
			  OUT_QTY_W04,
			  OUT_QTY_W05,
			  OUT_QTY_W06,
			  OUT_QTY_W07,
			  OUT_QTY_W08,
			  OUT_QTY_W09,
			  OUT_QTY_W10,
			  OUT_QTY_W11,
			  OUT_QTY_W12,
			  OUT_QTY_W13,
			  OUT_QTY_W14,
			  OUT_QTY_W15,
			  OUT_QTY_W16,
			  OUT_QTY_W17,
			  OUT_QTY_W18,
			  OUT_QTY_W19,
			  OUT_QTY_W20,
			  OUT_QTY_W21,
			  OUT_QTY_W22,
			  OUT_QTY_W23,
			  OUT_QTY_W24,
			  OUT_QTY_W25,
			  OUT_QTY_W26,
			  IN_QTY_W01,
			  IN_QTY_W02,
			  IN_QTY_W03,
			  IN_QTY_W04,
			  IN_QTY_W05,
			  IN_QTY_W06,
			  IN_QTY_W07,
			  IN_QTY_W08,
			  IN_QTY_W09,
			  IN_QTY_W10,
			  IN_QTY_W11,
			  IN_QTY_W12,
			  IN_QTY_W13,
			  IN_QTY_W14,
			  IN_QTY_W15,
			  IN_QTY_W16,
			  IN_QTY_W17,
			  IN_QTY_W18,
			  IN_QTY_W19,
			  IN_QTY_W20,
			  IN_QTY_W21,
			  IN_QTY_W22,
			  IN_QTY_W23,
			  IN_QTY_W24,
			  IN_QTY_W25,
			  IN_QTY_W26,
			  MATERIAL_LEVEL_VALUE,
			  MRP_CONTROLLER,
			  MRP_CONTROLLER_DISPO AS MRP_CONTROLLER_KEY,
			  PURCH_GROUP,
			  PURCH_GROUP_EKGRP AS PURCH_GROUP_KEY,
			  PROD_SCHED_FEVOR  AS PROD_SCHED_KEY,
			  REORDER_PT        AS RECORDER_POINT,
			  CEIL(1.4*GRT + PDT)   AS LEAD_TIME,  --Lead Time Change!!
			  PDT AS PDT,
			  GRT AS GRT,
			  MEINS_ISSUE_UOM   AS UNIT,
			  ISSUE_UOM_NUMERATOR,
			  PO_UOM_NUMERATOR,
			  MATL_TYPE_MTART AS MATL_TYPE,
			  ULTIMATE_SOURCE
			FROM INV_SAP_PP_OPTIMIZATION --WHERE MATERIALID = '100-C09KJ400 A' AND PLANTID = '5200'
			)PP_BASIC
		  LEFT JOIN
			(SELECT ID,
			  MATERIAL,
			  CATALOG_DASH,
			  CATALOG_NO_DASH,
			  DIST_CHL,
			  CURRENT_SERIES
			FROM VIEW_INV_SAP_ITEM_X --WHERE MATERIAL = '100-C09KJ400 A' AND PLANTID = '5200'
			)ITEM_X
		  ON ITEM_X.ID = PP_BASIC.ID
		  )
		WHERE CURRENT_SERIES = 'X';
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    " SELECT ID,
  PROC_TYPE,
  PLANT,
  SALES_ORG,
  SHIPPING_POINT,
  SALE_DOC_TYPE,
  SALES_DOC,
  DOC_ITEM,
  MATERIAL,
  CATALOG_DASH,
  MAT_DESC,
  MATL_TYPE,
  SAFETY_STOCK,
  STRATEGY_GRP,
  LEAD_TIME,
  BU,
  LINE_CREATED_DATE,
  REQUIRE_DATE,
  COMMITTED_DATE,
  CONFIRM_DATE,
  GAP,
  LST_ACT_GI_DATE,
  LST_DELIVERY_CREATE_DATE,
  ORDER_QTY,
  OPEN_QTY,
  SHIPPED_QTY,
  UNIT,
  (SALES_PRICE/ORDER_QTY),
  SALES_PRICE,
  (SALES_PRICE/ORDER_QTY)*(OPEN_QTY),
  CURRENCY,
  UNIT_COST,
  SOLD_TO_PARTY,
  SHIP_SOLD_TO_PARTY_NAME,
  SHIP_TO_PARTY,
  SHIP_TO_NAME,
  ROUTE,
  DELIVERY_PRIORITY,
  MRP_CONTROLLER,
  PURCH_GROUP,
  MRP_TYPE,
  DELIVERY_STATUS,
  OVER_ALL_DELIVERY_STATUS,
  VENDOR_KEY,
  STOCK_STATUS,
  REQTYPE,
  PROFIT_CENTER,
  EXCHANGE_RATE_TO_USD
FROM VIEW_INV_SAP_BACKLOG_SO
WHERE SALES_ORG IN ('5003','5007','5000')"
