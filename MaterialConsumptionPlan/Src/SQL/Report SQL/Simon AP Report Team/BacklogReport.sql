--DATE:6/22/2014
--AUTHOR:HUANG MOYUE
--BACKLOG REPORT FOR ALL PLANTS

--DASH BOARD
DROP VIEW VIEW_INV_SAP_BACKLOG_DB;
DROP TABLE INV_SAP_BACKLOG_DB;
SELECT COUNT(*) FROM INV_SAP_BACKLOG_DB;
CREATE TABLE INV_SAP_BACKLOG_DB AS
SELECT *
FROM VIEW_INV_SAP_BACKLOG_DB
WHERE PLANT IN ('5040',
  '5050',
  '5100',
  '5110',
  '5120',
  '5160',
  '5190',
  '5200',
  '5070',
  '5140') AND CHECK_KEY <> 0;
  
CREATE VIEW VIEW_INV_SAP_BACKLOG_DB AS
SELECT CUST_VEN_SO_PO.ID                                                                                    AS ID,
  CUST_VEN_SO_PO.PROC_TYPE                                                                                  AS PROC_TYPE,
  CUST_VEN_SO_PO.PLANT                                                                                      AS PLANT,
  CUST_VEN_SO_PO.MATERIAL                                                                                   AS MATERIAL,
  CUST_VEN_SO_PO.CATALOG_DASH                                                                               AS CATALOG_DASH,
  CUST_VEN_SO_PO.MAT_DESC                                                                                   AS MAT_DESC,
  CUST_VEN_SO_PO.BU                                                                                         AS BU,
  CUST_VEN_SO_PO.UNIT_COST                                                                                  AS UNIT_COST,
  CUST_VEN_SO_PO.STRATEGY_GRP                                                                               AS STRATEGY_GRP,
  CUST_VEN_SO_PO.SAFETY_STOCK                                                                               AS SAFETY_STOCK,
  CUST_VEN_SO_PO.LEAD_TIME                                                                                  AS LEAD_TIME,
  CUST_VEN_SO_PO.MRP_CONTROLLER                                                                             AS MRP_CONTROLLER,
  CUST_VEN_SO_PO.PURCH_GROUP                                                                                AS PURCH_GROUP,
  CUST_VEN_SO_PO.MATL_TYPE                                                                                  AS MATL_TYPE,
  CUST_VEN_SO_PO.MRP_TYPE                                                                                   AS MRP_TYPE,
  CEIL(CUST_VEN_SO_PO.AVG13_USAGE_QTY)                                                                      AS AVG13_USAGE_QTY,
  NVL(CUST_VEN_SO_PO.FC_AVG13_WEEK_QTY,0)                                                                   AS FC_AVG13_WEEK_QTY,
  CUST_VEN_SO_PO.MIN_INV                                                                                    AS MIN_INV,
  CUST_VEN_SO_PO.TARGET_INV                                                                                 AS TARGET_INV,
  CUST_VEN_SO_PO.MAX_INV                                                                                    AS MAX_INV,
  CUST_VEN_SO_PO.VENDOR                                                                                     AS VENDOR,
  CUST_VEN_SO_PO.VENDOR_SAFETY_STOCK                                                                        AS VENDOR_SAFETY_STOCK,
  CUST_VEN_SO_PO.VENDOR_STRATEGY_GRP                                                                        AS VENDOR_STRATEGY_GRP,
  CUST_VEN_SO_PO.VENDOR_LEAD_TIME                                                                           AS VENDOR_LEAD_TIME,
  NVL(CUST_VEN_SO_PO.VENDOR_FC_AVG13_WEEK_QTY,0)                                                            AS VENDOR_FC_AVG13_WEEK_QTY,
  NVL(CUST_VEN_SO_PO.TOT_OPEN_QTY,0)                                                                        AS TOT_OPEN_QTY,
  NVL(CUST_VEN_SO_PO.PASS_DUE_QTY,0)                                                                        AS PASS_DUE_QTY,
  NVL(CUST_VEN_SO_PO.LT_OPEN_QTY,0)                                                                         AS LT_OPEN_QTY,
  NVL(CUST_VEN_SO_PO.LT_WEEKS13_OPEN_QTY,0)                                                                 AS LT_WEEKS13_OPEN_QTY,
  NVL(CUST_VEN_SO_PO.OUT_WEEKS13_OPEN_QTY,0)                                                                AS OUT_WEEKS13_OPEN_QTY,
  NVL(CUST_VEN_SO_PO.TOT_NO_COMMITTED_DATE_QTY,0)                                                           AS TOT_NO_COMMITTED_DATE_QTY,
  NVL(CUST_VEN_SO_PO.PO_OPEN_QTY_ALL,0)                                                                     AS PO_OPEN_QTY_ALL,
  NVL(CUST_VEN_SO_PO.STOCK_IN_TRANSIT_QTY,0)                                                                AS STOCK_IN_TRANSIT_QTY,
  (NVL(CUST_VEN_SO_PO.PO_OPEN_QTY_ALL,0) - NVL(CUST_VEN_SO_PO.STOCK_IN_TRANSIT_QTY,0))                      AS UNSHIP_QTY,
  NVL(INV_STATS.TOTAL_QTY,0)                                                                                AS TOT_STOCK_QTY,
  (NVL(INV_STATS.TOTAL_QTY,0)         *NVL(CUST_VEN_SO_PO.UNIT_COST,0))                                     AS STOCK_VALUE,
  (NVL(CUST_VEN_SO_PO.TOT_OPEN_QTY,0) + NVL(CUST_VEN_SO_PO.PO_OPEN_QTY_ALL,0) + NVL(INV_STATS.TOTAL_QTY,0)) AS CHECK_KEY
FROM
  (SELECT CUSTOMER_VENDOR_SO.ID                  AS ID,
    CUSTOMER_VENDOR_SO.PROC_TYPE                 AS PROC_TYPE,
    CUSTOMER_VENDOR_SO.PLANT                     AS PLANT,
    CUSTOMER_VENDOR_SO.MATERIAL                  AS MATERIAL,
    CUSTOMER_VENDOR_SO.CATALOG_DASH              AS CATALOG_DASH,
    CUSTOMER_VENDOR_SO.MAT_DESC                  AS MAT_DESC,
    CUSTOMER_VENDOR_SO.BU                        AS BU,
    CUSTOMER_VENDOR_SO.UNIT_COST                 AS UNIT_COST,
    CUSTOMER_VENDOR_SO.STRATEGY_GRP              AS STRATEGY_GRP,
    CUSTOMER_VENDOR_SO.SAFETY_STOCK              AS SAFETY_STOCK,
    CUSTOMER_VENDOR_SO.LEAD_TIME                 AS LEAD_TIME,
    CUSTOMER_VENDOR_SO.MRP_CONTROLLER            AS MRP_CONTROLLER,
    CUSTOMER_VENDOR_SO.PURCH_GROUP               AS PURCH_GROUP,
    CUSTOMER_VENDOR_SO.MATL_TYPE                 AS MATL_TYPE ,
    CUSTOMER_VENDOR_SO.MRP_TYPE                  AS MRP_TYPE,
    CUSTOMER_VENDOR_SO.AVG13_USAGE_QTY           AS AVG13_USAGE_QTY,
    CUSTOMER_VENDOR_SO.FC_AVG13_WEEK_QTY         AS FC_AVG13_WEEK_QTY,
    CUSTOMER_VENDOR_SO.MIN_INV                   AS MIN_INV,
    CUSTOMER_VENDOR_SO.TARGET_INV                AS TARGET_INV,
    CUSTOMER_VENDOR_SO.MAX_INV                   AS MAX_INV,
    CUSTOMER_VENDOR_SO.VENDOR                    AS VENDOR,
    CUSTOMER_VENDOR_SO.VENDOR_SAFETY_STOCK       AS VENDOR_SAFETY_STOCK,
    CUSTOMER_VENDOR_SO.VENDOR_STRATEGY_GRP       AS VENDOR_STRATEGY_GRP,
    CUSTOMER_VENDOR_SO.VENDOR_LEAD_TIME          AS VENDOR_LEAD_TIME,
    CUSTOMER_VENDOR_SO.VENDOR_FC_AVG13_WEEK_QTY  AS VENDOR_FC_AVG13_WEEK_QTY,
    CUSTOMER_VENDOR_SO.TOT_OPEN_QTY              AS TOT_OPEN_QTY,
    CUSTOMER_VENDOR_SO.PASS_DUE_QTY              AS PASS_DUE_QTY,
    CUSTOMER_VENDOR_SO.LT_OPEN_QTY               AS LT_OPEN_QTY,
    CUSTOMER_VENDOR_SO.LT_WEEKS13_OPEN_QTY       AS LT_WEEKS13_OPEN_QTY,
    CUSTOMER_VENDOR_SO.OUT_WEEKS13_OPEN_QTY      AS OUT_WEEKS13_OPEN_QTY,
    CUSTOMER_VENDOR_SO.TOT_NO_COMMITTED_DATE_QTY AS TOT_NO_COMMITTED_DATE_QTY,
    CUSTOMER_VENDOR_SO.STOCK_IN_TRANSIT_QTY      AS STOCK_IN_TRANSIT_QTY,
    PO_STATS.PO_OPEN_QTY_ALL                     AS PO_OPEN_QTY_ALL
  FROM
    (SELECT CUSTOMER_VENDOR.ID                AS ID,
      CUSTOMER_VENDOR.PROC_TYPE               AS PROC_TYPE,
      CUSTOMER_VENDOR.PLANT                   AS PLANT,
      CUSTOMER_VENDOR.MATERIAL                AS MATERIAL,
      CUSTOMER_VENDOR.CATALOG_DASH            AS CATALOG_DASH,
      CUSTOMER_VENDOR.MAT_DESC                AS MAT_DESC,
      CUSTOMER_VENDOR.BU                      AS BU,
      CUSTOMER_VENDOR.UNIT_COST               AS UNIT_COST,
      CUSTOMER_VENDOR.STRATEGY_GRP            AS STRATEGY_GRP,
      CUSTOMER_VENDOR.SAFETY_STOCK            AS SAFETY_STOCK,
      CUSTOMER_VENDOR.LEAD_TIME               AS LEAD_TIME,
      CUSTOMER_VENDOR.MRP_CONTROLLER          AS MRP_CONTROLLER,
      CUSTOMER_VENDOR.PURCH_GROUP             AS PURCH_GROUP,
      CUSTOMER_VENDOR.MATL_TYPE               AS MATL_TYPE ,
      CUSTOMER_VENDOR.MRP_TYPE                AS MRP_TYPE,
      CUSTOMER_VENDOR.AVG13_USAGE_QTY         AS AVG13_USAGE_QTY,
      CUSTOMER_VENDOR.FC_AVG13_WEEK_QTY       AS FC_AVG13_WEEK_QTY,
      CUSTOMER_VENDOR.MIN_INV                 AS MIN_INV,
      CUSTOMER_VENDOR.TARGET_INV              AS TARGET_INV,
      CUSTOMER_VENDOR.MAX_INV                 AS MAX_INV,
      CUSTOMER_VENDOR.VENDOR                  AS VENDOR,
      CUSTOMER_VENDOR.VENDOR_SAFETY_STOCK     AS VENDOR_SAFETY_STOCK,
      CUSTOMER_VENDOR.VENDOR_STRATEGY_GRP     AS VENDOR_STRATEGY_GRP,
      CUSTOMER_VENDOR.VENDOR_LEAD_TIME        AS VENDOR_LEAD_TIME,
      CUSTOMER_VENDOR.ENDOR_FC_AVG13_WEEK_QTY AS VENDOR_FC_AVG13_WEEK_QTY,
      SO_STATS.TOT_OPEN_QTY                   AS TOT_OPEN_QTY,
      SO_STATS.PASS_DUE_QTY                   AS PASS_DUE_QTY,
      SO_STATS.LT_OPEN_QTY                    AS LT_OPEN_QTY,
      SO_STATS.LT_WEEKS13_OPEN_QTY            AS LT_WEEKS13_OPEN_QTY,
      SO_STATS.OUT_WEEKS13_OPEN_QTY           AS OUT_WEEKS13_OPEN_QTY,
      SO_STATS.TOT_NO_COMMITTED_DATE_QTY      AS TOT_NO_COMMITTED_DATE_QTY,
      SO_STATS.STOCK_IN_TRANSIT_QTY           AS STOCK_IN_TRANSIT_QTY
    FROM
      (SELECT CUSTOMER.ID     AS ID,
        CUSTOMER.PROC_TYPE    AS PROC_TYPE,
        CUSTOMER.PLANT        AS PLANT,
        CUSTOMER.MATERIAL     AS MATERIAL,
        CUSTOMER.CATALOG_DASH AS CATALOG_DASH,
        CUSTOMER.MAT_DESC,
        CUSTOMER.BU,
        CUSTOMER.UNIT_COST,
        CUSTOMER.STRATEGY_GRP,
        CUSTOMER.SAFETY_STOCK,
        CUSTOMER.LEAD_TIME,
        CUSTOMER.MRP_CONTROLLER,
        CUSTOMER.PURCH_GROUP,
        CUSTOMER.MATL_TYPE,
        CUSTOMER.MRP_TYPE,
        CUSTOMER.AVG13_USAGE_QTY,
        CUSTOMER.FC_AVG13_WEEK_QTY,
        CUSTOMER.MIN_INV,
        CUSTOMER.TARGET_INV,
        CUSTOMER.MAX_INV,
        VENDOR.PLANT             AS VENDOR,
        VENDOR.SAFETY_STOCK      AS VENDOR_SAFETY_STOCK,
        VENDOR.STRATEGY_GRP      AS VENDOR_STRATEGY_GRP,
        VENDOR.LEAD_TIME         AS VENDOR_LEAD_TIME,
        VENDOR.FC_AVG13_WEEK_QTY AS ENDOR_FC_AVG13_WEEK_QTY
      FROM
        (SELECT ID,
          MATERIAL,
          CATALOG_DASH,
          PLANT,
          MAT_DESC,
          SAFETY_STOCK,
          UNIT,
          PROC_TYPE,
          UNIT_COST,
          BU,
          STRATEGY_GRP,
          MRP_TYPE,
          MRP_CONTROLLER,
          PURCH_GROUP,
          VENDOR_ITEM,
          MATL_TYPE,
          MIN_INV,
          TARGET_INV,
          MAX_INV,
          LEAD_TIME,
          AVG26_USAGE_QTY,
          AVG13_USAGE_QTY,
          FC_AVG13_WEEK_QTY,
          FC_AVG26_WEEK_QTY
        FROM VIEW_INV_SAP_FC_STATS
        )CUSTOMER
      LEFT JOIN
        (SELECT ID,
          PLANT,
          SAFETY_STOCK,
          STRATEGY_GRP,
          LEAD_TIME,
          FC_AVG13_WEEK_QTY
        FROM VIEW_INV_SAP_FC_STATS
        )VENDOR
      ON VENDOR.ID = CUSTOMER.VENDOR_ITEM
      )CUSTOMER_VENDOR
    LEFT JOIN
      (SELECT ID,
        STOCK_IN_TRANSIT_QTY,
        TOT_OPEN_QTY,
        PASS_DUE_QTY,
        LT_OPEN_QTY,
        LT_WEEKS13_OPEN_QTY,
        OUT_WEEKS13_OPEN_QTY,
        TOT_NO_COMMITTED_DATE_QTY
      FROM VIEW_INV_SAP_SVD_REPORT
      )SO_STATS
    ON CUSTOMER_VENDOR.ID = SO_STATS.ID
    )CUSTOMER_VENDOR_SO
  LEFT JOIN
    (SELECT ID,
      SUM(PO_OPEN_QTY) AS PO_OPEN_QTY_ALL
    FROM VIEW_INV_SAP_BACKLOG_PO
    GROUP BY ID,
      TRANSIT_DAYS
    )PO_STATS
  ON PO_STATS.ID = CUSTOMER_VENDOR_SO.ID
  )CUST_VEN_SO_PO
LEFT JOIN
  ( SELECT ID,TOTAL_QTY,LOCATION FROM VIEW_INV_SAP_BACKLOG_INV
  )INV_STATS
ON INV_STATS.ID = CUST_VEN_SO_PO.ID;
 

--SALES_ORDERS
--VIEW_INV_SAP_BACKLOG_SO
DROP VIEW VIEW_INV_SAP_BACKLOG_SO;
DROP TABLE INV_SAP_BACKLOG_SO;
SELECT * FROM INV_SAP_BACKLOG_SO;
CREATE TABLE INV_SAP_BACKLOG_SO AS 
SELECT * FROM VIEW_INV_SAP_BACKLOG_SO;
CREATE VIEW VIEW_INV_SAP_BACKLOG_SO AS
SELECT SO_PP_BS.ID                  AS ID,
  SO_PP_BS.PROC_TYPE                AS PROC_TYPE,
  SO_PP_BS.PLANT                    AS PLANT,
  SO_PP_BS.SALES_ORG                AS SALES_ORG,
  SO_PP_BS.SHIPPING_POINT           AS SHIPPING_POINT,
  SO_PP_BS.SALE_DOC_TYPE            AS SALE_DOC_TYPE,
  SO_PP_BS.SALES_DOC                AS SALES_DOC,
  SO_PP_BS.LINE_NUM                 AS LINE_NUM,
  SO_PP_BS.MATERIAL                 AS MATERIAL,
  SO_PP_BS.CATALOG_DASH             AS CATALOG_DASH,
  SO_PP_BS.MAT_DESC                 AS MAT_DESC,
  SO_PP_BS.MATL_TYPE                AS MATL_TYPE,
  SO_PP_BS.SAFETY_STOCK             AS SAFETY_STOCK,
  SO_PP_BS.STRATEGY_GRP             AS STRATEGY_GRP,
  SO_PP_BS.LEAD_TIME                AS LEAD_TIME,
  SO_PP_BS.BU                       AS BU,
  SO_PP_BS.LINE_CREATED_DATE        AS LINE_CREATED_DATE,
  SO_PP_BS.REQUIRE_DATE             AS REQUIRE_DATE,
  SO_PP_BS.COMMITTED_DATE           AS COMMITTED_DATE,
  SO_PP_BS.CONFIRM_DATE             AS CONFIRM_DATE,
  0                                 AS GAP,
  SO_PP_BS.LST_ACT_GI_DATE          AS LST_ACT_GI_DATE,
  SO_PP_BS.LST_DELIVERY_CREATE_DATE AS LST_DELIVERY_CREATE_DATE,
  SO_PP_BS.ORDER_QTY                AS ORDER_QTY,
  SO_PP_BS.OPEN_QTY                 AS OPEN_QTY,
  SO_PP_BS.SHIPPED_QTY              AS SHIPPED_QTY,
  SO_PP_BS.UNIT                     AS UNIT,
  SO_PP_BS.PROFIT_CENTER            AS PROFIT_CENTER,
  SO_PP_BS.SALES_PRICE              AS SALES_PRICE,
  SO_PP_BS.CURRENCY                 AS CURRENCY,
  SO_PP_BS.SOLD_TO_PARTY            AS SOLD_TO_PARTY,
  SOLD_SHIP.SHIP_SOLD_TO_PARTY_NAME AS SHIP_SOLD_TO_PARTY_NAME,
  SO_PP_BS.ROUTE                    AS ROUTE,
  SO_PP_BS.DELIVERY_PRIORITY        AS DELIVERY_PRIORITY,
  SO_PP_BS.MRP_CONTROLLER           AS MRP_CONTROLLER,
  SO_PP_BS.PURCH_GROUP              AS PURCH_GROUP,
  SO_PP_BS.MRP_TYPE                 AS MRP_TYPE,
  SO_PP_BS.DELIVERY_STATUS          AS DELIVERY_STATUS,
  SO_PP_BS.OVER_ALL_DELIVERY_STATUS AS OVER_ALL_DELIVERY_STATUS,
  SO_PP_BS.VENDOR_KEY               AS VENDOR_KEY,
  SO_PP_BS.STOCK_STATUS             AS STOCK_STATUS,
  SO_PP_BS.REQTYPE                  AS REQTYPE,
  SO_PP_BS.EXCHANGE_RATE_TO_USD     AS EXCHANGE_RATE_TO_USD
FROM
  (SELECT OPEN_SO_BASIC.ID                             AS ID,
    SALES_PP_X.PROC_TYPE                               AS PROC_TYPE,
    OPEN_SO_BASIC.PLANT                                AS PLANT,
    OPEN_SO_BASIC.SALES_ORG                            AS SALES_ORG,
    OPEN_SO_BASIC.SHIPPING_POINT                       AS SHIPPING_POINT,
    OPEN_SO_BASIC.SALE_DOC_TYPE                        AS SALE_DOC_TYPE,
    OPEN_SO_BASIC.SALES_DOC                            AS SALES_DOC,
    OPEN_SO_BASIC.LINE_NUM                             AS LINE_NUM,
    OPEN_SO_BASIC.MATERIAL                             AS MATERIAL,
    SALES_PP_X.CATALOG_DASH                            AS CATALOG_DASH,
    SALES_PP_X.MAT_DESC                                AS MAT_DESC,
    SALES_PP_X.MATL_TYPE                               AS MATL_TYPE,
    SALES_PP_X.SAFETY_STOCK                            AS SAFETY_STOCK,
    SALES_PP_X.STRATEGY_GRP                            AS STRATEGY_GRP,
    SALES_PP_X.LEAD_TIME                               AS LEAD_TIME,
    OPEN_SO_BASIC.BU                                   AS BU,
    OPEN_SO_BASIC.LINE_CREATED_DATE                    AS LINE_CREATED_DATE,
    OPEN_SO_BASIC.REQUIRE_DATE                         AS REQUIRE_DATE,
    OPEN_SO_BASIC.COMMITTED_DATE                       AS COMMITTED_DATE,
    OPEN_SO_BASIC.CONFIRM_DATE                         AS CONFIRM_DATE,
    OPEN_SO_BASIC.LST_ACT_GI_DATE                      AS LST_ACT_GI_DATE,
    OPEN_SO_BASIC.LST_DELIVERY_CREATE_DATE             AS LST_DELIVERY_CREATE_DATE,
    OPEN_SO_BASIC.ORDER_QTY                            AS ORDER_QTY,
    OPEN_SO_BASIC.OPEN_QTY                             AS OPEN_QTY,
    (OPEN_SO_BASIC.ORDER_QTY - OPEN_SO_BASIC.OPEN_QTY) AS SHIPPED_QTY,
    SALES_PP_X.UNIT                                    AS UNIT,
    OPEN_SO_BASIC.PROFIT_CENTER                        AS PROFIT_CENTER,
    OPEN_SO_BASIC.SALES_PRICE                          AS SALES_PRICE,
    OPEN_SO_BASIC.CURRENCY                             AS CURRENCY,
    LPAD(OPEN_SO_BASIC.SOLD_TO_PARTY,10,'0')           AS SOLD_TO_PARTY,
    OPEN_SO_BASIC.ROUTE                                AS ROUTE,
    OPEN_SO_BASIC.DELIVERY_PRIORITY                    AS DELIVERY_PRIORITY,
    SALES_PP_X.MRP_CONTROLLER                          AS MRP_CONTROLLER,
    SALES_PP_X.PURCH_GROUP                             AS PURCH_GROUP,
    SALES_PP_X.MRP_TYPE                                AS MRP_TYPE,
    OPEN_SO_BASIC.DELIVERY_STATUS                      AS DELIVERY_STATUS,
    OPEN_SO_BASIC.OVER_ALL_DELIVERY_STATUS             AS OVER_ALL_DELIVERY_STATUS,
    SALES_PP_X.VENDOR_KEY                              AS VENDOR_KEY,
    OPEN_SO_BASIC.STOCK_STATUS                         AS STOCK_STATUS,
    OPEN_SO_BASIC.REQTYPE                              AS REQTYPE,
    OPEN_SO_BASIC.EXCHANGE_RATE_TO_USD                 AS EXCHANGE_RATE_TO_USD
  FROM
    (SELECT ID,
      SALES_DOC,
      LINE_NUM,
      MATERIAL,
      PLANT,
      SALES_ORG,
      LINE_CREATED_DATE,
      BU,
      ORDER_QTY,
      OPEN_QTY,
      PROFIT_CENTER,
      SALES_PRICE,
      CURRENCY,
      COMMITTED_DATE,
      CONFIRM_DATE,
      SOLD_TO_PARTY,
      DELIVERY_STATUS,
      OVER_ALL_DELIVERY_STATUS,
      SALE_DOC_TYPE,
      SHIPPING_POINT,
      STOCK_STATUS,
      DELIVERY_PRIORITY,
      LST_ACT_GI_DATE,
      LST_DELIVERY_CREATE_DATE,
      EXCHANGE_RATE_TO_USD,
      REQUIRE_DATE,
      REQTYPE,
      ROUTE
    FROM VIEW_INV_SAP_OPEN_SO
    WHERE SALES_ORG IN ('5003','5007')
    )OPEN_SO_BASIC
  LEFT JOIN
    (SELECT ID,
      CATALOG_DASH,
      MAT_DESC,
      SAFETY_STOCK,
      PROC_TYPE,
      UNIT,
      STRATEGY_GRP,
      MRP_TYPE,
      VENDOR_KEY,
      MRP_CONTROLLER,
      PURCH_GROUP,
      LEAD_TIME,
      MATL_TYPE
    FROM INV_SAP_PP_OPT_X
    )SALES_PP_X
  ON SALES_PP_X.ID = OPEN_SO_BASIC.ID
  )SO_PP_BS
LEFT JOIN
  (SELECT LPAD(SHIP_SOLD_TO_PARTY,10,'0') AS SHIP_SOLD_TO_PARTY,
    SHIP_SOLD_TO_PARTY_NAME
  FROM INV_SAP_SHIP_SOLD_TO
  )SOLD_SHIP
ON SO_PP_BS.SOLD_TO_PARTY = SOLD_SHIP.SHIP_SOLD_TO_PARTY;

--NEW SHIP_TO SOLD_TO TABLE 
INSERT INTO INV_SAP_SHIP_SOLD_TO 
SELECT 
SHIP_SOLD_TOPARTY,
SOLD_TO_PARTY_NAME,
SOLD_TO_CITY,
SOLD_TO_POSTAL_CODE,
SOLD_TO_COUNTRY
FROM INV_SAP_SHIP_SOLD_TO_PARTYID WHERE SHIP_TO_PARTY_NAME IS NULL;

INSERT INTO INV_SAP_SHIP_SOLD_TO
SELECT SHIP_SOLD_TOPARTY,
  SHIP_TO_PARTY_NAME,
  SHIP_TO_CITY,
  SHIP_TO_POSTAL_CODE,
  SHIP_TO_COUNTRY
FROM INV_SAP_SHIP_SOLD_TO_PARTYID; 

SELECT COUNT(*) FROM INV_SAP_SHIP_SOLD_TO;

--PURCHASE_ORDER
--VIEW_INV_SAP_OPEN_PO
DROP VIEW VIEW_INV_SAP_BACKLOG_PO;
SELECT * FROM VIEW_INV_SAP_BACKLOG_PO;
CREATE VIEW VIEW_INV_SAP_BACKLOG_PO AS
SELECT PO_HIS_LN_OP.ID           AS ID,
  PO_HIS_LN_OP.PURCHDOCCAT       AS PROCUREMENT_TYPE,
  PO_HIS_LN_OP.PLANT             AS PLANT,
  PO_HIS_LN_OP.PO                AS PO,
  PO_HIS_LN_OP.ITEM              AS ITEM,
  PO_HIS_LN_OP.MATERIAL          AS MATERIAL,
  ITEM_BASIC.CATALOG_DASH        AS CATALOG_DASH,
  ITEM_BASIC.MAT_DESC            AS MAT_DESC,
  ITEM_BASIC.PROD_BU             AS PROD_BU,
  PO_HIS_LN_OP.STRATEGY_GRP      AS STRATEGY_GRP,
  ITEM_BASIC.MATL_TYPE           AS MATL_TYPE,
  ITEM_BASIC.MRP_TYPE            AS MRP_TYPE,
  PO_HIS_LN_OP.MRP_CONTROLLER    AS MRP_CONTROLLER,
  PO_HIS_LN_OP.PURCH_GROUP       AS PURCH_GROUP,
  PO_HIS_LN_OP.PURCHDOC_TYPE     AS PURCHDOC_TYPE,
  PO_HIS_LN_OP.VENDOR            AS VENDOR,
  PO_HIS_LN_OP.PO_SO_SA_FLAG     AS FLAG,
  PO_HIS_LN_OP.CREATED_DATE      AS CREATED_DATE,
  PO_HIS_LN_OP.COMMITTED_DATE    AS MAX_COMMITTED_DATE,
  PO_HIS_LN_OP.PURHCASE_QTY      AS PURHCASE_QTY,
  PO_HIS_LN_OP.PO_OPEN_QTY       AS PO_OPEN_QTY,
  PO_HIS_LN_OP.PO_OPEN_LINE_QTY  AS PO_OPEN_LINE_COUNT,
  PO_HIS_LN_OP.TRANSIT_DAYS      AS TRANSIT_DAYS,
  PO_HIS_LN_OP.UNIT_COST         AS UNIT_COST,
  PO_HIS_LN_OP.ORDER_VALUE       AS ORDER_VALUE,
  PO_HIS_LN_OP.CURRENCY          AS CURRENCY,
  PO_HIS_LN_OP.LEAD_TIME         AS LEAD_TIME,
  PO_HIS_LN_OP.GRT               AS GRT,
  PO_HIS_LN_OP.PROC_KEY          AS PROC_KEY,
  PO_HIS_LN_OP.SHIPPING_POINT    AS SHIPPING_POINT,
  PO_HIS_LN_OP.DELIVERY_PRIORITY AS DELIVERY_PRIORITY,
  PO_HIS_LN_OP.ROUTE             AS ROUTE,
  PO_HIS_LN_OP.PR                AS PR
FROM
  (SELECT PO_HIS_LN.PO_ID       AS PO_ID,
    PO_HIS_LN.ID                AS ID,
    PO_HIS_LN.PO                AS PO,
    PO_HIS_LN.ITEM              AS ITEM,
    PO_HIS_LN.MATERIAL          AS MATERIAL,
    PO_HIS_LN.PLANT             AS PLANT,
    PO_HIS_LN.PURCHDOCCAT       AS PURCHDOCCAT,
    PO_HIS_LN.PURCHDOC_TYPE     AS PURCHDOC_TYPE,
    PO_HIS_LN.VENDOR            AS VENDOR,
    PO_HIS_LN.PURHCASE_QTY      AS PURHCASE_QTY,
    PO_HIS_LN.COMMITTED_DATE    AS COMMITTED_DATE,
    PO_HIS_LN.PO_SO_SA_FLAG     AS PO_SO_SA_FLAG,
    PO_HIS_LN.CREATED_DATE      AS CREATED_DATE,
    PO_HIS_LN.CURRENCY          AS CURRENCY,
    PO_HIS_LN.ORDER_VALUE       AS ORDER_VALUE,
    PO_HIS_LN.LEAD_TIME         AS LEAD_TIME,
    PO_HIS_LN.GRT               AS GRT,
    PO_HIS_LN.MRP_CONTROLLER    AS MRP_CONTROLLER,
    PO_HIS_LN.PROC_KEY          AS PROC_KEY,
    PO_HIS_LN.PURCH_GROUP       AS PURCH_GROUP,
    PO_HIS_LN.STRATEGY_GRP      AS STRATEGY_GRP,
    PO_HIS_LN.UNIT_COST         AS UNIT_COST,
    PO_HIS_LN.PR                AS PR,
    PO_HIS_LN.SHIPPING_POINT    AS SHIPPING_POINT,
    PO_HIS_LN.DELIVERY_PRIORITY AS DELIVERY_PRIORITY,
    PO_HIS_LN.ROUTE             AS ROUTE,
    PO_HIS_LN.TRANSIT_DAYS      AS TRANSIT_DAYS,
    PO_HIS_LN.PO_OPEN_LINE_QTY  AS PO_OPEN_LINE_QTY,
    PO_OPEN_QTY.OPEN_QTY        AS PO_OPEN_QTY
  FROM
    (SELECT PO_HIS.PO_ID       AS PO_ID,
      PO_HIS.ID                AS ID,
      PO_HIS.PO                AS PO,
      PO_HIS.ITEM              AS ITEM,
      PO_HIS.MATERIAL          AS MATERIAL,
      PO_HIS.PLANT             AS PLANT,
      PO_HIS.PURCHDOCCAT       AS PURCHDOCCAT,
      PO_HIS.PURCHDOC_TYPE     AS PURCHDOC_TYPE,
      PO_HIS.VENDOR            AS VENDOR,
      PO_HIS.PURHCASE_QTY      AS PURHCASE_QTY,
      PO_HIS.COMMITTED_DATE    AS COMMITTED_DATE,
      PO_HIS.PO_SO_SA_FLAG     AS PO_SO_SA_FLAG,
      PO_HIS.CREATED_DATE      AS CREATED_DATE,
      PO_HIS.CURRENCY          AS CURRENCY,
      PO_HIS.ORDER_VALUE       AS ORDER_VALUE,
      PO_HIS.LEAD_TIME         AS LEAD_TIME,
      PO_HIS.GRT               AS GRT,
      PO_HIS.MRP_CONTROLLER    AS MRP_CONTROLLER,
      PO_HIS.PROC_KEY          AS PROC_KEY,
      PO_HIS.PURCH_GROUP       AS PURCH_GROUP,
      PO_HIS.STRATEGY_GRP      AS STRATEGY_GRP,
      PO_HIS.UNIT_COST         AS UNIT_COST,
      PO_HIS.PR                AS PR,
      PO_HIS.SHIPPING_POINT    AS SHIPPING_POINT,
      PO_HIS.DELIVERY_PRIORITY AS DELIVERY_PRIORITY,
      PO_HIS.ROUTE             AS ROUTE,
      PO_HIS.TRANSIT_DAYS      AS TRANSIT_DAYS,
      CASE
        WHEN PO_OPEN_LINE.LINECOUNT = '1'
        THEN 1
        ELSE (PO_OPEN_LINE.LINECOUNT - 1)
      END PO_OPEN_LINE_QTY
    FROM
      (SELECT EBELNPURCHDOCNO
        ||'_'
        ||MATERIALID AS PO_ID,
        MATERIALID
        ||'_'
        ||PLANTID                  AS ID,
        MATERIALID                 AS MATERIAL,
        PLANTID                    AS PLANT,
        BSTYP_PURCHDOCCAT          AS PURCHDOCCAT,
        BSART_PURCHDOCTYPE         AS PURCHDOC_TYPE,
        LIFNR_VENDORNO             AS VENDOR,
        EBELNPURCHDOCNO            AS PO,
        EBELPPURCHITEMNO           AS ITEM,
        MENGESCHEDULEDQTY          AS PURHCASE_QTY,
        WEMNGRECEIVEDQTY           AS RECEIVED_QTY,
        DELIVERYCOMPLETE           AS DELIVERY_COMPLETE_FLAG,
        COMMITTED_DATE             AS COMMITTED_DATE,
        COMMITTEDQTY               AS COMMITTED_QTY,
        PO_SO_SA_FLAG              AS PO_SO_SA_FLAG,
        BEDATSCHEDULELINEORDERDATE AS CREATED_DATE,
        WAERS_CURRENCYKEY          AS CURRENCY,
        NETWRNETORDERVALUE         AS ORDER_VALUE,
        LT                         AS LEAD_TIME,
        GRT                        AS GRT,
        MRP_CONTROLLER             AS MRP_CONTROLLER,
        SUBSTR(SPC_PROC_KEY,-2)    AS PROC_KEY,
        PURCH_GROUP                AS PURCH_GROUP,
        STRATEGY_GRP               AS STRATEGY_GRP,
        UNIT_COST                  AS UNIT_COST,
        PURCH_REQ                  AS PR,
        SHIPPING_POINT             AS SHIPPING_POINT,
        DELIVERY_PRIORITY          AS DELIVERY_PRIORITY,
        ROUTE                      AS ROUTE,
        TRANSIT_DAYS               AS TRANSIT_DAYS
      FROM INV_SAP_PP_PO_HISTORY
      WHERE DELIVERYCOMPLETE      IS NULL
      AND ETENRPURCHDELIVSCHLINESA = '1'
      )PO_HIS
    LEFT JOIN
      (
      --PO_OPEN_LINE_QTY
      SELECT EBELNPURCHDOCNO
        ||'_'
        ||MATERIALID AS PO_ID,
        MATERIALID,
        PLANTID,
        SUM(PLANTID)/PLANTID AS LINECOUNT
      FROM INV_SAP_PP_PO_HISTORY
      GROUP BY EBELNPURCHDOCNO
        ||'_'
        ||MATERIALID,
        MATERIALID,
        PLANTID
      )PO_OPEN_LINE
    ON PO_OPEN_LINE.PO_ID = PO_HIS.PO_ID
    )PO_HIS_LN
  LEFT JOIN
    --PO_OPEN_QTY
    (
    SELECT EBELNPURCHDOCNO
      ||'_'
      ||MATERIALID AS PO_ID,
      MATERIALID,
      PLANTID,
      SUM(COMMITTEDQTY) AS OPEN_QTY
    FROM INV_SAP_PP_PO_HISTORY
    WHERE DELIVERYCOMPLETE IS NULL
    GROUP BY EBELNPURCHDOCNO
      ||'_'
      ||MATERIALID,
      MATERIALID,
      PLANTID
    )PO_OPEN_QTY
  ON PO_OPEN_QTY.PO_ID = PO_HIS_LN.PO_ID
  )PO_HIS_LN_OP
LEFT JOIN
  (SELECT ID,
    CATALOG_DASH,
    MAT_DESC,
    MRP_TYPE,
    PROD_BU,
    MATL_TYPE
  FROM INV_SAP_PP_OPT_X
  )ITEM_BASIC
ON ITEM_BASIC.ID = PO_HIS_LN_OP.ID;


--INVENTORY STATUS
--VIEW_INV_SAP_BACKLOG_INV
DROP VIEW VIEW_INV_SAP_BACKLOG_INV;
SELECT * FROM VIEW_INV_SAP_BACKLOG_INV;
CREATE VIEW VIEW_INV_SAP_BACKLOG_INV AS
SELECT INV_BASIC.ID AS ID,
  INV_BASIC.PLANT                 AS PLANT,
  INV_BASIC.MATERIAL              AS MATERIAL,
  ITEM_BASIC.CATALOG_DASH         AS CATALOG_DASH,
  ITEM_BASIC.PROD_BU              AS PROD_BU,
  ITEM_BASIC.MATL_TYPE            AS MATL_TYPE,
  ITEM_BASIC.STRATEGY_GRP         AS STRATEGY_GRP,
  ITEM_BASIC.SAFETY_STOCK         AS SAFETY_STOCK,
  INV_BASIC.TOTAL_QTY             AS TOTAL_QTY,
  INV_BASIC.LOCATIONID            AS LOCATION
FROM
  (SELECT MATERIALID
    ||'_'
    ||PLANTID     AS ID,
    MATERIALID    AS MATERIAL,
    PLANTID       AS PLANT,
    LOCATIONID    AS LOCATIONID,
    NVL(OH_QTY,0) AS TOTAL_QTY,
    ASOFDATE      AS LAST_REVIEW_DATE
  FROM INV_SAP_INVENTORY_BY_PLANT w
  )INV_BASIC
LEFT JOIN
  (SELECT ID,
    CATALOG_DASH,
    MAT_DESC,
    SAFETY_STOCK,
    UNIT,
    STRATEGY_GRP,
    PROD_BU,
    MATL_TYPE
  FROM INV_SAP_PP_OPT_X
  )ITEM_BASIC
ON ITEM_BASIC.ID = INV_BASIC.ID;


---For Dash Board
--Inv Record past 12 months
SELECT MATERIALID,
PLANTID,
OH_QTY,
TO_CHAR(ASOFDATE,'iw')
FROM INV_SAP_INVENTORY_WKS
WHERE PLANTID = '5040'
AND ASOFDATE BETWEEN TO_CHAR(SYSDATE - 192) AND TO_CHAR(SYSDATE) AND MATERIALID = '1756-IB16 A';

SELECT MATERIALID,
PLANTID,
OH_QTY,
ASOFDATE,
DW_DATE
FROM INV_SAP_INVENTORY_WKS
WHERE PLANTID = '5040'
AND ASOFDATE BETWEEN TO_CHAR(SYSDATE - 192) AND TO_CHAR(SYSDATE) AND MATERIALID = '1756-IB16 A';


--VIEW_INV_SAP_FC_STATS
CREATE VIEW VIEW_INV_SAP_FC_STATS AS 
  SELECT ITEM_BASIC_PP_FC13.ID,
    ITEM_BASIC_PP_FC13.LAST_REVIEW,
    ITEM_BASIC_PP_FC13.MATERIAL,
    ITEM_BASIC_PP_FC13.CATALOG_DASH,
    ITEM_BASIC_PP_FC13.CATALOG_NO_DASH,
    ITEM_BASIC_PP_FC13.PLANT,
    ITEM_BASIC_PP_FC13.MAT_DESC,
    ITEM_BASIC_PP_FC13.SAFETY_STOCK,
    ITEM_BASIC_PP_FC13.OH_QTY,
    ITEM_BASIC_PP_FC13.UNIT,
    ITEM_BASIC_PP_FC13.PROC_TYPE,
    ITEM_BASIC_PP_FC13.UNIT_COST,
    ITEM_BASIC_PP_FC13.BU,
    ITEM_BASIC_PP_FC13.STRATEGY_GRP,
    ITEM_BASIC_PP_FC13.MRP_TYPE,
    ITEM_BASIC_PP_FC13.MRP_CONTROLLER,
    ITEM_BASIC_PP_FC13.PURCH_GROUP,
    ITEM_BASIC_PP_FC13.VENDOR_ITEM,
    ITEM_BASIC_PP_FC13.MATL_TYPE,
    ITEM_BASIC_PP_FC13.MIN_INV,
    ITEM_BASIC_PP_FC13.TARGET_INV,
    ITEM_BASIC_PP_FC13.MAX_INV,
    ITEM_BASIC_PP_FC13.LEAD_TIME,
    ITEM_BASIC_PP_FC13.AVG26_USAGE_QTY,
    ITEM_BASIC_PP_FC13.AVG13_USAGE_QTY,
    ITEM_BASIC_PP_FC13.FC_AVG13_WEEK_QTY,
    FC_AVG26_WEEK.FC_AVG26_WEEK_QTY
  FROM
    (SELECT ITEM_BASIC_PP.ID,
      ITEM_BASIC_PP.LAST_REVIEW,
      ITEM_BASIC_PP.MATERIAL,
      ITEM_BASIC_PP.CATALOG_DASH,
      ITEM_BASIC_PP.CATALOG_NO_DASH,
      ITEM_BASIC_PP.PLANT,
      ITEM_BASIC_PP.MAT_DESC,
      ITEM_BASIC_PP.SAFETY_STOCK,
      ITEM_BASIC_PP.UNIT,
      ITEM_BASIC_PP.OH_QTY,
      ITEM_BASIC_PP.PROC_TYPE,
      ITEM_BASIC_PP.UNIT_COST,
      ITEM_BASIC_PP.BU AS BU,
      ITEM_BASIC_PP.STRATEGY_GRP,
      ITEM_BASIC_PP.MRP_TYPE,
      ITEM_BASIC_PP.MRP_CONTROLLER,
      ITEM_BASIC_PP.PURCH_GROUP,
      ITEM_BASIC_PP.VENDOR_ITEM,
      ITEM_BASIC_PP.MATL_TYPE,
      ITEM_BASIC_PP.MIN_INV,
      ITEM_BASIC_PP.TARGET_INV,
      ITEM_BASIC_PP.MAX_INV,
      ITEM_BASIC_PP.LEAD_TIME,
      ITEM_BASIC_PP.AVG26_USAGE_QTY,
      ITEM_BASIC_PP.AVG13_USAGE_QTY,
      FC_AVG13_WEEK.FC_AVG13_WEEK_QTY
    FROM
      (SELECT ID,
        LAST_REVIEW,
        MATERIAL,
        CATALOG_DASH,
        CATALOG_NO_DASH,
        PLANT,
        MAT_DESC,
        SAFETY_STOCK,
        UNIT,
        PROC_TYPE,
        UNIT_COST,
        SUBSTR(PROD_BU,0,3) AS BU,
        STRATEGY_GRP,
        MRP_TYPE,
        MRP_CONTROLLER,
        PURCH_GROUP,
        VENDOR_ITEM,
        OH_QTY,
        MATL_TYPE,
        MIN_INV,
        TARGET_INV,
        MAX_INV,
        LEAD_TIME,
        AVG26_USAGE_QTY,
        AVG13_USAGE_QTY
      FROM INV_SAP_PP_OPT_X
      )ITEM_BASIC_PP
    LEFT JOIN
      (SELECT MATERIALID
        ||'_'
        ||PLANTID                           AS ID,
        MATERIALID                          AS MATERIALID,
        PLANTID                             AS PLANTID,
        CEIL(SUM(PLNMG_PLANNEDQUANTITY)/13) AS FC_AVG13_WEEK_QTY
      FROM INV_SAP_PP_FRCST_PBIM_PBED
      WHERE (PDATU_DELIV_ORDFINISHDATE BETWEEN TO_CHAR(sysdate) AND TO_CHAR(sysdate + 91))
      AND VERSBP_VERSION = '55'
      GROUP BY MATERIALID,
        PLANTID
      )FC_AVG13_WEEK
    ON FC_AVG13_WEEK.ID = ITEM_BASIC_PP.ID
    )ITEM_BASIC_PP_FC13
  LEFT JOIN
    (SELECT MATERIALID
      ||'_'
      ||PLANTID                           AS ID,
      MATERIALID                          AS MATERIALID,
      PLANTID                             AS PLANTID,
      CEIL(SUM(PLNMG_PLANNEDQUANTITY)/26) AS FC_AVG26_WEEK_QTY
    FROM INV_SAP_PP_FRCST_PBIM_PBED
    WHERE (PDATU_DELIV_ORDFINISHDATE BETWEEN TO_CHAR(sysdate) AND TO_CHAR(sysdate + 182))
    AND VERSBP_VERSION = '55'
    GROUP BY MATERIALID,
      PLANTID
    )FC_AVG26_WEEK
  ON ITEM_BASIC_PP_FC13.ID = FC_AVG26_WEEK.ID;