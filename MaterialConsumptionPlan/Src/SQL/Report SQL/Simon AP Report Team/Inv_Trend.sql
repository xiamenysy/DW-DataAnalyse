--DATE:08142014
--AUTHOR:HUANG MOYUE
--INV TREND

DROP VIEW VIEW_INV_SAP_INV_TREND;
CREATE VIEW VIEW_INV_SAP_INV_TREND AS
SELECT 
  SYSDATE AS REC_DATE,
  CUSTOMER_SOP.ID                                                                                AS ID,
  CUSTOMER_SOP.PROC_TYPE                                                                              AS PROC_TYPE,
  CUSTOMER_SOP.PLANT                                                                                  AS PLANT,
  CUSTOMER_SOP.MATERIAL                                                                               AS MATERIAL,
  CUSTOMER_SOP.CATALOG_DASH                                                                           AS CATALOG_DASH,
  CUSTOMER_SOP.MAT_DESC                                                                               AS MAT_DESC,
  CUSTOMER_SOP.BU                                                                                     AS BU,
  CUSTOMER_SOP.UNIT_COST                                                                              AS UNIT_COST,
  CUSTOMER_SOP.STRATEGY_GRP                                                                           AS STRATEGY_GRP,
  CUSTOMER_SOP.SAFETY_STOCK                                                                           AS SAFETY_STOCK,
  CUSTOMER_SOP.LEAD_TIME                                                                              AS LEAD_TIME,
  CUSTOMER_SOP.MRP_CONTROLLER                                                                         AS MRP_CONTROLLER,
  CUSTOMER_SOP.PURCH_GROUP                                                                            AS PURCH_GROUP,
  CUSTOMER_SOP.MATL_TYPE                                                                              AS MATL_TYPE ,
  CUSTOMER_SOP.MRP_TYPE                                                                               AS MRP_TYPE,
  CUSTOMER_SOP.AVG13_USAGE_QTY                                                                        AS AVG13_USAGE_QTY,
  CUSTOMER_SOP.FC_AVG13_WEEK_QTY                                                                      AS FC_AVG13_WEEK_QTY,
  CUSTOMER_SOP.AVG26_USAGE_QTY                                                                        AS AVG26_USAGE_QTY,
  CUSTOMER_SOP.FC_AVG26_WEEK_QTY                                                                      AS FC_AVG26_WEEK_QTY,
  CUSTOMER_SOP.TOT_OPEN_QTY                                                                           AS TOT_OPEN_QTY,
  NVL(CUSTOMER_SOP.UNIT_COST,0)*NVL(CUSTOMER_SOP.TOT_OPEN_QTY,0)                                      AS SO_OPEN_VAL,
  CUSTOMER_SOP.PO_OPEN_QTY_ALL                                                                        AS PO_OPEN_QTY_ALL,
  CUSTOMER_SOP.STOCK_IN_TRANSIT_QTY                                                                   AS STOCK_IN_TRANSIT_QTY,
  NVL(CUSTOMER_SOP.UNIT_COST,0)*NVL(CUSTOMER_SOP.PO_OPEN_QTY_ALL,0)                                   AS PO_OPEN_VAL,
  NVL(CUSTOMER_SOP.UNIT_COST,0)*NVL(CUSTOMER_SOP.STOCK_IN_TRANSIT_QTY,0)                              AS SIT_VAL,
  INV_STATS.TOTAL_QTY                                                                                 AS INV_TOTAL_QTY,
  NVL(CUSTOMER_SOP.UNIT_COST,0)*NVL(INV_STATS.TOTAL_QTY,0)                                            AS INV_TOTAL_VAL,
  (NVL(INV_STATS.TOTAL_QTY,0)  +NVL(CUSTOMER_SOP.PO_OPEN_QTY_ALL,0)+NVL(CUSTOMER_SOP.TOT_OPEN_QTY,0)) AS KEY
FROM
  (SELECT CUSTOMER_SO.ID          AS ID,
    CUSTOMER_SO.PROC_TYPE         AS PROC_TYPE,
    CUSTOMER_SO.PLANT             AS PLANT,
    CUSTOMER_SO.MATERIAL          AS MATERIAL,
    CUSTOMER_SO.CATALOG_DASH      AS CATALOG_DASH,
    CUSTOMER_SO.MAT_DESC          AS MAT_DESC,
    CUSTOMER_SO.PROD_BU           AS BU,
    CUSTOMER_SO.UNIT_COST         AS UNIT_COST,
    CUSTOMER_SO.STRATEGY_GRP      AS STRATEGY_GRP,
    CUSTOMER_SO.SAFETY_STOCK      AS SAFETY_STOCK,
    CUSTOMER_SO.LEAD_TIME         AS LEAD_TIME,
    CUSTOMER_SO.MRP_CONTROLLER    AS MRP_CONTROLLER,
    CUSTOMER_SO.PURCH_GROUP       AS PURCH_GROUP,
    CUSTOMER_SO.MATL_TYPE         AS MATL_TYPE ,
    CUSTOMER_SO.MRP_TYPE          AS MRP_TYPE,
    CUSTOMER_SO.AVG13_USAGE_QTY   AS AVG13_USAGE_QTY,
    CUSTOMER_SO.FC_AVG13_WEEK_QTY AS FC_AVG13_WEEK_QTY,
    CUSTOMER_SO.AVG26_USAGE_QTY   AS AVG26_USAGE_QTY,
    CUSTOMER_SO.FC_AVG26_WEEK_QTY AS FC_AVG26_WEEK_QTY,
    CUSTOMER_SO.TOT_OPEN_QTY      AS TOT_OPEN_QTY,
    PO_STATS.PO_OPEN_QTY_ALL      AS PO_OPEN_QTY_ALL,
    PO_STATS.STOCK_IN_TRANSIT_QTY AS STOCK_IN_TRANSIT_QTY
  FROM
    (SELECT CUSTOMER.ID,
      CUSTOMER.PROC_TYPE,
      CUSTOMER.PLANT,
      CUSTOMER.MATERIAL,
      CUSTOMER.CATALOG_DASH,
      CUSTOMER.MAT_DESC,
      CUSTOMER.PROD_BU,
      CUSTOMER.UNIT_COST,
      CUSTOMER.STRATEGY_GRP,
      CUSTOMER.SAFETY_STOCK,
      CUSTOMER.LEAD_TIME,
      CUSTOMER.MRP_CONTROLLER,
      CUSTOMER.PURCH_GROUP,
      CUSTOMER.MATL_TYPE,
      CUSTOMER.MRP_TYPE,
      CUSTOMER.AVG13_USAGE_QTY,
      CUSTOMER.FC_AVG13_WEEK_QTY,
      CUSTOMER.AVG26_USAGE_QTY,
      CUSTOMER.FC_AVG26_WEEK_QTY,
      SO_STATS.TOT_OPEN_QTY
    FROM
      (SELECT ID,
        MATERIAL,
        CATALOG_DASH,
        PLANT,
        MAT_DESC,
        SAFETY_STOCK,
        UNIT,
        PROC_TYPE,
        UNIT_COST,
        PROD_BU,
        STRATEGY_GRP,
        MRP_TYPE,
        MRP_CONTROLLER,
        PURCH_GROUP,
        MATL_TYPE,
        LEAD_TIME,
        AVG26_USAGE_QTY,
        AVG13_USAGE_QTY,
        FC_AVG13_WEEK_QTY,
        FC_AVG26_WEEK_QTY
      FROM VIEW_INV_SAP_FC00_STATS
      )CUSTOMER
    LEFT JOIN
      (SELECT ID, TOT_OPEN_QTY FROM VIEW_INV_SAP_ITEM_SO_STAT_U
      )SO_STATS
    ON CUSTOMER.ID = SO_STATS.ID
    )CUSTOMER_SO
  LEFT JOIN
    (SELECT ID,
      SUM(PO_OPEN_QTY) AS PO_OPEN_QTY_ALL,
      STOCK_IN_TRANSIT_QTY --Add Here
    FROM VIEW_INV_SAP_BACKLOG_PO
    GROUP BY ID,
      STOCK_IN_TRANSIT_QTY
    )PO_STATS
  ON PO_STATS.ID = CUSTOMER_SO.ID
  )CUSTOMER_SOP
LEFT JOIN
  (SELECT ID,TOTAL_QTY FROM VIEW_INV_SAP_BACKLOG_INV
  )INV_STATS
ON INV_STATS.ID = CUSTOMER_SOP.ID;

---INV TREND
SELECT PROC_TYPE,
  PLANT,
  MATERIAL,
  CATALOG_DASH,
  BU,
  CEIL(NVL(UNIT_COST,0)),
  STRATEGY_GRP,
  SAFETY_STOCK,
  LEAD_TIME,
  MATL_TYPE,
  MRP_TYPE,
  NVL(AVG13_USAGE_QTY,0),
  NVL(FC_AVG13_WEEK_QTY,0),
  NVL(AVG26_USAGE_QTY,0),
  NVL(FC_AVG26_WEEK_QTY,0),
  NVL(TOT_OPEN_QTY,0),
  CEIL(NVL(SO_OPEN_VAL,0)),
  CEIL(NVL(PO_OPEN_QTY_ALL,0)),
  NVL(STOCK_IN_TRANSIT_QTY,0),
  CEIL(NVL(PO_OPEN_VAL,0)),
  CEIL(NVL(SIT_VAL,0)),
  NVL(INV_TOTAL_QTY,0),
  CEIL(NVL(INV_TOTAL_VAL,0))
FROM VIEW_INV_SAP_INV_TREND
WHERE KEY <> 0;

--Rec this view every day
DROP TABLE INV_SAP_INV_TREND;
CREATE TABLE INV_SAP_INV_TREND AS 
SELECT *
FROM VIEW_INV_SAP_INV_TREND
WHERE KEY <> 0;

---hst inv record
SELECT * FROM INV_SAP_INV_REC;
DROP TABLE INV_SAP_INV_REC
TRUNCATE TABLE INV_SAP_INV_REC;
CREATE TABLE INV_SAP_INV_REC AS SELECT * FROM INV_SAP_INV_REC_TMP;
TRUNCATE TABLE INV_SAP_INV_REC_TMP;
CREATE TABLE INV_SAP_INV_REC_TMP AS
SELECT DISTINCT INV.INV_ID                                                             AS INV_ID,
  INV.ID                                                                               AS ID,
  INV.REC_DATE                                                                         AS REC_DATE,
  INV.PLANTID                                                                          AS PLANTID,
  INV.MATERIALID                                                                       AS MATERIAL,
  PP.CATALOG_DASH                                                                      AS CATALOG_DASH,
  PP.SAFETY_STOCK                                                                      AS SAFETY_STOCK,
  PP.UNIT_COST                                                                         AS UNIT_COST,
  PP.STRATEGY_GRP                                                                      AS STRATEGY_GRP,
  PP.PROD_BU                                                                           AS PROD_BU,
  PP.PROD_FAM                                                                          AS PROD_FAM,
  PP.MATL_TYPE                                                                         AS MATL_TYPE,
  NVL(INV.OH_QTY,0)                                                                    AS OH_QTY,
  NVL(PP.MIN_INV,0)                                                                    AS MIN_INV,
  NVL(PP.TARGET_INV,0)                                                                 AS TARGET_INV,
  NVL(PP.MAX_INV,0)                                                                    AS MAX_INV,
  (NVL(INV.OH_QTY,0)    *NVL(PP.UNIT_COST,0))                                          AS OH_VAL,
  (NVL(PP.MIN_INV,0)    *NVL(PP.UNIT_COST,0))                                          AS MIN_INV_VAL,
  (NVL(PP.TARGET_INV,0) *NVL(PP.UNIT_COST,0))                                          AS TARGET_INV_VAL,
  (NVL(PP.MAX_INV,0)    *NVL(PP.UNIT_COST,0))                                          AS MAX_INV_VAL,
  (NVL(INV.OH_QTY,0)    *NVL(PP.UNIT_COST,0) - NVL(PP.MAX_INV,0) *NVL(PP.UNIT_COST,0)) AS OVER_MAX_VAL
FROM
  (SELECT SYSDATE
    ||'_'
    ||MATERIALID
    ||'_'
    ||PLANTID AS INV_ID,
    MATERIALID
    ||'_'
    ||PLANTID AS ID,
    SYSDATE   AS REC_DATE,
    MATERIALID,
    PLANTID,
    OH_QTY
  FROM INV_SAP_INVENTORY_BY_PLANT
  WHERE PLANTID IN ('||5040||', '||5050||', '||5100||', '||5110||', '||5120||', '||5160||', '||5190||', '||5200||','||5070||','||5140||','||5180||','||5150||','||5130||')
  )INV
LEFT JOIN
  (SELECT ID,
    MATERIAL,
    CATALOG_DASH,
    PLANT,
    SAFETY_STOCK,
    UNIT,
    UNIT_COST,
    STRATEGY_GRP,
    PROD_BU,
    PROD_FAM,
    MATL_TYPE,
    MIN_INV,
    TARGET_INV,
    MAX_INV,
    LEAD_TIME
  FROM INV_SAP_PP_OPT_X 
  )PP
ON PP.ID = INV.ID;

SELECT COUNT(*) FROM INV_SAP_INV_REC;

CREATE TABLE EXCEL_OUTSOURCE.INV_SAP_INV_REC AS 
SELECT * FROM INV_SAP_INV_REC WHERE REC_DATE BETWEEN ('21-AUG-14') AND ('22-AUG-14') AND INV_ID = '22-AUG-14_PN-C76696_5200'

--Just the tmp table that change the table structure
INSERT INTO INV_SAP_INV_REC_TMP
SELECT INV_BS.INV_ID,
  INV_BS.ID,
  INV_BS.REC_DATE,
  INV_BS.PLANTID,
  INV_BS.MATERIAL,
  INV_BS.CATALOG_DASH,
  INV_BS.SAFETY_STOCK,
  INV_BS.UNIT_COST,
  PP.STRATEGY_GRP,
  PP.PROD_BU,
  PP.PROD_FAM,
  INV_BS.MATL_TYPE,
  INV_BS.OH_QTY,
  INV_BS.MIN_INV,
  INV_BS.TARGET_INV,
  INV_BS.MAX_INV,
  INV_BS.OH_VAL,
  INV_BS.MIN_INV_VAL,
  INV_BS.TARGET_INV_VAL,
  INV_BS.MAX_INV_VAL,
  INV_BS.OVER_MAX_VAL
FROM
  (SELECT INV_ID,
    ID,
    REC_DATE,
    PLANTID,
    MATERIAL,
    CATALOG_DASH,
    SAFETY_STOCK,
    UNIT_COST,
    MATL_TYPE,
    OH_QTY,
    MIN_INV,
    TARGET_INV,
    MAX_INV,
    OH_VAL,
    MIN_INV_VAL,
    TARGET_INV_VAL,
    MAX_INV_VAL,
    OVER_MAX_VAL
  FROM INV_SAP_INV_REC 
  )INV_BS
LEFT JOIN
  ( SELECT ID,STRATEGY_GRP, PROD_BU, PROD_FAM FROM INV_SAP_PP_OPT_X
  )PP
ON PP.ID = INV_BS.ID;
  

--12 weeks pre oh_val

SELECT REC_DATE,
  PLANTID,
  MATERIAL,
  CATALOG_DASH,
  SAFETY_STOCK,
  UNIT_COST,
  MATL_TYPE,
  OH_QTY,
  MIN_INV,
  TARGET_INV,
  MAX_INV,
  OH_VAL,
  MIN_INV_VAL,
  TARGET_INV_VAL,
  MAX_INV_VAL,
  OVER_MAX_VAL,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 2) AND TO_CHAR(SYSDATE - 1)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK1,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 9) AND TO_CHAR(SYSDATE - 8)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK2,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 16) AND TO_CHAR(SYSDATE - 15)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK3,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 23) AND TO_CHAR(SYSDATE - 22)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK4,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 30) AND TO_CHAR(SYSDATE - 29)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK5,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 37) AND TO_CHAR(SYSDATE - 36)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK6,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 44) AND TO_CHAR(SYSDATE - 43)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK7,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 51) AND TO_CHAR(SYSDATE - 50)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK8,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 58) AND TO_CHAR(SYSDATE - 57)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK9,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 65) AND TO_CHAR(SYSDATE - 64)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK10,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 72) AND TO_CHAR(SYSDATE - 71)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK11,
  CASE
    WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 79) AND TO_CHAR(SYSDATE - 78)
    THEN PRE_OH_VAL
    ELSE 0
  END PRE_OH_WEEK12
FROM
  (SELECT INVTO.REC_DATE,
    INVTO.PLANTID,
    INVTO.MATERIAL,
    INVTO.CATALOG_DASH,
    INVTO.SAFETY_STOCK,
    INVTO.UNIT_COST,
    INVTO.MATL_TYPE,
    INVTO.OH_QTY,
    INVTO.MIN_INV,
    INVTO.TARGET_INV,
    INVTO.MAX_INV,
    INVTO.OH_VAL,
    INVTO.MIN_INV_VAL,
    INVTO.TARGET_INV_VAL,
    INVTO.MAX_INV_VAL,
    INVTO.OVER_MAX_VAL,
    INV_PRE.PRE_REC_DATE,
    INV_PRE.PRE_OH_VAL
  FROM
    (SELECT ID,
      REC_DATE,
      PLANTID,
      MATERIAL,
      CATALOG_DASH,
      SAFETY_STOCK,
      UNIT_COST,
      MATL_TYPE,
      OH_QTY,
      MIN_INV,
      TARGET_INV,
      MAX_INV,
      OH_VAL,
      MIN_INV_VAL,
      TARGET_INV_VAL,
      MAX_INV_VAL,
      OVER_MAX_VAL
    FROM INV_SAP_INV_REC
    WHERE REC_DATE BETWEEN TO_CHAR(SYSDATE) AND TO_CHAR(SYSDATE + 1)
    )INVTO
  LEFT JOIN
    (SELECT ID,
      REC_DATE AS PRE_REC_DATE,
      OH_VAL   AS PRE_OH_VAL
    FROM INV_SAP_INV_REC
    WHERE REC_DATE < TO_CHAR(SYSDATE)
    )INV_PRE
  ON INV_PRE.ID = INVTO.ID
  )
WHERE MATERIAL = 'PN-C76223'



----BY BU LEVEL INV STATS
--INV_SAP_INV_STATS
SELECT REC_DATE_DATE,
PLANT,
STRATEGY_GRP,
PROD_BU,
MATL_TYPE,
TOT_PLANT_VAL
FROM
(
SELECT 
  TO_CHAR(REC_DATE,'MM/DD/YYYY') AS REC_DATE_DATE,
  TO_CHAR(REC_DATE,'D') AS REC_DATE_WK,
  PLANTID AS PLANT,
  STRATEGY_GRP AS STRATEGY_GRP,
  PROD_BU AS PROD_BU,
  MATL_TYPE AS MATL_TYPE,
  CEIL(SUM(OH_VAL)) AS TOT_PLANT_VAL
FROM INV_SAP_INV_REC WHERE OH_QTY <> 0
GROUP BY REC_DATE,
  PLANTID,
  STRATEGY_GRP,
  PROD_BU,
  MATL_TYPE
)WHERE REC_DATE_WK = '2';

--INV Detail
  SUM(PRE_OH_WEEK1),
  SUM(PRE_OH_WEEK2),
  SUM(PRE_OH_WEEK3),
  SUM(PRE_OH_WEEK4),
  SUM(PRE_OH_WEEK5),
  SUM(PRE_OH_WEEK6),
  SUM(PRE_OH_WEEK7),
  SUM(PRE_OH_WEEK8),
  SUM(PRE_OH_WEEK9),
  SUM(PRE_OH_WEEK10),
  SUM(PRE_OH_WEEK11),
  SUM(PRE_OH_WEEK12)
  
SELECT REC_DATE,
  PLANTID,
  MATERIAL,
  CATALOG_DASH,
  STRATEGY_GRP,
  SAFETY_STOCK,
  UNIT_COST,
  MATL_TYPE,
  OH_QTY,
  MIN_INV,
  TARGET_INV,
  MAX_INV,
  OH_VAL,
  MIN_INV_VAL,
  TARGET_INV_VAL,
  MAX_INV_VAL,
  OVER_MAX_VAL,
  NVL(UNIT_COST,0)*NVL(SUM(PRE_OH_WEEK1), 0) AS PRE_OH_WEEK1_VAL,
  SUM(PRE_OH_WEEK1),
  SUM(PRE_OH_WEEK2),
  SUM(PRE_OH_WEEK3),
  SUM(PRE_OH_WEEK4),
  SUM(PRE_OH_WEEK5),
  SUM(PRE_OH_WEEK6),
  SUM(PRE_OH_WEEK7),
  SUM(PRE_OH_WEEK8),
  SUM(PRE_OH_WEEK9),
  SUM(PRE_OH_WEEK10),
  SUM(PRE_OH_WEEK11),
  SUM(PRE_OH_WEEK12)
FROM
  (SELECT REC_DATE,
    PLANTID,
    MATERIAL,
    CATALOG_DASH,
    SAFETY_STOCK,
    UNIT_COST,
    MATL_TYPE,
    OH_QTY,
    STRATEGY_GRP,
    MIN_INV,
    TARGET_INV,
    MAX_INV,
    OH_VAL,
    MIN_INV_VAL,
    TARGET_INV_VAL,
    MAX_INV_VAL,
    OVER_MAX_VAL,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 7) AND TO_CHAR(SYSDATE - 6)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK1,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 14) AND TO_CHAR(SYSDATE - 13)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK2,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 21) AND TO_CHAR(SYSDATE - 20)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK3,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 28) AND TO_CHAR(SYSDATE - 27)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK4,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 35) AND TO_CHAR(SYSDATE - 34)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK5,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 42) AND TO_CHAR(SYSDATE - 41)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK6,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 49) AND TO_CHAR(SYSDATE - 48)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK7,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 56) AND TO_CHAR(SYSDATE - 55)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK8,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 63) AND TO_CHAR(SYSDATE - 62)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK9,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 70) AND TO_CHAR(SYSDATE - 69)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK10,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 77) AND TO_CHAR(SYSDATE - 76)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK11,
    CASE
      WHEN PRE_REC_DATE BETWEEN TO_CHAR(SYSDATE - 84) AND TO_CHAR(SYSDATE - 83)
      THEN PRE_OH_VAL
      ELSE 0
    END PRE_OH_WEEK12
  FROM
  SELECT * FROM
    (SELECT 
      INVTO.ID,
      INVTO.REC_DATE,
      INVTO.PLANTID,
      INVTO.MATERIAL,
      INVTO.CATALOG_DASH,
      INVTO.SAFETY_STOCK,
      INVTO.UNIT_COST,
      INVTO.MATL_TYPE,
      INVTO.OH_QTY,
      INVTO.STRATEGY_GRP,
      INVTO.MIN_INV,
      INVTO.TARGET_INV,
      INVTO.MAX_INV,
      INVTO.OH_VAL,
      INVTO.MIN_INV_VAL,
      INVTO.TARGET_INV_VAL,
      INVTO.MAX_INV_VAL,
      INVTO.OVER_MAX_VAL,
      INV_PRE.PRE_REC_DATE,
      INV_PRE.PRE_OH_VAL
    FROM
      (SELECT ID,
        REC_DATE,
        PLANTID,
        MATERIAL,
        CATALOG_DASH,
        SAFETY_STOCK,
        UNIT_COST,
        STRATEGY_GRP,
        MATL_TYPE,
        OH_QTY,
        MIN_INV,
        TARGET_INV,
        MAX_INV,
        OH_VAL,
        MIN_INV_VAL,
        TARGET_INV_VAL,
        MAX_INV_VAL,
        OVER_MAX_VAL
      FROM INV_SAP_INV_REC
      WHERE REC_DATE BETWEEN TO_CHAR(SYSDATE) AND TO_CHAR(SYSDATE + 1) 
      AND OH_QTY <> 0
      )INVTO
    LEFT JOIN
      (SELECT 
        ID,
        PRE_REC_DATE,
        PRE_OH_VAL
      FROM
        (SELECT ID,
          REC_DATE AS PRE_REC_DATE,
          TO_CHAR(REC_DATE,'D')          AS REC_DATE_WK,
          PLANTID                        AS PLANT,
          OH_QTY                         AS PRE_OH_VAL
        FROM INV_SAP_INV_REC WHERE ID = '1756-OB16D A_5190'
        WHERE OH_QTY <> 0  and ID = '1756-OB16D A_5190'
        )
      WHERE REC_DATE_WK = '2' 
      )INV_PRE
    ON INV_PRE.ID = INVTO.ID
    ) where ID = '1756-OB16D A_5190'
  )GROUP BY
  REC_DATE,
  PLANTID,
  MATERIAL,
  CATALOG_DASH,
  STRATEGY_GRP,
  SAFETY_STOCK,
  UNIT_COST,
  MATL_TYPE,
  OH_QTY,
  MIN_INV,
  TARGET_INV,
  MAX_INV,
  OH_VAL,
  MIN_INV_VAL,
  TARGET_INV_VAL,
  MAX_INV_VAL,
  OVER_MAX_VAL
  
  
  
  
  
  "SELECT REC_DATE_DATE,
PLANT,
STRATEGY_GRP,
PROD_BU,
MATL_TYPE,
TOT_PLANT_VAL
FROM
(
SELECT 
  TO_CHAR(REC_DATE,'MM/DD/YYYY') AS REC_DATE_DATE,
  TO_CHAR(REC_DATE,'D') AS REC_DATE_WK,
  PLANTID AS PLANT,
  STRATEGY_GRP AS STRATEGY_GRP,
  PROD_BU AS PROD_BU,
  MATL_TYPE AS MATL_TYPE,
  CEIL(SUM(OH_VAL)) AS TOT_PLANT_VAL
FROM INV_SAP_INV_REC WHERE OH_QTY <> 0
GROUP BY REC_DATE,
  PLANTID,
  STRATEGY_GRP,
  PROD_BU,
  MATL_TYPE
)WHERE REC_DATE_WK = '2'"

  
  
  
SELECT REC_DATE_DATE,
PLANT,
STRATEGY_GRP,
PROD_BU,
MATL_TYPE,
TOT_MIN_INV_VAL,
TOT_TARGET_INV_VAL,
TOT_MAX_INV_VAL,
TOT_PLANT_VAL
FROM
(
SELECT 
  TO_CHAR(REC_DATE,'MM/DD/YYYY') AS REC_DATE_DATE,
  TO_CHAR(REC_DATE,'D') AS REC_DATE_WK,
  PLANTID AS PLANT,
  STRATEGY_GRP AS STRATEGY_GRP,
  PROD_BU AS PROD_BU,
  MATL_TYPE AS MATL_TYPE,
  CEIL(SUM(MIN_INV_VAL)) AS TOT_MIN_INV_VAL,
  CEIL(SUM(TARGET_INV_VAL)) AS TOT_TARGET_INV_VAL,
  CEIL(SUM(MAX_INV_VAL)) AS TOT_MAX_INV_VAL,
  CEIL(SUM(OH_VAL)) AS TOT_PLANT_VAL
FROM INV_SAP_INV_REC WHERE OH_QTY <> 0
GROUP BY REC_DATE,
  PLANTID,
  STRATEGY_GRP,
  PROD_BU,
  MATL_TYPE
)WHERE REC_DATE_WK = '2'


"SELECT 
PROC_TYPE,
PLANT,
MATERIAL,
CATALOG_DASH,
BU,
CEIL(NVL(UNIT_COST,0)),
STRATEGY_GRP,
SAFETY_STOCK,
LEAD_TIME,
MATL_TYPE,
MRP_TYPE,
NVL(AVG13_USAGE_QTY,0),
NVL(FC_AVG13_WEEK_QTY,0),
NVL(AVG26_USAGE_QTY,0),
NVL(FC_AVG26_WEEK_QTY,0),
NVL(TOT_OPEN_QTY,0),
CEIL(NVL(SO_OPEN_VAL,0)),
CEIL(NVL(PO_OPEN_QTY_ALL,0)),
NVL(STOCK_IN_TRANSIT_QTY,0),
CEIL(NVL(PO_OPEN_VAL,0)),
CEIL(NVL(SIT_VAL,0)),
NVL(INV_TOTAL_QTY,0),
CEIL(NVL(INV_TOTAL_VAL,0))
FROM VIEW_INV_SAP_INV_TREND WHERE KEY <> 0 AND PLANT IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140','5130','5150','5180')"

