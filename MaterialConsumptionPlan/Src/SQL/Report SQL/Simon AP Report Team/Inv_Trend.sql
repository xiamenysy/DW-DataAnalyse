--DATE:08142014
--AUTHOR:HUANG MOYUE
--INV TREND


SELECT ID,
            SUM(PO_OPEN_QTY) AS PO_OPEN_QTY_ALL,
            STOCK_IN_TRANSIT_QTY --Add Here
          FROM VIEW_INV_SAP_BACKLOG_PO
          GROUP BY ID,
            STOCK_IN_TRANSIT_QTY
            
            
            
            
SELECT * FROM INV_SAP_PP_OPTIMIZATION WHERE PLANTID = '5150'
            
            
            
SELECT *
FROM VIEW_INV_SAP_BACKLOG_INV
WHERE PLANT IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140','5130','5150','5180')

SELECT DISTINCT MATERIAL FROM INV_SAP_PP_OPT_X where matl_type in ('ZTG','ZFG');

SELECT MATERIALID
  ||'_'
  ||PLANTID     AS ID,
  MATERIALID    AS MATERIAL,
  PLANTID       AS PLANT,
  LOCATIONID    AS LOCATIONID,
  NVL(OH_QTY,0) AS TOTAL_QTY,
  ASOFDATE      AS LAST_REVIEW_DATE
FROM INV_SAP_INVENTORY_BY_PLANT
WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140','5130','5150','5180')


CREATE TABLE INV_SAP_INV_REC AS
SELECT 
SYSDATE AS REC_DATE,
MATERIALID,
PLANTID,
LOCATIONID,
OH_QTY
FROM INV_SAP_INVENTORY_BY_PLANT
WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140','5130','5150','5180')


SELECT * FROM VIEW_INV_SAP_INV_TREND WHERE PLANT IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140')


DROP VIEW VIEW_INV_SAP_INV_TREND

CREATE VIEW VIEW_INV_SAP_INV_TREND AS
SELECT CUSTOMER_SOP.ID              AS ID,
  CUSTOMER_SOP.PROC_TYPE            AS PROC_TYPE,
  CUSTOMER_SOP.PLANT                AS PLANT,
  CUSTOMER_SOP.MATERIAL             AS MATERIAL,
  CUSTOMER_SOP.CATALOG_DASH         AS CATALOG_DASH,
  CUSTOMER_SOP.MAT_DESC             AS MAT_DESC,
  CUSTOMER_SOP.BU                   AS BU,
  CUSTOMER_SOP.UNIT_COST            AS UNIT_COST,
  CUSTOMER_SOP.STRATEGY_GRP         AS STRATEGY_GRP,
  CUSTOMER_SOP.SAFETY_STOCK         AS SAFETY_STOCK,
  CUSTOMER_SOP.LEAD_TIME            AS LEAD_TIME,
  CUSTOMER_SOP.MRP_CONTROLLER       AS MRP_CONTROLLER,
  CUSTOMER_SOP.PURCH_GROUP          AS PURCH_GROUP,
  CUSTOMER_SOP.MATL_TYPE            AS MATL_TYPE ,
  CUSTOMER_SOP.MRP_TYPE             AS MRP_TYPE,
  CUSTOMER_SOP.AVG13_USAGE_QTY      AS AVG13_USAGE_QTY,
  CUSTOMER_SOP.FC_AVG13_WEEK_QTY    AS FC_AVG13_WEEK_QTY,
  CUSTOMER_SOP.AVG26_USAGE_QTY      AS AVG26_USAGE_QTY,
  CUSTOMER_SOP.FC_AVG26_WEEK_QTY    AS FC_AVG26_WEEK_QTY,
  CUSTOMER_SOP.TOT_OPEN_QTY         AS TOT_OPEN_QTY,
  NVL(CUSTOMER_SOP.UNIT_COST,0)*NVL(CUSTOMER_SOP.TOT_OPEN_QTY,0) AS SO_OPEN_VAL,
  CUSTOMER_SOP.PO_OPEN_QTY_ALL      AS PO_OPEN_QTY_ALL,
  CUSTOMER_SOP.STOCK_IN_TRANSIT_QTY AS STOCK_IN_TRANSIT_QTY,
  NVL(CUSTOMER_SOP.UNIT_COST,0)*NVL(CUSTOMER_SOP.PO_OPEN_QTY_ALL,0) AS PO_OPEN_VAL,
  NVL(CUSTOMER_SOP.UNIT_COST,0)*NVL(CUSTOMER_SOP.STOCK_IN_TRANSIT_QTY,0) AS SIT_VAL,
  INV_STATS.TOTAL_QTY               AS INV_TOTAL_QTY,
  NVL(CUSTOMER_SOP.UNIT_COST,0)*NVL(INV_STATS.TOTAL_QTY,0) AS INV_TOTAL_VAL,
  (NVL(INV_STATS.TOTAL_QTY,0)+NVL(CUSTOMER_SOP.PO_OPEN_QTY_ALL,0)+NVL(CUSTOMER_SOP.TOT_OPEN_QTY,0)) AS KEY
FROM
  (SELECT CUSTOMER_SO.ID          AS ID,
    CUSTOMER_SO.PROC_TYPE         AS PROC_TYPE,
    CUSTOMER_SO.PLANT             AS PLANT,
    CUSTOMER_SO.MATERIAL          AS MATERIAL,
    CUSTOMER_SO.CATALOG_DASH      AS CATALOG_DASH,
    CUSTOMER_SO.MAT_DESC          AS MAT_DESC,
    CUSTOMER_SO.PROD_BU           AS BU,
    CUSTOMER_SO.UNIT_COST         AS UNIT_COST,
    CUSTOMER_SO.STRATEGY_GRP      AS STRATEGY_GRP,
    CUSTOMER_SO.SAFETY_STOCK      AS SAFETY_STOCK,
    CUSTOMER_SO.LEAD_TIME         AS LEAD_TIME,
    CUSTOMER_SO.MRP_CONTROLLER    AS MRP_CONTROLLER,
    CUSTOMER_SO.PURCH_GROUP       AS PURCH_GROUP,
    CUSTOMER_SO.MATL_TYPE         AS MATL_TYPE ,
    CUSTOMER_SO.MRP_TYPE          AS MRP_TYPE,
    CUSTOMER_SO.AVG13_USAGE_QTY   AS AVG13_USAGE_QTY,
    CUSTOMER_SO.FC_AVG13_WEEK_QTY AS FC_AVG13_WEEK_QTY,
    CUSTOMER_SO.AVG26_USAGE_QTY   AS AVG26_USAGE_QTY,
    CUSTOMER_SO.FC_AVG26_WEEK_QTY AS FC_AVG26_WEEK_QTY,    
    CUSTOMER_SO.TOT_OPEN_QTY      AS TOT_OPEN_QTY,
    PO_STATS.PO_OPEN_QTY_ALL      AS PO_OPEN_QTY_ALL,
    PO_STATS.STOCK_IN_TRANSIT_QTY AS STOCK_IN_TRANSIT_QTY
  FROM
    (SELECT CUSTOMER.ID,
      CUSTOMER.PROC_TYPE,
      CUSTOMER.PLANT,
      CUSTOMER.MATERIAL,
      CUSTOMER.CATALOG_DASH,
      CUSTOMER.MAT_DESC,
      CUSTOMER.PROD_BU,
      CUSTOMER.UNIT_COST,
      CUSTOMER.STRATEGY_GRP,
      CUSTOMER.SAFETY_STOCK,
      CUSTOMER.LEAD_TIME,
      CUSTOMER.MRP_CONTROLLER,
      CUSTOMER.PURCH_GROUP,
      CUSTOMER.MATL_TYPE,
      CUSTOMER.MRP_TYPE,
      CUSTOMER.AVG13_USAGE_QTY,
      CUSTOMER.FC_AVG13_WEEK_QTY,
      CUSTOMER.AVG26_USAGE_QTY,
      CUSTOMER.FC_AVG26_WEEK_QTY,
      SO_STATS.TOT_OPEN_QTY
    FROM
      (SELECT ID,
        MATERIAL,
        CATALOG_DASH,
        PLANT,
        MAT_DESC,
        SAFETY_STOCK,
        UNIT,
        PROC_TYPE,
        UNIT_COST,
        PROD_BU,
        STRATEGY_GRP,
        MRP_TYPE,
        MRP_CONTROLLER,
        PURCH_GROUP,
        MATL_TYPE,
        LEAD_TIME,
        AVG26_USAGE_QTY,
        AVG13_USAGE_QTY,
        FC_AVG13_WEEK_QTY,
        FC_AVG26_WEEK_QTY
      FROM VIEW_INV_SAP_FC00_STATS
      )CUSTOMER
    LEFT JOIN
      (SELECT ID, TOT_OPEN_QTY FROM VIEW_INV_SAP_ITEM_SO_STAT_U
      )SO_STATS
    ON CUSTOMER.ID = SO_STATS.ID
    )CUSTOMER_SO
  LEFT JOIN
    (SELECT ID,
      SUM(PO_OPEN_QTY) AS PO_OPEN_QTY_ALL,
      STOCK_IN_TRANSIT_QTY --Add Here
    FROM VIEW_INV_SAP_BACKLOG_PO
    GROUP BY ID,
      STOCK_IN_TRANSIT_QTY
    )PO_STATS
  ON PO_STATS.ID = CUSTOMER_SO.ID
  )CUSTOMER_SOP
LEFT JOIN
  (SELECT ID,TOTAL_QTY FROM VIEW_INV_SAP_BACKLOG_INV
  )INV_STATS
ON INV_STATS.ID = CUSTOMER_SOP.ID;






SELECT 
PROC_TYPE,
PLANT,
MATERIAL,
CATALOG_DASH,
BU,
CEIL(NVL(UNIT_COST,0)),
STRATEGY_GRP,
SAFETY_STOCK,
LEAD_TIME,
MATL_TYPE,
MRP_TYPE,
NVL(AVG13_USAGE_QTY,0),
NVL(FC_AVG13_WEEK_QTY,0),
NVL(AVG26_USAGE_QTY,0),
NVL(FC_AVG26_WEEK_QTY,0),
NVL(TOT_OPEN_QTY,0),
CEIL(NVL(SO_OPEN_VAL,0)),
CEIL(NVL(PO_OPEN_QTY_ALL,0)),
NVL(STOCK_IN_TRANSIT_QTY,0),
CEIL(NVL(PO_OPEN_VAL,0)),
CEIL(NVL(SIT_VAL,0)),
NVL(INV_TOTAL_QTY,0),
CEIL(NVL(INV_TOTAL_VAL,0))
FROM VIEW_INV_SAP_INV_TREND WHERE KEY <> 0;

