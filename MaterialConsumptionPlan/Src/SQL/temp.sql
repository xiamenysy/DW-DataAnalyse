--TEMP FILE
SELECT distinct LINECREATEDATE FROM DWQ$LIBRARIAN.INV_SAP_SALES_VBAK_VBAP_VBUP WHERE PLANT = '5040';
SELECT * FROM INV_SAP_LIKP_LIPS_DAILY WHERE PLANTID = '5140';
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_SALES_VBAK_VBAP_VBUP WHERE SALESDOC = '6501996325'

1.
SELECT ID,
  MATERIAL,
  CATALOG#,
  SALES_DOC,
  ITEM,
  SAFETY_STOCK,
  OH_QTY,
  STRATEGY_GRP,
  MRP_TYPE,
  VENDOR,
  BU,
  LEAD_TIME,
  PDT,
  UNIT_COST,
  MRP_CONTROLLER,
  SOLD_TO_PARTY,
  SOLD_TO_NAME,
  SHIP_TO_PARTY,
  SHIP_TO_NAME,
  TO_CHAR(COMMITTED_DATE,'MM/DD/YYYY'),
  TO_CHAR(LAST_GI_DATE,'MM/DD/YYYY'),
  TO_CHAR(CREATION_DATE,'MM/DD/YYYY'),
  TO_CHAR(REQUEST_DATE,'MM/DD/YYYY'),
  PLANT,
  SO_TYPE,
  ORDER_QTY,
  OPEN_QTY,
  SALES_ORG,
  CURRENCY,
  SHIPPING_POINT,
  ULTIMATE_SOURCE
  FROM VIEW_INV_SAP_SALES_HST_LC WHERE PLANT IN ('5050','5040') AND CREATION_DATE BETWEEN TO_CHAR(SYSDATE - 283) AND TO_CHAR(SYSDATE);

DROP VIEW VIEW_INV_SAP_SALES_HST_LC;
CREATE VIEW VIEW_INV_SAP_SALES_HST_LC AS
SELECT SOH_SOSH.ID,
  SOH_SOSH.MATERIAL,
  SOH_SOSH.CATALOG#,
  SOH_SOSH.SALES_DOC,
  SOH_SOSH.ITEM,
  ITEM_BSC.SAFETY_STOCK,
  ITEM_BSC.OH_QTY,
  ITEM_BSC.STRATEGY_GRP,
  ITEM_BSC.MRP_TYPE,
  ITEM_BSC.VENDOR,
  ITEM_BSC.BU,
  ITEM_BSC.LEAD_TIME,
  ITEM_BSC.PDT,
  ITEM_BSC.UNIT_COST,
  ITEM_BSC.MRP_CONTROLLER,
  SOH_SOSH.SOLD_TO_PARTY,
  SOH_SOSH.SOLD_TO_NAME,
  SOH_SOSH.SHIP_TO_PARTY,
  SOH_SOSH.SHIP_TO_NAME,
  SOH_SOSH.COMMITTED_DATE,
  SOH_SOSH.LAST_GI_DATE,
  SOH_SOSH.CREATION_DATE,
  SOH_SOSH.REQUEST_DATE,
  SOH_SOSH.PLANT,
  SOH_SOSH.SO_TYPE,
  SOH_SOSH.ORDER_QTY,
  SOH_SOSH.OPEN_QTY,
  SOH_SOSH.SALES_ORG,
  SOH_SOSH.CURRENCY,
  SOH_SOSH.SALES_PRICE_EX,
  SOH_SOSH.SHIPPING_POINT,
  ITEM_BSC.ULTIMATE_SOURCE
FROM
  (SELECT SO_HST_SOLD.ID,
    SO_HST_SOLD.MATERIAL,
    SO_HST_SOLD.CATALOG#,
    SO_HST_SOLD.SALES_DOC,
    SO_HST_SOLD.ITEM,
    SO_HST_SOLD.SOLD_TO_PARTY,
    SO_HST_SOLD.SOLD_TO_NAME,
    SO_HST_SOLD.SHIP_TO_PARTY,
    ADDRESS_SHIP.SHIP_SOLD_TO_PARTY_NAME AS SHIP_TO_NAME,
    SO_HST_SOLD.COMMITTED_DATE,
    SO_HST_SOLD.LAST_GI_DATE,
    SO_HST_SOLD.CREATION_DATE,
    SO_HST_SOLD.REQUEST_DATE,
    SO_HST_SOLD.PLANT,
    SO_HST_SOLD.SO_TYPE,
    SO_HST_SOLD.ORDER_QTY,
    SO_HST_SOLD.OPEN_QTY,
    SO_HST_SOLD.SALES_ORG,
    SO_HST_SOLD.SALES_PRICE_EX,
    SO_HST_SOLD.CURRENCY,
    SO_HST_SOLD.SHIPPING_POINT
  FROM
    (SELECT SO_HST.ID,
      SO_HST.MATERIAL,
      SO_HST.CATALOG#,
      SO_HST.SALES_DOC,
      SO_HST.ITEM,
      SO_HST.SOLD_TO_PARTY,
      ADDRESS.SHIP_SOLD_TO_PARTY_NAME AS SOLD_TO_NAME,
      SO_HST.SHIP_TO_PARTY,
      SO_HST.COMMITTED_DATE,
      SO_HST.LAST_GI_DATE,
      SO_HST.CREATION_DATE,
      SO_HST.REQUEST_DATE,
      SO_HST.PLANT,
      SO_HST.SO_TYPE,
      SO_HST.ORDER_QTY,
      SO_HST.OPEN_QTY,
      SO_HST.SALES_ORG,
      SO_HST.SALES_PRICE_EX,
      SO_HST.CURRENCY,
      SO_HST.SHIPPING_POINT
    FROM
      (SELECT MATERIALID
        ||'_'
        ||PLANTID            AS ID,
        MATERIALID           AS MATERIAL,
        CATALOGID            AS CATALOG#,
        SALESDOC             AS SALES_DOC,
        SALESDOCITEM         AS ITEM,
        SOLDTOPARTY          AS SOLD_TO_PARTY,
        SHIPTOPARTY          AS SHIP_TO_PARTY,
        COMMITTEDDATE        AS COMMITTED_DATE,
        LASTACTGIDATE        AS LAST_GI_DATE,
        LINECREATIONDATE     AS CREATION_DATE,
        REQUIREDDELIVERYDATE AS REQUEST_DATE,
        PLANTID              AS PLANT,
        SALESDOCTYPE         AS SO_TYPE,
        ORDERQTY             AS ORDER_QTY,
        OPENQTY              AS OPEN_QTY,
        SALES_ORG            AS SALES_ORG,
        GBBB_SALES_AMT       AS SALES_PRICE_EX,
        CURRENCY             AS CURRENCY,
        SHIPPING_POINT       AS SHIPPING_POINT
      FROM INV_SAP_SALES_HST
      )SO_HST
    LEFT JOIN
      (SELECT SHIP_SOLD_TO_PARTY,
        SHIP_SOLD_TO_PARTY_NAME
      FROM INV_SAP_SHIP_SOLD_TO
      )ADDRESS
    ON ADDRESS.SHIP_SOLD_TO_PARTY = SO_HST.SOLD_TO_PARTY
    )SO_HST_SOLD
  LEFT JOIN
    (SELECT SHIP_SOLD_TO_PARTY,
      SHIP_SOLD_TO_PARTY_NAME
    FROM INV_SAP_SHIP_SOLD_TO
    )ADDRESS_SHIP
  ON ADDRESS_SHIP.SHIP_SOLD_TO_PARTY = SO_HST_SOLD.SHIP_TO_PARTY
  )SOH_SOSH
LEFT JOIN
  (SELECT ID,
    MATERIAL,
    PLANT,
    CATALOG_DASH,
    SAFETY_STOCK,
    OH_QTY,
    STRATEGY_GRP,
    MRP_TYPE,
    SUBSTR(VENDOR_KEY,0,4) AS VENDOR,
    SUBSTR(PROD_BU,0,3)    AS BU,
    LEAD_TIME,
    PDT,
    UNIT_COST,
    MRP_CONTROLLER,
    ULTIMATE_SOURCE
  FROM INV_SAP_PP_OPT_X
  )ITEM_BSC
ON ITEM_BSC.ID = SOH_SOSH.ID;





SELECT * FROM INV_SAP_PP_OPT_X WHERE PLANT = '5040' AND MATERIAL = 'PN-D167002'


SELECT * FROM INV_SAP_BACKLOG_SO WHERE MATERIAL IN (
'PN-12167',
'1791DS-IB8XOB8 A',
'PN-42427',
'1769-PA4 A',
'PN-80688',
'PN-81317',
'22B-A5P0N104 A',
'PN-80690',
'PN-75002') AND PLANT = '5040'


   SELECT ID,
        PROC_TYPE,
        PLANT,
        MATERIAL,
        CATALOG_DASH,
        MAT_DESC,
        BU,
        UNIT_COST,
        STRATEGY_GRP,
        SAFETY_STOCK,
        LEAD_TIME,
        MRP_CONTROLLER,
        PURCH_GROUP,
        MATL_TYPE,
        MRP_TYPE,
        AVG13_USAGE_QTY,
        FC_AVG13_WEEK_QTY,
        VENDOR,
        VENDOR_SAFETY_STOCK,
        VENDOR_STRATEGY_GRP,
        VENDOR_LEAD_TIME,
        VENDOR_FC_AVG13_WEEK_QTY,
        TOT_OPEN_QTY,
        PASS_DUE_QTY,
        LT_OPEN_QTY,
        LT_WEEKS13_OPEN_QTY,
        OUT_WEEKS13_OPEN_QTY,
        TOT_NO_COMMITTED_DATE_QTY,
        TOTSO_VALUE,
        PO_OPEN_QTY_ALL,
        STOCK_IN_TRANSIT_QTY,
        STOCK_IN_TRN_VAULE,
        TOT_STOCK_QTY,
        STOCK_VALUE
      FROM VIEW_INV_SAP_BALOG_SUM
      WHERE MATERIAL IN (
'PN-12167',
'1791DS-IB8XOB8 A',
'PN-42427',
'1769-PA4 A',
'PN-80688',
'PN-81317',
'22B-A5P0N104 A',
'PN-80690',
'PN-75002') AND PLANT = '5040'

SELECT * FROM INV_SAP_PP_OPTIMIZATION WHERE PLANTID = '5040' AND MATERIALID = '199-DR1 B';





DROP VIEW VIEW_INV_SAP_ITEM_SOG_X;
		DROP TABLE INV_SAP_ITEM_SOG_X;
		SELECT * FROM INV_SAP_ITEM_SOG_X;
		CREATE TABLE INV_SAP_ITEM_SOG_X AS SELECT * FROM VIEW_INV_SAP_ITEM_SOG_X;
		CREATE VIEW VIEW_INV_SAP_ITEM_SOG_X AS
			SELECT 
			DISTINCT
			ISPM.ID           AS ID,
			ISPM.SOG_ID            AS SOG_ID,
			ISPM.SALES_ORG         AS SALES_ORG,
			ISPM.DIRECT_SHIP_PLANT AS PLANT,
			ISPM.MATERIALID        AS MATERIAL,
			ISMC.CATALOG_STRING1   AS CATALOG_DASH,
			ISMC.CATALOG_STRING2   AS CATALOG_NO_DASH,
			ISPM.DIST_CHL          AS DIST_CHL,
			ISPM.CURRENT_SERIES    AS CURRENT_SERIES,
			ISPM.D_CHAIN_BLK    AS D_CHAIN_BLK
			FROM
			(SELECT DISTINCT MATERIALID
			  ||'_'
			  ||SALES_ORG AS SOG_ID,
			  MATERIALID
			  ||'_'
			  ||DIRECT_SHIP_PLANT AS ID,
			  MATERIALID,
			  SALES_ORG,
			  D_CHAIN_BLK,
			  DIST_CHL,
			  DIRECT_SHIP_PLANT,
			  CURRENT_SERIES
			FROM INV_SAP_PP_MVKE
			WHERE CURRENT_SERIES = 'X' 
			)ISPM
			LEFT JOIN
			(SELECT CATALOG_STRING1,
			  CATALOG_STRING2,
			  MATERIALID
			FROM INV_SAP_NODASH_MAT_CATA 
			)ISMC
			ON ISPM.MATERIALID = ISMC.MATERIALID;
		
	3.2 VIEW_INV_SAP_PP_OPT_X with x current series
		DROP VIEW VIEW_INV_SAP_PP_OPT_X;
		DROP TABLE INV_SAP_PP_OPT_X;
		SELECT * FROM INV_SAP_PP_OPT_X;
		CREATE TABLE INV_SAP_PP_OPT_X AS SELECT * FROM VIEW_INV_SAP_PP_OPT_X WHERE PLANT = '5040' AND MATERIAL = '199-DR1 B';   
		CREATE VIEW VIEW_INV_SAP_PP_OPT_X AS
    
  SELECT PP_BSCS.ID              AS ID,
  PP_BSCS.LAST_REVIEW          AS LAST_REVIEW,
  PP_BSCS.MATERIAL             AS MATERIAL,
  PP_BSCS.CATALOG_DASH         AS CATALOG_DASH,
  PP_BSCS.CATALOG_NO_DASH      AS CATALOG_NO_DASH,
  PP_BSCS.PLANT                AS PLANT,
  PP_BSCS.SALES_ORG            AS SALES_ORG,
  PP_BSCS.PLANTID_DESC         AS PLANTID_DESC,
  PP_BSCS.MAT_DESC             AS MAT_DESC,
  PP_BSCS.SAFETY_STOCK         AS SAFETY_STOCK,
  PP_BSCS.OH_QTY               AS OH_QTY,
  PP_BSCS.UNIT                 AS UNIT,
  PP_BSCS.UNIT_COST            AS UNIT_COST,
  PP_BSCS.OH_QTY_INTRANSIT     AS OH_QTY_INTRANSIT,
  PP_BSCS.PROD_BU              AS PROD_BU,
  PP_BSCS.PROD_FAM             AS PROD_FAM,
  PP_BSCS.PROC_TYPE            AS PROC_TYPE,
  PP_BSCS.STRATEGY_GRP         AS STRATEGY_GRP,
  PP_BSCS.MRP_TYPE             AS MRP_TYPE,
  PP_BSCS.PROD_SCHEDULER       AS PROD_SCHEDULER,
  PP_BSCS.PLANT_SP_MATL_STA    AS PLANT_SP_MATL_STA,
  PP_BSCS.VENDOR_KEY           AS VENDOR_KEY,
  PP_BSCS.VENDOR_ITEM          AS VENDOR_ITEM,
  PP_BSCS.MIN_INV              AS MIN_INV,
  PP_BSCS.TARGET_INV           AS TARGET_INV,
  PP_BSCS.MAX_INV              AS MAX_INV,
  PP_BSCS.LOT_SIZE_QTY         AS LOT_SIZE_QTY,
  PP_BSCS.LOT_ROUNDING_VALUE   AS LOT_ROUNDING_VALUE,
  PP_BSCS.LOT_SIZE_DISLS       AS LOT_SIZE_DISLS,
  PP_BSCS.LOT_MIN_BUY          AS LOT_MIN_BUY,
  PP_BSCS.AVG52_USAGE_QTY      AS AVG52_USAGE_QTY,--changed
  PP_BSCS.STDEV52_USAGE        AS STDEV52_USAGE,
  PP_BSCS.AVG26_USAGE_QTY      AS AVG26_USAGE_QTY,
  PP_BSCS.STDEV26_USAGE        AS STDEV26_USAGE,
  PP_BSCS.AVG13_USAGE_QTY      AS AVG13_USAGE_QTY,
  PP_BSCS.STDEV13_USAGE        AS STDEV13_USAGE,
  PP_BSCS.Q1_LINES             AS Q1_LINES,
  PP_BSCS.Q2_LINES             AS Q2_LINES,
  PP_BSCS.Q3_LINES             AS Q3_LINES,
  PP_BSCS.Q4_LINES             AS Q4_LINES,
  PP_BSCS.Q1_FREQ_COUNT        AS Q1_FREQ_COUNT,
  PP_BSCS.Q2_FREQ_COUNT        AS Q2_FREQ_COUNT,
  PP_BSCS.Q3_FREQ_COUNT        AS Q3_FREQ_COUNT,
  PP_BSCS.Q4_FREQ_COUNT        AS Q4_FREQ_COUNT,
  PP_BSCS.EXCHANGE_RATE        AS EXCHANGE_RATE,
  PP_BSCS.LEVEL_TYPE           AS LEVEL_TYPE,
  PP_BSCS.OUT_QTY_W01          AS OUT_QTY_W01,
  PP_BSCS.OUT_QTY_W02          AS OUT_QTY_W02,
  PP_BSCS.OUT_QTY_W03          AS OUT_QTY_W03,
  PP_BSCS.OUT_QTY_W04          AS OUT_QTY_W04,
  PP_BSCS.OUT_QTY_W05          AS OUT_QTY_W05,
  PP_BSCS.OUT_QTY_W06          AS OUT_QTY_W06,
  PP_BSCS.OUT_QTY_W07          AS OUT_QTY_W07,
  PP_BSCS.OUT_QTY_W08          AS OUT_QTY_W08,
  PP_BSCS.OUT_QTY_W09          AS OUT_QTY_W09,
  PP_BSCS.OUT_QTY_W10          AS OUT_QTY_W10,
  PP_BSCS.OUT_QTY_W11          AS OUT_QTY_W11,
  PP_BSCS.OUT_QTY_W12          AS OUT_QTY_W12,
  PP_BSCS.OUT_QTY_W13          AS OUT_QTY_W13,
  PP_BSCS.OUT_QTY_W14          AS OUT_QTY_W14,
  PP_BSCS.OUT_QTY_W15          AS OUT_QTY_W15,
  PP_BSCS.OUT_QTY_W16          AS OUT_QTY_W16,
  PP_BSCS.OUT_QTY_W17          AS OUT_QTY_W17,
  PP_BSCS.OUT_QTY_W18          AS OUT_QTY_W18,
  PP_BSCS.OUT_QTY_W19          AS OUT_QTY_W19,
  PP_BSCS.OUT_QTY_W20          AS OUT_QTY_W20,
  PP_BSCS.OUT_QTY_W21          AS OUT_QTY_W21,
  PP_BSCS.OUT_QTY_W22          AS OUT_QTY_W22,
  PP_BSCS.OUT_QTY_W23          AS OUT_QTY_W23,
  PP_BSCS.OUT_QTY_W24          AS OUT_QTY_W24,
  PP_BSCS.OUT_QTY_W25          AS OUT_QTY_W25,
  PP_BSCS.OUT_QTY_W26          AS OUT_QTY_W26,
  PP_BSCS.IN_QTY_W01           AS IN_QTY_W01,
  PP_BSCS.IN_QTY_W02           AS IN_QTY_W02,
  PP_BSCS.IN_QTY_W03           AS IN_QTY_W03,
  PP_BSCS.IN_QTY_W04           AS IN_QTY_W04,
  PP_BSCS.IN_QTY_W05           AS IN_QTY_W05,
  PP_BSCS.IN_QTY_W06           AS IN_QTY_W06,
  PP_BSCS.IN_QTY_W07           AS IN_QTY_W07,
  PP_BSCS.IN_QTY_W08           AS IN_QTY_W08,
  PP_BSCS.IN_QTY_W09           AS IN_QTY_W09,
  PP_BSCS.IN_QTY_W10           AS IN_QTY_W10,
  PP_BSCS.IN_QTY_W11           AS IN_QTY_W11,
  PP_BSCS.IN_QTY_W12           AS IN_QTY_W12,
  PP_BSCS.IN_QTY_W13           AS IN_QTY_W13,
  PP_BSCS.IN_QTY_W14           AS IN_QTY_W14,
  PP_BSCS.IN_QTY_W15           AS IN_QTY_W15,
  PP_BSCS.IN_QTY_W16           AS IN_QTY_W16,
  PP_BSCS.IN_QTY_W17           AS IN_QTY_W17,
  PP_BSCS.IN_QTY_W18           AS IN_QTY_W18,
  PP_BSCS.IN_QTY_W19           AS IN_QTY_W19,
  PP_BSCS.IN_QTY_W20           AS IN_QTY_W20,
  PP_BSCS.IN_QTY_W21           AS IN_QTY_W21,
  PP_BSCS.IN_QTY_W22           AS IN_QTY_W22,
  PP_BSCS.IN_QTY_W23           AS IN_QTY_W23,
  PP_BSCS.IN_QTY_W24           AS IN_QTY_W24,
  PP_BSCS.IN_QTY_W25           AS IN_QTY_W25,
  PP_BSCS.IN_QTY_W26           AS IN_QTY_W26,
  PP_BSCS.MATERIAL_LEVEL_VALUE AS MATERIAL_LEVEL_VALUE,
  PP_BSCS.MRP_CONTROLLER       AS MRP_CONTROLLER,
  PP_BSCS.MRP_CONTROLLER_KEY   AS MRP_CONTROLLER_KEY,
  PP_BSCS.PURCH_GROUP          AS PURCH_GROUP,
  PP_BSCS.PURCH_GROUP_KEY      AS PURCH_GROUP_KEY,
  PP_BSCS.PROD_SCHED_KEY       AS PROD_SCHED_KEY,
  PP_BSCS.RECORDER_POINT       AS RECORDER_POINT,
  PP_BSCS.LEAD_TIME            AS LEAD_TIME,
  PP_BSCS.PDT                  AS PDT,
  PP_BSCS.GRT                  AS GRT,
  PP_BSCS.SALES_ORG_COUNT      AS SALES_ORG_COUNT,--added in 8/7
  PP_BSCS.DIRECT_SHIP_PLANT    AS DIRECT_SHIP_PLANT,
  PP_BSCS.DELIVERY_PLANT       AS DELIVERY_PLANT,
  PP_BSCS.DMI_MANAGED          AS DMI_MANAGED,
  PP_BSCS.CC_ABC               AS ABC,
  PP_BSCS.AVG_MONTHLY_DEM      AS AVG_MONTHLY_DEM,
  PP_BSCS.STDEV_MONTHLY_DEM    AS STDEV_MONTHLY_DEM,--added in 8/7
  ITEM_SOG_X.DIST_CHL          AS DIST_CHL,
  ITEM_SOG_X.D_CHAIN_BLK       AS D_CHAIN_BLK,
  PP_BSCS.ISSUE_UOM_NUMERATOR  AS ISSUE_UOM_NUMERATOR,
  PP_BSCS.PO_UOM_NUMERATOR     AS PO_UOM_NUMERATOR,
  PP_BSCS.MATL_TYPE            AS MATL_TYPE,
  ITEM_SOG_X.CURRENT_SERIES    AS CURRENT_SERIES,
  PP_BSCS.ULTIMATE_SOURCE      AS ULTIMATE_SOURCE
FROM
  (SELECT PP_BSC_SOG.ID             AS ID,
    PP_BSC_SOG.SG_ID                   AS SG_ID,
    PP_BSC_SOG.LAST_REVIEW          AS LAST_REVIEW,
    PP_BSC_SOG.MATERIAL             AS MATERIAL,
    ITEM_CATA.CATALOG_DASH          AS CATALOG_DASH,
    ITEM_CATA.CATALOG_NO_DASH       AS CATALOG_NO_DASH,
    PP_BSC_SOG.PLANT                AS PLANT,
    PP_BSC_SOG.SALES_ORG            AS SALES_ORG,
    PP_BSC_SOG.PLANTID_DESC         AS PLANTID_DESC,
    PP_BSC_SOG.MAT_DESC             AS MAT_DESC,
    PP_BSC_SOG.SAFETY_STOCK         AS SAFETY_STOCK,
    PP_BSC_SOG.OH_QTY               AS OH_QTY,
    PP_BSC_SOG.UNIT                 AS UNIT,
    PP_BSC_SOG.UNIT_COST            AS UNIT_COST,
    PP_BSC_SOG.OH_QTY_INTRANSIT     AS OH_QTY_INTRANSIT,
    PP_BSC_SOG.PROD_BU              AS PROD_BU,
    PP_BSC_SOG.PROD_FAM             AS PROD_FAM,
    PP_BSC_SOG.PROC_TYPE            AS PROC_TYPE,
    PP_BSC_SOG.STRATEGY_GRP         AS STRATEGY_GRP,
    PP_BSC_SOG.MRP_TYPE             AS MRP_TYPE,
    PP_BSC_SOG.PROD_SCHEDULER       AS PROD_SCHEDULER,
    PP_BSC_SOG.PLANT_SP_MATL_STA    AS PLANT_SP_MATL_STA,
    PP_BSC_SOG.VENDOR_KEY           AS VENDOR_KEY,
    PP_BSC_SOG.VENDOR_ITEM          AS VENDOR_ITEM,
    PP_BSC_SOG.MIN_INV              AS MIN_INV,
    PP_BSC_SOG.TARGET_INV           AS TARGET_INV,
    PP_BSC_SOG.MAX_INV              AS MAX_INV,
    PP_BSC_SOG.LOT_SIZE_QTY         AS LOT_SIZE_QTY,
    PP_BSC_SOG.LOT_ROUNDING_VALUE   AS LOT_ROUNDING_VALUE,
    PP_BSC_SOG.LOT_SIZE_DISLS       AS LOT_SIZE_DISLS,
    PP_BSC_SOG.LOT_MIN_BUY          AS LOT_MIN_BUY,
    PP_BSC_SOG.AVG52_USAGE_QTY      AS AVG52_USAGE_QTY,--changed
    PP_BSC_SOG.STDEV52_USAGE        AS STDEV52_USAGE,
    PP_BSC_SOG.AVG26_USAGE_QTY      AS AVG26_USAGE_QTY,
    PP_BSC_SOG.STDEV26_USAGE        AS STDEV26_USAGE,
    PP_BSC_SOG.AVG13_USAGE_QTY      AS AVG13_USAGE_QTY,
    PP_BSC_SOG.STDEV13_USAGE        AS STDEV13_USAGE,
    PP_BSC_SOG.Q1_LINES             AS Q1_LINES,
    PP_BSC_SOG.Q2_LINES             AS Q2_LINES,
    PP_BSC_SOG.Q3_LINES             AS Q3_LINES,
    PP_BSC_SOG.Q4_LINES             AS Q4_LINES,
    PP_BSC_SOG.Q1_FREQ_COUNT        AS Q1_FREQ_COUNT,
    PP_BSC_SOG.Q2_FREQ_COUNT        AS Q2_FREQ_COUNT,
    PP_BSC_SOG.Q3_FREQ_COUNT        AS Q3_FREQ_COUNT,
    PP_BSC_SOG.Q4_FREQ_COUNT        AS Q4_FREQ_COUNT,
    PP_BSC_SOG.EXCHANGE_RATE        AS EXCHANGE_RATE,
    PP_BSC_SOG.LEVEL_TYPE           AS LEVEL_TYPE,
    PP_BSC_SOG.OUT_QTY_W01          AS OUT_QTY_W01,
    PP_BSC_SOG.OUT_QTY_W02          AS OUT_QTY_W02,
    PP_BSC_SOG.OUT_QTY_W03          AS OUT_QTY_W03,
    PP_BSC_SOG.OUT_QTY_W04          AS OUT_QTY_W04,
    PP_BSC_SOG.OUT_QTY_W05          AS OUT_QTY_W05,
    PP_BSC_SOG.OUT_QTY_W06          AS OUT_QTY_W06,
    PP_BSC_SOG.OUT_QTY_W07          AS OUT_QTY_W07,
    PP_BSC_SOG.OUT_QTY_W08          AS OUT_QTY_W08,
    PP_BSC_SOG.OUT_QTY_W09          AS OUT_QTY_W09,
    PP_BSC_SOG.OUT_QTY_W10          AS OUT_QTY_W10,
    PP_BSC_SOG.OUT_QTY_W11          AS OUT_QTY_W11,
    PP_BSC_SOG.OUT_QTY_W12          AS OUT_QTY_W12,
    PP_BSC_SOG.OUT_QTY_W13          AS OUT_QTY_W13,
    PP_BSC_SOG.OUT_QTY_W14          AS OUT_QTY_W14,
    PP_BSC_SOG.OUT_QTY_W15          AS OUT_QTY_W15,
    PP_BSC_SOG.OUT_QTY_W16          AS OUT_QTY_W16,
    PP_BSC_SOG.OUT_QTY_W17          AS OUT_QTY_W17,
    PP_BSC_SOG.OUT_QTY_W18          AS OUT_QTY_W18,
    PP_BSC_SOG.OUT_QTY_W19          AS OUT_QTY_W19,
    PP_BSC_SOG.OUT_QTY_W20          AS OUT_QTY_W20,
    PP_BSC_SOG.OUT_QTY_W21          AS OUT_QTY_W21,
    PP_BSC_SOG.OUT_QTY_W22          AS OUT_QTY_W22,
    PP_BSC_SOG.OUT_QTY_W23          AS OUT_QTY_W23,
    PP_BSC_SOG.OUT_QTY_W24          AS OUT_QTY_W24,
    PP_BSC_SOG.OUT_QTY_W25          AS OUT_QTY_W25,
    PP_BSC_SOG.OUT_QTY_W26          AS OUT_QTY_W26,
    PP_BSC_SOG.IN_QTY_W01           AS IN_QTY_W01,
    PP_BSC_SOG.IN_QTY_W02           AS IN_QTY_W02,
    PP_BSC_SOG.IN_QTY_W03           AS IN_QTY_W03,
    PP_BSC_SOG.IN_QTY_W04           AS IN_QTY_W04,
    PP_BSC_SOG.IN_QTY_W05           AS IN_QTY_W05,
    PP_BSC_SOG.IN_QTY_W06           AS IN_QTY_W06,
    PP_BSC_SOG.IN_QTY_W07           AS IN_QTY_W07,
    PP_BSC_SOG.IN_QTY_W08           AS IN_QTY_W08,
    PP_BSC_SOG.IN_QTY_W09           AS IN_QTY_W09,
    PP_BSC_SOG.IN_QTY_W10           AS IN_QTY_W10,
    PP_BSC_SOG.IN_QTY_W11           AS IN_QTY_W11,
    PP_BSC_SOG.IN_QTY_W12           AS IN_QTY_W12,
    PP_BSC_SOG.IN_QTY_W13           AS IN_QTY_W13,
    PP_BSC_SOG.IN_QTY_W14           AS IN_QTY_W14,
    PP_BSC_SOG.IN_QTY_W15           AS IN_QTY_W15,
    PP_BSC_SOG.IN_QTY_W16           AS IN_QTY_W16,
    PP_BSC_SOG.IN_QTY_W17           AS IN_QTY_W17,
    PP_BSC_SOG.IN_QTY_W18           AS IN_QTY_W18,
    PP_BSC_SOG.IN_QTY_W19           AS IN_QTY_W19,
    PP_BSC_SOG.IN_QTY_W20           AS IN_QTY_W20,
    PP_BSC_SOG.IN_QTY_W21           AS IN_QTY_W21,
    PP_BSC_SOG.IN_QTY_W22           AS IN_QTY_W22,
    PP_BSC_SOG.IN_QTY_W23           AS IN_QTY_W23,
    PP_BSC_SOG.IN_QTY_W24           AS IN_QTY_W24,
    PP_BSC_SOG.IN_QTY_W25           AS IN_QTY_W25,
    PP_BSC_SOG.IN_QTY_W26           AS IN_QTY_W26,
    PP_BSC_SOG.MATERIAL_LEVEL_VALUE AS MATERIAL_LEVEL_VALUE,
    PP_BSC_SOG.MRP_CONTROLLER       AS MRP_CONTROLLER,
    PP_BSC_SOG.MRP_CONTROLLER_KEY   AS MRP_CONTROLLER_KEY,
    PP_BSC_SOG.PURCH_GROUP          AS PURCH_GROUP,
    PP_BSC_SOG.PURCH_GROUP_KEY      AS PURCH_GROUP_KEY,
    PP_BSC_SOG.PROD_SCHED_KEY       AS PROD_SCHED_KEY,
    PP_BSC_SOG.RECORDER_POINT       AS RECORDER_POINT,
    PP_BSC_SOG.LEAD_TIME            AS LEAD_TIME,
    PP_BSC_SOG.PDT                  AS PDT,
    PP_BSC_SOG.GRT                  AS GRT,
    PP_BSC_SOG.SALES_ORG_COUNT      AS SALES_ORG_COUNT,--added in 8/7
    PP_BSC_SOG.DIRECT_SHIP_PLANT    AS DIRECT_SHIP_PLANT,
    PP_BSC_SOG.DELIVERY_PLANT       AS DELIVERY_PLANT,
    PP_BSC_SOG.DMI_MANAGED          AS DMI_MANAGED,
    PP_BSC_SOG.CC_ABC               AS ABC,
    PP_BSC_SOG.AVG_MONTHLY_DEM      AS AVG_MONTHLY_DEM,
    PP_BSC_SOG.STDEV_MONTHLY_DEM    AS STDEV_MONTHLY_DEM,--added in 8/7
    PP_BSC_SOG.ISSUE_UOM_NUMERATOR  AS ISSUE_UOM_NUMERATOR,
    PP_BSC_SOG.PO_UOM_NUMERATOR     AS PO_UOM_NUMERATOR,
    PP_BSC_SOG.MATL_TYPE            AS MATL_TYPE,
    PP_BSC_SOG.ULTIMATE_SOURCE      AS ULTIMATE_SOURCE
  FROM
    (SELECT PP_BASIC.ID,
      PP_BASIC.MATERIAL
      ||'_'
      ||PLANT_SOG.SALES_ORG AS SG_ID,
      PP_BASIC.LAST_REVIEW,
      PP_BASIC.MATERIAL,
      PP_BASIC.PLANT,
      PLANT_SOG.SALES_ORG,
      PLANT_SOG.PLANTID_DESC,
      PP_BASIC.MAT_DESC,
      PP_BASIC.SAFETY_STOCK,
      PP_BASIC.OH_QTY,
      PP_BASIC.UNIT,
      PP_BASIC.UNIT_COST,
      PP_BASIC.OH_QTY_INTRANSIT,
      PP_BASIC.PROD_BU,
      PP_BASIC.PROD_FAM,
      PP_BASIC.PROC_TYPE,
      PP_BASIC.STRATEGY_GRP,
      PP_BASIC.MRP_TYPE,
      PP_BASIC.PROD_SCHEDULER,
      PP_BASIC.PLANT_SP_MATL_STA,
      PP_BASIC.VENDOR_KEY,
      PP_BASIC.VENDOR_ITEM,
      PP_BASIC.MIN_INV,
      PP_BASIC.TARGET_INV,
      PP_BASIC.MAX_INV,
      PP_BASIC.LOT_SIZE_QTY,
      PP_BASIC.LOT_ROUNDING_VALUE,
      PP_BASIC.LOT_SIZE_DISLS,
      PP_BASIC.LOT_MIN_BUY,
      PP_BASIC.AVG52_USAGE_QTY,--changed
      PP_BASIC.STDEV52_USAGE,
      PP_BASIC.AVG26_USAGE_QTY,
      PP_BASIC.STDEV26_USAGE,
      PP_BASIC.AVG13_USAGE_QTY,
      PP_BASIC.STDEV13_USAGE,
      PP_BASIC.Q1_LINES,
      PP_BASIC.Q2_LINES,
      PP_BASIC.Q3_LINES,
      PP_BASIC.Q4_LINES,
      PP_BASIC.Q1_FREQ_COUNT,
      PP_BASIC.Q2_FREQ_COUNT,
      PP_BASIC.Q3_FREQ_COUNT,
      PP_BASIC.Q4_FREQ_COUNT,
      PP_BASIC.EXCHANGE_RATE,
      PP_BASIC.LEVEL_TYPE,
      PP_BASIC.OUT_QTY_W01,
      PP_BASIC.OUT_QTY_W02,
      PP_BASIC.OUT_QTY_W03,
      PP_BASIC.OUT_QTY_W04,
      PP_BASIC.OUT_QTY_W05,
      PP_BASIC.OUT_QTY_W06,
      PP_BASIC.OUT_QTY_W07,
      PP_BASIC.OUT_QTY_W08,
      PP_BASIC.OUT_QTY_W09,
      PP_BASIC.OUT_QTY_W10,
      PP_BASIC.OUT_QTY_W11,
      PP_BASIC.OUT_QTY_W12,
      PP_BASIC.OUT_QTY_W13,
      PP_BASIC.OUT_QTY_W14,
      PP_BASIC.OUT_QTY_W15,
      PP_BASIC.OUT_QTY_W16,
      PP_BASIC.OUT_QTY_W17,
      PP_BASIC.OUT_QTY_W18,
      PP_BASIC.OUT_QTY_W19,
      PP_BASIC.OUT_QTY_W20,
      PP_BASIC.OUT_QTY_W21,
      PP_BASIC.OUT_QTY_W22,
      PP_BASIC.OUT_QTY_W23,
      PP_BASIC.OUT_QTY_W24,
      PP_BASIC.OUT_QTY_W25,
      PP_BASIC.OUT_QTY_W26,
      PP_BASIC.IN_QTY_W01,
      PP_BASIC.IN_QTY_W02,
      PP_BASIC.IN_QTY_W03,
      PP_BASIC.IN_QTY_W04,
      PP_BASIC.IN_QTY_W05,
      PP_BASIC.IN_QTY_W06,
      PP_BASIC.IN_QTY_W07,
      PP_BASIC.IN_QTY_W08,
      PP_BASIC.IN_QTY_W09,
      PP_BASIC.IN_QTY_W10,
      PP_BASIC.IN_QTY_W11,
      PP_BASIC.IN_QTY_W12,
      PP_BASIC.IN_QTY_W13,
      PP_BASIC.IN_QTY_W14,
      PP_BASIC.IN_QTY_W15,
      PP_BASIC.IN_QTY_W16,
      PP_BASIC.IN_QTY_W17,
      PP_BASIC.IN_QTY_W18,
      PP_BASIC.IN_QTY_W19,
      PP_BASIC.IN_QTY_W20,
      PP_BASIC.IN_QTY_W21,
      PP_BASIC.IN_QTY_W22,
      PP_BASIC.IN_QTY_W23,
      PP_BASIC.IN_QTY_W24,
      PP_BASIC.IN_QTY_W25,
      PP_BASIC.IN_QTY_W26,
      PP_BASIC.MATERIAL_LEVEL_VALUE,
      PP_BASIC.MRP_CONTROLLER,
      PP_BASIC.MRP_CONTROLLER_KEY,
      PP_BASIC.PURCH_GROUP,
      PP_BASIC.PURCH_GROUP_KEY,
      PP_BASIC.PROD_SCHED_KEY,
      PP_BASIC.RECORDER_POINT,
      PP_BASIC.LEAD_TIME,
      PP_BASIC.PDT,
      PP_BASIC.GRT,
      PP_BASIC.SALES_ORG_COUNT,--added in 8/7
      PP_BASIC.DIRECT_SHIP_PLANT,
      PP_BASIC.DELIVERY_PLANT,
      PP_BASIC.DMI_MANAGED,
      PP_BASIC.CC_ABC,
      PP_BASIC.AVG_MONTHLY_DEM,
      PP_BASIC.STDEV_MONTHLY_DEM,--added in 8/7
      PP_BASIC.ISSUE_UOM_NUMERATOR,
      PP_BASIC.PO_UOM_NUMERATOR,
      PP_BASIC.MATL_TYPE,
      PP_BASIC.ULTIMATE_SOURCE
    FROM
      (SELECT MATERIALID
        ||'_'
        ||(PLANTID - 1) AS ID,
        LAST_REVIEW,
        MATERIALID    AS MATERIAL,
        (PLANTID - 1) AS PLANT,
        MAT_DESC,
        SAFETY_STK AS SAFETY_STOCK,
        OH_QTY,
        UNIT_COST,
        OH_QTY_INTRANSIT,
        SUBSTR(PROD_BU,0,3) AS PROD_BU,
        PROD_FAM,
        PROC_TYPE,
        STRATEGY_GRP,
        MRP_TYPE,
        PROD_SCHEDULER,
        SP_MATL_STAT_MMSTA AS PLANT_SP_MATL_STA,
        SPC_PROC_KEY_SOBSL AS VENDOR_KEY,
        MATERIALID
        ||'_'
        ||SUBSTR(VENDOR_NAME,0,4)           AS VENDOR_ITEM,
        (SAFETY_STK)                        AS MIN_INV,
        CEIL(SAFETY_STK + 0.5*LOT_SIZE_QTY) AS TARGET_INV,
        CEIL(SAFETY_STK + 1.2*LOT_SIZE_QTY) AS MAX_INV,
        LOT_SIZE_QTY,
        LOT_ROUNDING_VALUE,
        LOT_SIZE_DISLS,
        LOT_MIN_BUY,
        AVG52_USAGE_QTY,--changed
        STDEV52_USAGE,
        AVG26_USAGE_QTY,
        STDEV26_USAGE,
        AVG13_USAGE_QTY,
        STDEV13_USAGE,
        Q1_LINES,
        Q2_LINES,
        Q3_LINES,
        Q4_LINES,
        Q1_FREQ_COUNT,
        Q2_FREQ_COUNT,
        Q3_FREQ_COUNT,
        Q4_FREQ_COUNT,
        EXCHANGE_RATE,
        LEVEL_TYPE,
        OUT_QTY_W01,
        OUT_QTY_W02,
        OUT_QTY_W03,
        OUT_QTY_W04,
        OUT_QTY_W05,
        OUT_QTY_W06,
        OUT_QTY_W07,
        OUT_QTY_W08,
        OUT_QTY_W09,
        OUT_QTY_W10,
        OUT_QTY_W11,
        OUT_QTY_W12,
        OUT_QTY_W13,
        OUT_QTY_W14,
        OUT_QTY_W15,
        OUT_QTY_W16,
        OUT_QTY_W17,
        OUT_QTY_W18,
        OUT_QTY_W19,
        OUT_QTY_W20,
        OUT_QTY_W21,
        OUT_QTY_W22,
        OUT_QTY_W23,
        OUT_QTY_W24,
        OUT_QTY_W25,
        OUT_QTY_W26,
        IN_QTY_W01,
        IN_QTY_W02,
        IN_QTY_W03,
        IN_QTY_W04,
        IN_QTY_W05,
        IN_QTY_W06,
        IN_QTY_W07,
        IN_QTY_W08,
        IN_QTY_W09,
        IN_QTY_W10,
        IN_QTY_W11,
        IN_QTY_W12,
        IN_QTY_W13,
        IN_QTY_W14,
        IN_QTY_W15,
        IN_QTY_W16,
        IN_QTY_W17,
        IN_QTY_W18,
        IN_QTY_W19,
        IN_QTY_W20,
        IN_QTY_W21,
        IN_QTY_W22,
        IN_QTY_W23,
        IN_QTY_W24,
        IN_QTY_W25,
        IN_QTY_W26,
        MATERIAL_LEVEL_VALUE,
        MRP_CONTROLLER,
        MRP_CONTROLLER_DISPO AS MRP_CONTROLLER_KEY,
        PURCH_GROUP,
        PURCH_GROUP_EKGRP   AS PURCH_GROUP_KEY,
        PROD_SCHED_FEVOR    AS PROD_SCHED_KEY,
        REORDER_PT          AS RECORDER_POINT,
        CEIL(1.4*GRT + PDT) AS LEAD_TIME, --Lead Time Change!!
        PDT                 AS PDT,
        GRT                 AS GRT,
        MEINS_ISSUE_UOM     AS UNIT,
        SALES_ORG_COUNT,--added in 8/7
        DIRECT_SHIP_PLANT,
        DELIVERY_PLANT,
        DMI_MANAGED,
        CC_ABC,
        AVG_MONTHLY_DEM,
        STDEV_MONTHLY_DEM,--added in 8/7
        ISSUE_UOM_NUMERATOR,
        PO_UOM_NUMERATOR,
        MATL_TYPE_MTART AS MATL_TYPE,
        ULTIMATE_SOURCE
      FROM INV_SAP_PP_OPTIMIZATION
      )PP_BASIC
    LEFT JOIN
      ( SELECT PLANTID, PLANTID_DESC, SALES_ORG FROM INV_SAP_PP_PLANT_SAOG
      )PLANT_SOG
    ON PLANT_SOG.PLANTID = PP_BASIC.PLANT
    )PP_BSC_SOG
  LEFT JOIN
    (SELECT CATALOG_STRING1 AS CATALOG_DASH,
      CATALOG_STRING2       AS CATALOG_NO_DASH,
      MATERIALID
    FROM INV_SAP_NODASH_MAT_CATA
    )ITEM_CATA
  ON ITEM_CATA.MATERIALID = PP_BSC_SOG.MATERIAL
  )PP_BSCS
LEFT JOIN
  ( SELECT DISTINCT MATERIALID
    ||'_'
    ||SALES_ORG AS SOG_ID,
    MATERIALID
    ||'_'
    ||DIRECT_SHIP_PLANT AS ID,
    MATERIALID,
    SALES_ORG,
    D_CHAIN_BLK,
    DIST_CHL,
    DIRECT_SHIP_PLANT,
    CURRENT_SERIES
  FROM INV_SAP_PP_MVKE
  WHERE CURRENT_SERIES = 'X'
  )ITEM_SOG_X
ON ITEM_SOG_X.SOG_ID = PP_BSCS.SG_ID; 
          
       
          
    SELECT * FROM INVANALYST.test@ROCKWELL_DW_DBLINK    
    create view test as
   (       
 SELECT   CASE
    WHEN TRANSLATE ( lips.matnr, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ~`@#$%^&*()_-+={[}]|\:;"<,>.?/', '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!') LIKE '%!%'
    THEN TRIM (lips.MATNR)
    WHEN TRIM (lips.matnr) LIKE '00000000000___ ___'
    THEN SUBSTR (TRIM (lips.matnr), 12, 50)
    WHEN TRIM (lips.matnr) LIKE '0%'
    THEN TO_CHAR (TO_NUMBER (REPLACE (TRIM (lips.matnr), ',', NULL)))
    ELSE TRIM (lips.matnr)
  END MATERIALID,
  lips.werks as Plantid,
  lips.ean11 as UPC FROM         SAPECC_LIBRARIAN.LIPS@DQD.mke.ra.rockwell.com lips where werks in ('5200')
  )@ROCKWELL_DW_DBLINK   
          
          
          
          
SELECT * FROM SAPECC_DLY_LIBRARIAN.MBEW@DQD.mke.ra.rockwell.com
      
          
          
          
          
          
          
          
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_PARAM@ROCKWELL_DW_DBLINK WHERE PLANTID IN ('5040') AND MATERIALID IN ('1756-IB16 A')
          
          
          
          
          
          
          
          
          
          
          
          --IN 
SELECT ID,
  MATERIALID,
  SUM(MONTH_1)  AS PLAN_MONTH_1,
  SUM(MONTH_2)  AS PLAN_MONTH_2,
  SUM(MONTH_3)  AS PLAN_MONTH_3,
  SUM(MONTH_4)  AS PLAN_MONTH_4,
  SUM(MONTH_5)  AS PLAN_MONTH_5,
  SUM(MONTH_6)  AS PLAN_MONTH_6,
  SUM(MONTH_7)  AS PLAN_MONTH_7,
  SUM(MONTH_8)  AS PLAN_MONTH_8,
  SUM(MONTH_9)  AS PLAN_MONTH_9,
  SUM(MONTH_10) AS PLAN_MONTH_10,
  SUM(MONTH_11) AS PLAN_MONTH_11,
  SUM(MONTH_12) AS PLAN_MONTH_12,
  SUM(MONTH_13) AS PLAN_MONTH_13,
  SUM(MONTH_14) AS PLAN_MONTH_14,
  SUM(MONTH_15) AS PLAN_MONTH_15,
  SUM(MONTH_16) AS PLAN_MONTH_16,
  SUM(MONTH_17) AS PLAN_MONTH_17,
  SUM(MONTH_18) AS PLAN_MONTH_18
FROM
  (SELECT ID,
    MATERIALID,
    PLANTID,
    CASE
      WHEN MONTH_NUMBER <= TO_CHAR(SYSDATE,'mm')
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_1,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 1
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_2,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 2
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_3,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 3
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_4,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 4
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_5,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 5
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_6,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 6
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_7,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 7
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_8,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 8
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_9,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 9
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_10,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 10
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_11,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 11
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_12,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 12
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_13,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 13
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_14,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 14
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_15,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 15
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_16,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 16
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_17,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 17
      THEN OPEN_PLAN_QTY
      ELSE 0
    END MONTH_18
  FROM
    (SELECT MATERIALID
      ||'_'
      ||PLANTID AS ID,
      MATERIALID,
      PLANTID,
      TO_CHAR(DATEDELIVERY,'mm') AS MONTH_NUMBER,
      PONUMBER,
      PO_OPENQTY AS OPEN_PLAN_QTY
    FROM INV_SAP_IO_INPUTS_DAILY
    WHERE INPUT_TYPE = 'PLAN_PD_PO'
    AND DATEDELIVERY < TO_CHAR(sysdate + 532)
     )
  )
GROUP BY ID,
  MATERIALID;
 
--PR  
SELECT ID,
  MATERIALID,
  SUM(MONTH_1)  AS PR_MONTH_1,
  SUM(MONTH_2)  AS PR_MONTH_2,
  SUM(MONTH_3)  AS PR_MONTH_3,
  SUM(MONTH_4)  AS PR_MONTH_4,
  SUM(MONTH_5)  AS PR_MONTH_5,
  SUM(MONTH_6)  AS PR_MONTH_6,
  SUM(MONTH_7)  AS PR_MONTH_7,
  SUM(MONTH_8)  AS PR_MONTH_8,
  SUM(MONTH_9)  AS PR_MONTH_9,
  SUM(MONTH_10) AS PR_MONTH_10,
  SUM(MONTH_11) AS PR_MONTH_11,
  SUM(MONTH_12) AS PR_MONTH_12,
  SUM(MONTH_13) AS PR_MONTH_13,
  SUM(MONTH_14) AS PR_MONTH_14,
  SUM(MONTH_15) AS PR_MONTH_15,
  SUM(MONTH_16) AS PR_MONTH_16,
  SUM(MONTH_17) AS PR_MONTH_17,
  SUM(MONTH_18) AS PR_MONTH_18
FROM
  (SELECT ID,
    MATERIALID,
    PLANTID,
    CASE
      WHEN MONTH_NUMBER <= TO_CHAR(SYSDATE,'mm')
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_1,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 1
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_2,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 2
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_3,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 3
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_4,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 4
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_5,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 5
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_6,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 6
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_7,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 7
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_8,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 8
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_9,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 9
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_10,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 10
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_11,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 11
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_12,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 12
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_13,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 13
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_14,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 14
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_15,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 15
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_16,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 16
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_17,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 17
      THEN OPEN_PR_QTY
      ELSE 0
    END MONTH_18
  FROM
    (SELECT MATERIALID
      ||'_'
      ||PLANTID AS ID,
      MATERIALID,
      PLANTID,
      TO_CHAR(DATEDELIVERY,'mm') AS MONTH_NUMBER,
      PONUMBER,
      PO_OPENQTY AS OPEN_PR_QTY
    FROM INV_SAP_IO_INPUTS_DAILY
    WHERE INPUT_TYPE = 'PURCH_REQ'
    AND DATEDELIVERY < TO_CHAR(sysdate + 532)
     )
  )
GROUP BY ID,
  MATERIALID;  
  
--STO
SELECT ID,
  MATERIALID,
  SUM(MONTH_1)  AS POSTO_MONTH_1,
  SUM(MONTH_2)  AS POSTO_MONTH_2,
  SUM(MONTH_3)  AS POSTO_MONTH_3,
  SUM(MONTH_4)  AS POSTO_MONTH_4,
  SUM(MONTH_5)  AS POSTO_MONTH_5,
  SUM(MONTH_6)  AS POSTO_MONTH_6,
  SUM(MONTH_7)  AS POSTO_MONTH_7,
  SUM(MONTH_8)  AS POSTO_MONTH_8,
  SUM(MONTH_9)  AS POSTO_MONTH_9,
  SUM(MONTH_10) AS POSTO_MONTH_10,
  SUM(MONTH_11) AS POSTO_MONTH_11,
  SUM(MONTH_12) AS POSTO_MONTH_12,
  SUM(MONTH_13) AS POSTO_MONTH_13,
  SUM(MONTH_14) AS POSTO_MONTH_14,
  SUM(MONTH_15) AS POSTO_MONTH_15,
  SUM(MONTH_16) AS POSTO_MONTH_16,
  SUM(MONTH_17) AS POSTO_MONTH_17,
  SUM(MONTH_18) AS POSTO_MONTH_18
FROM
  (SELECT ID,
    MATERIALID,
    CASE
      WHEN MONTH_NUMBER <= TO_CHAR(SYSDATE,'mm')
      THEN OPEN_QTY
      ELSE 0
    END MONTH_1,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 1
      THEN OPEN_QTY
      ELSE 0
    END MONTH_2,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 2
      THEN OPEN_QTY
      ELSE 0
    END MONTH_3,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 3
      THEN OPEN_QTY
      ELSE 0
    END MONTH_4,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 4
      THEN OPEN_QTY
      ELSE 0
    END MONTH_5,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 5
      THEN OPEN_QTY
      ELSE 0
    END MONTH_6,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 6
      THEN OPEN_QTY
      ELSE 0
    END MONTH_7,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 7
      THEN OPEN_QTY
      ELSE 0
    END MONTH_8,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 8
      THEN OPEN_QTY
      ELSE 0
    END MONTH_9,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 9
      THEN OPEN_QTY
      ELSE 0
    END MONTH_10,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 10
      THEN OPEN_QTY
      ELSE 0
    END MONTH_11,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 11
      THEN OPEN_QTY
      ELSE 0
    END MONTH_12,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 12
      THEN OPEN_QTY
      ELSE 0
    END MONTH_13,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 13
      THEN OPEN_QTY
      ELSE 0
    END MONTH_14,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 14
      THEN OPEN_QTY
      ELSE 0
    END MONTH_15,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 15
      THEN OPEN_QTY
      ELSE 0
    END MONTH_16,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 16
      THEN OPEN_QTY
      ELSE 0
    END MONTH_17,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 17
      THEN OPEN_QTY
      ELSE 0
    END MONTH_18
  FROM
    (SELECT 
        PO_BS.MATERIALID
        ||'_'
        ||PO_BS.PLANTID AS ID,
        PO_BS.PO_ID AS PO_ID,
      PO_BS.MATERIALID     AS MATERIALID,
      PO_BS.PLANTID        AS PLANTID,
      TO_CHAR(PO_BS.COMMITTED_DATE,'mm') AS MONTH_NUMBER,
      PO_OPEN.OPEN_QTY     AS OPEN_QTY
    FROM
      (SELECT EBELNPURCHDOCNO
        ||'_'
        ||MATERIALID AS PO_ID,
        MATERIALID AS MATERIALID,
        PLANTID AS PLANTID,
        COMMITTED_DATE AS COMMITTED_DATE
      FROM INV_SAP_PP_PO_HISTORY
      WHERE DELIVERYCOMPLETE      IS NULL
      AND ETENRPURCHDELIVSCHLINESA = '1'
      AND BSART_PURCHDOCTYPE      IN ('ZST','ZNB') AND COMMITTED_DATE < TO_CHAR(sysdate + 532)
      )PO_BS
    LEFT JOIN
      (SELECT EBELNPURCHDOCNO
        ||'_'
        ||MATERIALID AS PO_ID,
        SUM(COMMITTEDQTY) AS OPEN_QTY
      FROM INV_SAP_PP_PO_HISTORY
      WHERE DELIVERYCOMPLETE IS NULL
      GROUP BY MATERIALID, PLANTID, EBELNPURCHDOCNO
      )PO_OPEN
    ON PO_OPEN.PO_ID = PO_BS.PO_ID
     )
  )
GROUP BY ID,
  MATERIALID;   
  

--OUT
SELECT ID,
  MATERIAL,
  SUM(MONTH_1)  AS SO_MONTH_1,
  SUM(MONTH_2)  AS SO_MONTH_2,
  SUM(MONTH_3)  AS SO_MONTH_3,
  SUM(MONTH_4)  AS SO_MONTH_4,
  SUM(MONTH_5)  AS SO_MONTH_5,
  SUM(MONTH_6)  AS SO_MONTH_6,
  SUM(MONTH_7)  AS SO_MONTH_7,
  SUM(MONTH_8)  AS SO_MONTH_8,
  SUM(MONTH_9)  AS SO_MONTH_9,
  SUM(MONTH_10) AS SO_MONTH_10,
  SUM(MONTH_11) AS SO_MONTH_11,
  SUM(MONTH_12) AS SO_MONTH_12,
  SUM(MONTH_13) AS SO_MONTH_13,
  SUM(MONTH_14) AS SO_MONTH_14,
  SUM(MONTH_15) AS SO_MONTH_15,
  SUM(MONTH_16) AS SO_MONTH_16,
  SUM(MONTH_17) AS SO_MONTH_17,
  SUM(MONTH_18) AS SO_MONTH_18
FROM
  (SELECT ID,
    MATERIAL,
    PLANT,
    CASE
      WHEN MONTH_NUMBER <= TO_CHAR(SYSDATE,'mm')
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_1,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 1
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_2,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 2
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_3,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 3
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_4,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 4
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_5,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 5
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_6,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 6
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_7,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 7
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_8,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 8
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_9,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 9
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_10,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 10
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_11,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 11
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_12,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 12
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_13,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 13
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_14,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 14
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_15,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 15
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_16,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 16
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_17,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 17
      THEN OPEN_SO_QTY
      ELSE 0
    END MONTH_18
  FROM
    (SELECT MATERIAL
      ||'_'
      ||PLANT AS ID,
      SALESDOC,
      MATERIAL,
      PLANT,
      TO_CHAR(MAX_REQUEST_DATE,'mm') AS MONTH_NUMBER,
      OPEN_QTY AS OPEN_SO_QTY
    FROM INV_SAP_SALES_VBAK_VBAP_VBUP
    WHERE MAX_REQUEST_DATE < TO_CHAR(sysdate + 532)
     )
  )
GROUP BY ID,
  MATERIAL;  


--FC
SELECT ID,
  MATERIALID,
  SUM(MONTH_1)  AS FC_MONTH_1,
  SUM(MONTH_2)  AS FC_MONTH_2,
  SUM(MONTH_3)  AS FC_MONTH_3,
  SUM(MONTH_4)  AS FC_MONTH_4,
  SUM(MONTH_5)  AS FC_MONTH_5,
  SUM(MONTH_6)  AS FC_MONTH_6,
  SUM(MONTH_7)  AS FC_MONTH_7,
  SUM(MONTH_8)  AS FC_MONTH_8,
  SUM(MONTH_9)  AS FC_MONTH_9,
  SUM(MONTH_10) AS FC_MONTH_10,
  SUM(MONTH_11) AS FC_MONTH_11,
  SUM(MONTH_12) AS FC_MONTH_12,
  SUM(MONTH_13) AS FC_MONTH_13,
  SUM(MONTH_14) AS FC_MONTH_14,
  SUM(MONTH_15) AS FC_MONTH_15,
  SUM(MONTH_16) AS FC_MONTH_16,
  SUM(MONTH_17) AS FC_MONTH_17,
  SUM(MONTH_18) AS FC_MONTH_18
FROM
  (SELECT ID,
    MATERIALID,
    PLANTID,
    CASE
      WHEN MONTH_NUMBER <= TO_CHAR(SYSDATE,'mm')
      THEN FC_QTY
      ELSE 0
    END MONTH_1,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 1
      THEN FC_QTY
      ELSE 0
    END MONTH_2,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 2
      THEN FC_QTY
      ELSE 0
    END MONTH_3,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 3
      THEN FC_QTY
      ELSE 0
    END MONTH_4,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 4
      THEN FC_QTY
      ELSE 0
    END MONTH_5,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 5
      THEN FC_QTY
      ELSE 0
    END MONTH_6,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 6
      THEN FC_QTY
      ELSE 0
    END MONTH_7,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 7
      THEN FC_QTY
      ELSE 0
    END MONTH_8,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 8
      THEN FC_QTY
      ELSE 0
    END MONTH_9,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 9
      THEN FC_QTY
      ELSE 0
    END MONTH_10,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 10
      THEN FC_QTY
      ELSE 0
    END MONTH_11,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 11
      THEN FC_QTY
      ELSE 0
    END MONTH_12,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 12
      THEN FC_QTY
      ELSE 0
    END MONTH_13,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 13
      THEN FC_QTY
      ELSE 0
    END MONTH_14,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 14
      THEN FC_QTY
      ELSE 0
    END MONTH_15,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 15
      THEN FC_QTY
      ELSE 0
    END MONTH_16,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 16
      THEN FC_QTY
      ELSE 0
    END MONTH_17,
    CASE
      WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 17
      THEN FC_QTY
      ELSE 0
    END MONTH_18
  FROM
(           SELECT MATERIALID
          ||'_'
          ||PLANTID                           AS ID,
          MATERIALID                          AS MATERIALID,
          PLANTID                             AS PLANTID,
		  TO_CHAR(PDATU_DELIV_ORDFINISHDATE,'mm') AS MONTH_NUMBER,
          PLNMG_PLANNEDQUANTITY AS FC_QTY
        FROM INV_SAP_PP_FRCST_PBIM_PBED
        WHERE (PDATU_DELIV_ORDFINISHDATE < TO_CHAR(sysdate + 532))
        AND VERSBP_VERSION = '55'
     )
  )
GROUP BY ID,
  MATERIALID;  
  
  
---
SELECT ID,
  MATERIAL,
  PLANT,
  CATALOG_DASH,
  SAFETY_STOCK,
  OH_QTY,
  STRATEGY_GRP,
  MRP_TYPE,
  VENDOR,
  BU,
  LEAD_TIME,
  UNIT_COST,
  MRP_CONTROLLER,
  ULTIMATE_SOURCE,
  (NVL(OUT_SO_MONTH_1,0)    + NVL(OUT_FC_MONTH_1,0))                           AS OUT_MM_1,
  (NVL(OUT_SO_MONTH_2,0)    + NVL(OUT_FC_MONTH_2,0))                           AS OUT_MM_2,
  (NVL(OUT_SO_MONTH_3,0)    + NVL(OUT_FC_MONTH_3,0))                           AS OUT_MM_3,
  (NVL(OUT_SO_MONTH_4,0)    + NVL(OUT_FC_MONTH_4,0))                           AS OUT_MM_4,
  (NVL(OUT_SO_MONTH_5,0)    + NVL(OUT_FC_MONTH_5,0))                           AS OUT_MM_5,
  (NVL(OUT_SO_MONTH_6,0)    + NVL(OUT_FC_MONTH_6,0))                           AS OUT_MM_6,
  (NVL(OUT_SO_MONTH_7,0)    + NVL(OUT_FC_MONTH_7,0))                           AS OUT_MM_7,
  (NVL(OUT_SO_MONTH_8,0)    + NVL(OUT_FC_MONTH_8,0))                           AS OUT_MM_8,
  (NVL(OUT_SO_MONTH_9,0)    + NVL(OUT_FC_MONTH_9,0))                           AS OUT_MM_9,
  (NVL(OUT_SO_MONTH_10,0)   + NVL(OUT_FC_MONTH_10,0))                          AS OUT_MM_10,
  (NVL(OUT_SO_MONTH_11,0)   + NVL(OUT_FC_MONTH_11,0))                          AS OUT_MM_11,
  (NVL(OUT_SO_MONTH_12,0)   + NVL(OUT_FC_MONTH_12,0))                          AS OUT_MM_12,
  (NVL(OUT_SO_MONTH_13,0)   + NVL(OUT_FC_MONTH_13,0))                          AS OUT_MM_13,
  (NVL(IN_POSTO_MONTH_1,0)  + NVL(IN_PR_MONTH_1,0) + NVL(IN_PLAN_MONTH_1,0))   AS IN_MM_1,
  (NVL(IN_POSTO_MONTH_2,0)  + NVL(IN_PR_MONTH_2,0) + NVL(IN_PLAN_MONTH_2,0))   AS IN_MM_2,
  (NVL(IN_POSTO_MONTH_3,0)  + NVL(IN_PR_MONTH_3,0) + NVL(IN_PLAN_MONTH_3,0))   AS IN_MM_3,
  (NVL(IN_POSTO_MONTH_4,0)  + NVL(IN_PR_MONTH_4,0) + NVL(IN_PLAN_MONTH_4,0))   AS IN_MM_4,
  (NVL(IN_POSTO_MONTH_5,0)  + NVL(IN_PR_MONTH_5,0) + NVL(IN_PLAN_MONTH_5,0))   AS IN_MM_5,
  (NVL(IN_POSTO_MONTH_6,0)  + NVL(IN_PR_MONTH_6,0) + NVL(IN_PLAN_MONTH_6,0))   AS IN_MM_6,
  (NVL(IN_POSTO_MONTH_7,0)  + NVL(IN_PR_MONTH_7,0) + NVL(IN_PLAN_MONTH_7,0))   AS IN_MM_7,
  (NVL(IN_POSTO_MONTH_8,0)  + NVL(IN_PR_MONTH_8,0) + NVL(IN_PLAN_MONTH_8,0))   AS IN_MM_8,
  (NVL(IN_POSTO_MONTH_9,0)  + NVL(IN_PR_MONTH_9,0) + NVL(IN_PLAN_MONTH_9,0))   AS IN_MM_9,
  (NVL(IN_POSTO_MONTH_10,0) + NVL(IN_PR_MONTH_10,0) + NVL(IN_PLAN_MONTH_10,0)) AS IN_MM_10,
  (NVL(IN_POSTO_MONTH_11,0) + NVL(IN_PR_MONTH_11,0) + NVL(IN_PLAN_MONTH_11,0)) AS IN_MM_11,
  (NVL(IN_POSTO_MONTH_12,0) + NVL(IN_PR_MONTH_12,0) + NVL(IN_PLAN_MONTH_12,0)) AS IN_MM_12,
  (NVL(IN_POSTO_MONTH_13,0) + NVL(IN_PR_MONTH_13,0) + NVL(IN_PLAN_MONTH_13,0)) AS IN_MM_13
FROM
  (SELECT ITEM_SFS.ID        AS ID,
    ITEM_SFS.MATERIAL        AS MATERIAL,
    ITEM_SFS.PLANT           AS PLANT,
    ITEM_SFS.CATALOG_DASH    AS CATALOG_DASH,
    ITEM_SFS.SAFETY_STOCK    AS SAFETY_STOCK,
    ITEM_SFS.OH_QTY          AS OH_QTY,
    ITEM_SFS.STRATEGY_GRP    AS STRATEGY_GRP,
    ITEM_SFS.MRP_TYPE        AS MRP_TYPE,
    ITEM_SFS.VENDOR          AS VENDOR,
    ITEM_SFS.BU              AS BU,
    ITEM_SFS.LEAD_TIME       AS LEAD_TIME,
    ITEM_SFS.UNIT_COST       AS UNIT_COST,
    ITEM_SFS.MRP_CONTROLLER  AS MRP_CONTROLLER,
    ITEM_SFS.ULTIMATE_SOURCE AS ULTIMATE_SOURCE,
    ITEM_SFS.SO_MONTH_1      AS OUT_SO_MONTH_1,
    ITEM_SFS.SO_MONTH_2      AS OUT_SO_MONTH_2,
    ITEM_SFS.SO_MONTH_3      AS OUT_SO_MONTH_3,
    ITEM_SFS.SO_MONTH_4      AS OUT_SO_MONTH_4,
    ITEM_SFS.SO_MONTH_5      AS OUT_SO_MONTH_5,
    ITEM_SFS.SO_MONTH_6      AS OUT_SO_MONTH_6,
    ITEM_SFS.SO_MONTH_7      AS OUT_SO_MONTH_7,
    ITEM_SFS.SO_MONTH_8      AS OUT_SO_MONTH_8,
    ITEM_SFS.SO_MONTH_9      AS OUT_SO_MONTH_9,
    ITEM_SFS.SO_MONTH_10     AS OUT_SO_MONTH_10,
    ITEM_SFS.SO_MONTH_11     AS OUT_SO_MONTH_11,
    ITEM_SFS.SO_MONTH_12     AS OUT_SO_MONTH_12,
    ITEM_SFS.SO_MONTH_13     AS OUT_SO_MONTH_13,
    ITEM_SFS.SO_MONTH_14     AS OUT_SO_MONTH_14,
    ITEM_SFS.SO_MONTH_15     AS OUT_SO_MONTH_15,
    ITEM_SFS.SO_MONTH_16     AS OUT_SO_MONTH_16,
    ITEM_SFS.SO_MONTH_17     AS OUT_SO_MONTH_17,
    ITEM_SFS.SO_MONTH_18     AS OUT_SO_MONTH_18,
    ITEM_SFS.FC_MONTH_1      AS OUT_FC_MONTH_1,
    ITEM_SFS.FC_MONTH_2      AS OUT_FC_MONTH_2,
    ITEM_SFS.FC_MONTH_3      AS OUT_FC_MONTH_3,
    ITEM_SFS.FC_MONTH_4      AS OUT_FC_MONTH_4,
    ITEM_SFS.FC_MONTH_5      AS OUT_FC_MONTH_5,
    ITEM_SFS.FC_MONTH_6      AS OUT_FC_MONTH_6,
    ITEM_SFS.FC_MONTH_7      AS OUT_FC_MONTH_7,
    ITEM_SFS.FC_MONTH_8      AS OUT_FC_MONTH_8,
    ITEM_SFS.FC_MONTH_9      AS OUT_FC_MONTH_9,
    ITEM_SFS.FC_MONTH_10     AS OUT_FC_MONTH_10,
    ITEM_SFS.FC_MONTH_11     AS OUT_FC_MONTH_11,
    ITEM_SFS.FC_MONTH_12     AS OUT_FC_MONTH_12,
    ITEM_SFS.FC_MONTH_13     AS OUT_FC_MONTH_13,
    ITEM_SFS.POSTO_MONTH_1   AS IN_POSTO_MONTH_1,
    ITEM_SFS.POSTO_MONTH_2   AS IN_POSTO_MONTH_2,
    ITEM_SFS.POSTO_MONTH_3   AS IN_POSTO_MONTH_3,
    ITEM_SFS.POSTO_MONTH_4   AS IN_POSTO_MONTH_4,
    ITEM_SFS.POSTO_MONTH_5   AS IN_POSTO_MONTH_5,
    ITEM_SFS.POSTO_MONTH_6   AS IN_POSTO_MONTH_6,
    ITEM_SFS.POSTO_MONTH_7   AS IN_POSTO_MONTH_7,
    ITEM_SFS.POSTO_MONTH_8   AS IN_POSTO_MONTH_8,
    ITEM_SFS.POSTO_MONTH_9   AS IN_POSTO_MONTH_9,
    ITEM_SFS.POSTO_MONTH_10  AS IN_POSTO_MONTH_10,
    ITEM_SFS.POSTO_MONTH_11  AS IN_POSTO_MONTH_11,
    ITEM_SFS.POSTO_MONTH_12  AS IN_POSTO_MONTH_12,
    ITEM_SFS.POSTO_MONTH_13  AS IN_POSTO_MONTH_13,
    PR_MM.PR_MONTH_1         AS IN_PR_MONTH_1,
    PR_MM.PR_MONTH_2         AS IN_PR_MONTH_2,
    PR_MM.PR_MONTH_3         AS IN_PR_MONTH_3,
    PR_MM.PR_MONTH_4         AS IN_PR_MONTH_4,
    PR_MM.PR_MONTH_5         AS IN_PR_MONTH_5,
    PR_MM.PR_MONTH_6         AS IN_PR_MONTH_6,
    PR_MM.PR_MONTH_7         AS IN_PR_MONTH_7,
    PR_MM.PR_MONTH_8         AS IN_PR_MONTH_8,
    PR_MM.PR_MONTH_9         AS IN_PR_MONTH_9,
    PR_MM.PR_MONTH_10        AS IN_PR_MONTH_10,
    PR_MM.PR_MONTH_11        AS IN_PR_MONTH_11,
    PR_MM.PR_MONTH_12        AS IN_PR_MONTH_12,
    PR_MM.PR_MONTH_13        AS IN_PR_MONTH_13,
    PLAN_MM.PLAN_MONTH_1     AS IN_PLAN_MONTH_1,
    PLAN_MM.PLAN_MONTH_2     AS IN_PLAN_MONTH_2,
    PLAN_MM.PLAN_MONTH_3     AS IN_PLAN_MONTH_3,
    PLAN_MM.PLAN_MONTH_4     AS IN_PLAN_MONTH_4,
    PLAN_MM.PLAN_MONTH_5     AS IN_PLAN_MONTH_5,
    PLAN_MM.PLAN_MONTH_6     AS IN_PLAN_MONTH_6,
    PLAN_MM.PLAN_MONTH_7     AS IN_PLAN_MONTH_7,
    PLAN_MM.PLAN_MONTH_8     AS IN_PLAN_MONTH_8,
    PLAN_MM.PLAN_MONTH_9     AS IN_PLAN_MONTH_9,
    PLAN_MM.PLAN_MONTH_10    AS IN_PLAN_MONTH_10,
    PLAN_MM.PLAN_MONTH_11    AS IN_PLAN_MONTH_11,
    PLAN_MM.PLAN_MONTH_12    AS IN_PLAN_MONTH_12,
    PLAN_MM.PLAN_MONTH_13    AS IN_PLAN_MONTH_13
  FROM
    (SELECT ITEM_SFS.ID,
      ITEM_SFS.MATERIAL,
      ITEM_SFS.PLANT,
      ITEM_SFS.CATALOG_DASH,
      ITEM_SFS.SAFETY_STOCK,
      ITEM_SFS.OH_QTY,
      ITEM_SFS.STRATEGY_GRP,
      ITEM_SFS.MRP_TYPE,
      ITEM_SFS.VENDOR,
      ITEM_SFS.BU,
      ITEM_SFS.LEAD_TIME,
      ITEM_SFS.UNIT_COST,
      ITEM_SFS.MRP_CONTROLLER,
      ITEM_SFS.ULTIMATE_SOURCE,
      ITEM_SFS.SO_MONTH_1,
      ITEM_SFS.SO_MONTH_2,
      ITEM_SFS.SO_MONTH_3,
      ITEM_SFS.SO_MONTH_4,
      ITEM_SFS.SO_MONTH_5,
      ITEM_SFS.SO_MONTH_6,
      ITEM_SFS.SO_MONTH_7,
      ITEM_SFS.SO_MONTH_8,
      ITEM_SFS.SO_MONTH_9,
      ITEM_SFS.SO_MONTH_10,
      ITEM_SFS.SO_MONTH_11,
      ITEM_SFS.SO_MONTH_12,
      ITEM_SFS.SO_MONTH_13,
      ITEM_SFS.FC_MONTH_1,
      ITEM_SFS.FC_MONTH_2,
      ITEM_SFS.FC_MONTH_3,
      ITEM_SFS.FC_MONTH_4,
      ITEM_SFS.FC_MONTH_5,
      ITEM_SFS.FC_MONTH_6,
      ITEM_SFS.FC_MONTH_7,
      ITEM_SFS.FC_MONTH_8,
      ITEM_SFS.FC_MONTH_9,
      ITEM_SFS.FC_MONTH_10,
      ITEM_SFS.FC_MONTH_11,
      ITEM_SFS.FC_MONTH_12,
      ITEM_SFS.FC_MONTH_13,
      ITEM_SFS.POSTO_MONTH_1,
      ITEM_SFS.POSTO_MONTH_2,
      ITEM_SFS.POSTO_MONTH_3,
      ITEM_SFS.POSTO_MONTH_4,
      ITEM_SFS.POSTO_MONTH_5,
      ITEM_SFS.POSTO_MONTH_6,
      ITEM_SFS.POSTO_MONTH_7,
      ITEM_SFS.POSTO_MONTH_8,
      ITEM_SFS.POSTO_MONTH_9,
      ITEM_SFS.POSTO_MONTH_10,
      ITEM_SFS.POSTO_MONTH_11,
      ITEM_SFS.POSTO_MONTH_12,
      ITEM_SFS.POSTO_MONTH_13,
      PR_MM.PR_MONTH_1,
      PR_MM.PR_MONTH_2,
      PR_MM.PR_MONTH_3,
      PR_MM.PR_MONTH_4,
      PR_MM.PR_MONTH_5,
      PR_MM.PR_MONTH_6,
      PR_MM.PR_MONTH_7,
      PR_MM.PR_MONTH_8,
      PR_MM.PR_MONTH_9,
      PR_MM.PR_MONTH_10,
      PR_MM.PR_MONTH_11,
      PR_MM.PR_MONTH_12,
      PR_MM.PR_MONTH_13
    FROM
      (SELECT ITEM_SO_FC.ID,
        ITEM_SO_FC.MATERIAL,
        ITEM_SO_FC.PLANT,
        ITEM_SO_FC.CATALOG_DASH,
        ITEM_SO_FC.SAFETY_STOCK,
        ITEM_SO_FC.OH_QTY,
        ITEM_SO_FC.STRATEGY_GRP,
        ITEM_SO_FC.MRP_TYPE,
        ITEM_SO_FC.VENDOR,
        ITEM_SO_FC.BU,
        ITEM_SO_FC.LEAD_TIME,
        ITEM_SO_FC.UNIT_COST,
        ITEM_SO_FC.MRP_CONTROLLER,
        ITEM_SO_FC.ULTIMATE_SOURCE,
        ITEM_SO_FC.SO_MONTH_1,
        ITEM_SO_FC.SO_MONTH_2,
        ITEM_SO_FC.SO_MONTH_3,
        ITEM_SO_FC.SO_MONTH_4,
        ITEM_SO_FC.SO_MONTH_5,
        ITEM_SO_FC.SO_MONTH_6,
        ITEM_SO_FC.SO_MONTH_7,
        ITEM_SO_FC.SO_MONTH_8,
        ITEM_SO_FC.SO_MONTH_9,
        ITEM_SO_FC.SO_MONTH_10,
        ITEM_SO_FC.SO_MONTH_11,
        ITEM_SO_FC.SO_MONTH_12,
        ITEM_SO_FC.SO_MONTH_13,
        ITEM_SO_FC.FC_MONTH_1,
        ITEM_SO_FC.FC_MONTH_2,
        ITEM_SO_FC.FC_MONTH_3,
        ITEM_SO_FC.FC_MONTH_4,
        ITEM_SO_FC.FC_MONTH_5,
        ITEM_SO_FC.FC_MONTH_6,
        ITEM_SO_FC.FC_MONTH_7,
        ITEM_SO_FC.FC_MONTH_8,
        ITEM_SO_FC.FC_MONTH_9,
        ITEM_SO_FC.FC_MONTH_10,
        ITEM_SO_FC.FC_MONTH_11,
        ITEM_SO_FC.FC_MONTH_12,
        ITEM_SO_FC.FC_MONTH_13,
        STO_MM.POSTO_MONTH_1,
        STO_MM.POSTO_MONTH_2,
        STO_MM.POSTO_MONTH_3,
        STO_MM.POSTO_MONTH_4,
        STO_MM.POSTO_MONTH_5,
        STO_MM.POSTO_MONTH_6,
        STO_MM.POSTO_MONTH_7,
        STO_MM.POSTO_MONTH_8,
        STO_MM.POSTO_MONTH_9,
        STO_MM.POSTO_MONTH_10,
        STO_MM.POSTO_MONTH_11,
        STO_MM.POSTO_MONTH_12,
        STO_MM.POSTO_MONTH_13
      FROM
        (SELECT ITEM_SO.ID,
          ITEM_SO.MATERIAL,
          ITEM_SO.PLANT,
          ITEM_SO.CATALOG_DASH,
          ITEM_SO.SAFETY_STOCK,
          ITEM_SO.OH_QTY,
          ITEM_SO.STRATEGY_GRP,
          ITEM_SO.MRP_TYPE,
          ITEM_SO.VENDOR,
          ITEM_SO.BU,
          ITEM_SO.LEAD_TIME,
          ITEM_SO.UNIT_COST,
          ITEM_SO.MRP_CONTROLLER,
          ITEM_SO.ULTIMATE_SOURCE,
          ITEM_SO.SO_MONTH_1,
          ITEM_SO.SO_MONTH_2,
          ITEM_SO.SO_MONTH_3,
          ITEM_SO.SO_MONTH_4,
          ITEM_SO.SO_MONTH_5,
          ITEM_SO.SO_MONTH_6,
          ITEM_SO.SO_MONTH_7,
          ITEM_SO.SO_MONTH_8,
          ITEM_SO.SO_MONTH_9,
          ITEM_SO.SO_MONTH_10,
          ITEM_SO.SO_MONTH_11,
          ITEM_SO.SO_MONTH_12,
          ITEM_SO.SO_MONTH_13,
          FC_MM.FC_MONTH_1,
          FC_MM.FC_MONTH_2,
          FC_MM.FC_MONTH_3,
          FC_MM.FC_MONTH_4,
          FC_MM.FC_MONTH_5,
          FC_MM.FC_MONTH_6,
          FC_MM.FC_MONTH_7,
          FC_MM.FC_MONTH_8,
          FC_MM.FC_MONTH_9,
          FC_MM.FC_MONTH_10,
          FC_MM.FC_MONTH_11,
          FC_MM.FC_MONTH_12,
          FC_MM.FC_MONTH_13
        FROM
          (SELECT ITEM_BSC.ID,
            ITEM_BSC.MATERIAL,
            ITEM_BSC.PLANT,
            ITEM_BSC.CATALOG_DASH,
            ITEM_BSC.SAFETY_STOCK,
            ITEM_BSC.OH_QTY,
            ITEM_BSC.STRATEGY_GRP,
            ITEM_BSC.MRP_TYPE,
            ITEM_BSC.VENDOR,
            ITEM_BSC.BU,
            ITEM_BSC.LEAD_TIME,
            ITEM_BSC.UNIT_COST,
            ITEM_BSC.MRP_CONTROLLER,
            ITEM_BSC.ULTIMATE_SOURCE,
            SO_MM.SO_MONTH_1,
            SO_MM.SO_MONTH_2,
            SO_MM.SO_MONTH_3,
            SO_MM.SO_MONTH_4,
            SO_MM.SO_MONTH_5,
            SO_MM.SO_MONTH_6,
            SO_MM.SO_MONTH_7,
            SO_MM.SO_MONTH_8,
            SO_MM.SO_MONTH_9,
            SO_MM.SO_MONTH_10,
            SO_MM.SO_MONTH_11,
            SO_MM.SO_MONTH_12,
            SO_MM.SO_MONTH_13
          FROM
            (SELECT ID,
              MATERIAL,
              PLANT,
              CATALOG_DASH,
              SAFETY_STOCK,
              OH_QTY,
              STRATEGY_GRP,
              MRP_TYPE,
              SUBSTR(VENDOR_KEY,0,4) AS VENDOR,
              SUBSTR(PROD_BU,0,3)    AS BU,
              LEAD_TIME,
              UNIT_COST,
              MRP_CONTROLLER,
              ULTIMATE_SOURCE
            FROM INV_SAP_PP_OPT_X
            )ITEM_BSC
          LEFT JOIN
            (SELECT ID,
              MATERIAL,
              SUM(MONTH_1)  AS SO_MONTH_1,
              SUM(MONTH_2)  AS SO_MONTH_2,
              SUM(MONTH_3)  AS SO_MONTH_3,
              SUM(MONTH_4)  AS SO_MONTH_4,
              SUM(MONTH_5)  AS SO_MONTH_5,
              SUM(MONTH_6)  AS SO_MONTH_6,
              SUM(MONTH_7)  AS SO_MONTH_7,
              SUM(MONTH_8)  AS SO_MONTH_8,
              SUM(MONTH_9)  AS SO_MONTH_9,
              SUM(MONTH_10) AS SO_MONTH_10,
              SUM(MONTH_11) AS SO_MONTH_11,
              SUM(MONTH_12) AS SO_MONTH_12,
              SUM(MONTH_13) AS SO_MONTH_13
            FROM
              (SELECT ID,
                MATERIAL,
                PLANT,
                CASE
                  WHEN MONTH_NUMBER <= TO_CHAR(SYSDATE,'mm')
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_1,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 1
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_2,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 2
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_3,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 3
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_4,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 4
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_5,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 5
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_6,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 6
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_7,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 7
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_8,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 8
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_9,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 9
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_10,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 10
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_11,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 11
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_12,
                CASE
                  WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 12
                  THEN OPEN_SO_QTY
                  ELSE 0
                END MONTH_13  
              FROM
                (SELECT MATERIAL
                  ||'_'
                  ||PLANT AS ID,
                  SALESDOC,
                  MATERIAL,
                  PLANT,
                  TO_CHAR(MAX_REQUEST_DATE,'mm') AS MONTH_NUMBER,
                  OPEN_QTY                       AS OPEN_SO_QTY
                FROM INV_SAP_SALES_VBAK_VBAP_VBUP
                WHERE MAX_REQUEST_DATE < TO_CHAR(sysdate + 532)
                )
              )
            GROUP BY ID,
              MATERIAL
            )SO_MM
          ON SO_MM.ID = ITEM_BSC.ID
          )ITEM_SO
        LEFT JOIN
          (SELECT ID,
            MATERIALID,
            SUM(MONTH_1)  AS FC_MONTH_1,
            SUM(MONTH_2)  AS FC_MONTH_2,
            SUM(MONTH_3)  AS FC_MONTH_3,
            SUM(MONTH_4)  AS FC_MONTH_4,
            SUM(MONTH_5)  AS FC_MONTH_5,
            SUM(MONTH_6)  AS FC_MONTH_6,
            SUM(MONTH_7)  AS FC_MONTH_7,
            SUM(MONTH_8)  AS FC_MONTH_8,
            SUM(MONTH_9)  AS FC_MONTH_9,
            SUM(MONTH_10) AS FC_MONTH_10,
            SUM(MONTH_11) AS FC_MONTH_11,
            SUM(MONTH_12) AS FC_MONTH_12,
            SUM(MONTH_13) AS FC_MONTH_13
          FROM
            (SELECT ID,
              MATERIALID,
              PLANTID,
              CASE
                WHEN MONTH_NUMBER <= TO_CHAR(SYSDATE,'mm')
                THEN FC_QTY
                ELSE 0
              END MONTH_1,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 1
                THEN FC_QTY
                ELSE 0
              END MONTH_2,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 2
                THEN FC_QTY
                ELSE 0
              END MONTH_3,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 3
                THEN FC_QTY
                ELSE 0
              END MONTH_4,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 4
                THEN FC_QTY
                ELSE 0
              END MONTH_5,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 5
                THEN FC_QTY
                ELSE 0
              END MONTH_6,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 6
                THEN FC_QTY
                ELSE 0
              END MONTH_7,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 7
                THEN FC_QTY
                ELSE 0
              END MONTH_8,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 8
                THEN FC_QTY
                ELSE 0
              END MONTH_9,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 9
                THEN FC_QTY
                ELSE 0
              END MONTH_10,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 10
                THEN FC_QTY
                ELSE 0
              END MONTH_11,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 11
                THEN FC_QTY
                ELSE 0
              END MONTH_12,
              CASE
                WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 12
                THEN FC_QTY
                ELSE 0
              END MONTH_13
            FROM
              (SELECT MATERIALID
                ||'_'
                ||PLANTID                               AS ID,
                MATERIALID                              AS MATERIALID,
                PLANTID                                 AS PLANTID,
                TO_CHAR(PDATU_DELIV_ORDFINISHDATE,'mm') AS MONTH_NUMBER,
                PLNMG_PLANNEDQUANTITY                   AS FC_QTY
              FROM INV_SAP_PP_FRCST_PBIM_PBED
              WHERE (PDATU_DELIV_ORDFINISHDATE < TO_CHAR(sysdate + 532))
              AND VERSBP_VERSION               = '55'
              )
            )
          GROUP BY ID,
            MATERIALID
          )FC_MM
        ON FC_MM.ID = ITEM_SO.ID
        )ITEM_SO_FC
      LEFT JOIN
        (SELECT ID,
          MATERIALID,
          SUM(MONTH_1)  AS POSTO_MONTH_1,
          SUM(MONTH_2)  AS POSTO_MONTH_2,
          SUM(MONTH_3)  AS POSTO_MONTH_3,
          SUM(MONTH_4)  AS POSTO_MONTH_4,
          SUM(MONTH_5)  AS POSTO_MONTH_5,
          SUM(MONTH_6)  AS POSTO_MONTH_6,
          SUM(MONTH_7)  AS POSTO_MONTH_7,
          SUM(MONTH_8)  AS POSTO_MONTH_8,
          SUM(MONTH_9)  AS POSTO_MONTH_9,
          SUM(MONTH_10) AS POSTO_MONTH_10,
          SUM(MONTH_11) AS POSTO_MONTH_11,
          SUM(MONTH_12) AS POSTO_MONTH_12,
          SUM(MONTH_13) AS POSTO_MONTH_13
        FROM
          (SELECT ID,
            MATERIALID,
            CASE
              WHEN MONTH_NUMBER <= TO_CHAR(SYSDATE,'mm')
              THEN OPEN_QTY
              ELSE 0
            END MONTH_1,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 1
              THEN OPEN_QTY
              ELSE 0
            END MONTH_2,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 2
              THEN OPEN_QTY
              ELSE 0
            END MONTH_3,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 3
              THEN OPEN_QTY
              ELSE 0
            END MONTH_4,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 4
              THEN OPEN_QTY
              ELSE 0
            END MONTH_5,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 5
              THEN OPEN_QTY
              ELSE 0
            END MONTH_6,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 6
              THEN OPEN_QTY
              ELSE 0
            END MONTH_7,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 7
              THEN OPEN_QTY
              ELSE 0
            END MONTH_8,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 8
              THEN OPEN_QTY
              ELSE 0
            END MONTH_9,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 9
              THEN OPEN_QTY
              ELSE 0
            END MONTH_10,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 10
              THEN OPEN_QTY
              ELSE 0
            END MONTH_11,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 11
              THEN OPEN_QTY
              ELSE 0
            END MONTH_12,
            CASE
              WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 12
              THEN OPEN_QTY
              ELSE 0
            END MONTH_13
          FROM
            (SELECT PO_BS.MATERIALID
              ||'_'
              ||PO_BS.PLANTID                    AS ID,
              PO_BS.PO_ID                        AS PO_ID,
              PO_BS.MATERIALID                   AS MATERIALID,
              PO_BS.PLANTID                      AS PLANTID,
              TO_CHAR(PO_BS.COMMITTED_DATE,'mm') AS MONTH_NUMBER,
              PO_OPEN.OPEN_QTY                   AS OPEN_QTY
            FROM
              (SELECT EBELNPURCHDOCNO
                ||'_'
                ||MATERIALID   AS PO_ID,
                MATERIALID     AS MATERIALID,
                PLANTID        AS PLANTID,
                COMMITTED_DATE AS COMMITTED_DATE
              FROM INV_SAP_PP_PO_HISTORY
              WHERE DELIVERYCOMPLETE      IS NULL
              AND ETENRPURCHDELIVSCHLINESA = '1'
              AND BSART_PURCHDOCTYPE                        IN ('ZST','ZNB')
              AND COMMITTED_DATE           < TO_CHAR(sysdate + 532)
              )PO_BS
            LEFT JOIN
              (SELECT EBELNPURCHDOCNO
                ||'_'
                ||MATERIALID      AS PO_ID,
                SUM(COMMITTEDQTY) AS OPEN_QTY
              FROM INV_SAP_PP_PO_HISTORY
              WHERE DELIVERYCOMPLETE IS NULL
              GROUP BY MATERIALID,
                PLANTID,
                EBELNPURCHDOCNO
              )PO_OPEN
            ON PO_OPEN.PO_ID = PO_BS.PO_ID
            )
          )
        GROUP BY ID,
          MATERIALID
        )STO_MM ON ITEM_SO_FC.ID = STO_MM.ID
      )ITEM_SFS
    LEFT JOIN
      (SELECT ID,
        MATERIALID,
        SUM(MONTH_1)  AS PR_MONTH_1,
        SUM(MONTH_2)  AS PR_MONTH_2,
        SUM(MONTH_3)  AS PR_MONTH_3,
        SUM(MONTH_4)  AS PR_MONTH_4,
        SUM(MONTH_5)  AS PR_MONTH_5,
        SUM(MONTH_6)  AS PR_MONTH_6,
        SUM(MONTH_7)  AS PR_MONTH_7,
        SUM(MONTH_8)  AS PR_MONTH_8,
        SUM(MONTH_9)  AS PR_MONTH_9,
        SUM(MONTH_10) AS PR_MONTH_10,
        SUM(MONTH_11) AS PR_MONTH_11,
        SUM(MONTH_12) AS PR_MONTH_12,
        SUM(MONTH_13) AS PR_MONTH_13
      FROM
        (SELECT ID,
          MATERIALID,
          PLANTID,
          CASE
            WHEN MONTH_NUMBER <= TO_CHAR(SYSDATE,'mm')
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_1,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 1
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_2,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 2
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_3,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 3
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_4,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 4
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_5,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 5
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_6,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 6
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_7,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 7
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_8,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 8
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_9,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 9
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_10,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 10
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_11,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 11
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_12,
          CASE
            WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 12
            THEN OPEN_PR_QTY
            ELSE 0
          END MONTH_13
        FROM
          (SELECT MATERIALID
            ||'_'
            ||PLANTID AS ID,
            MATERIALID,
            PLANTID,
            TO_CHAR(DATEDELIVERY,'mm') AS MONTH_NUMBER,
            PONUMBER,
            PO_OPENQTY AS OPEN_PR_QTY
          FROM INV_SAP_IO_INPUTS_DAILY
          WHERE INPUT_TYPE = 'PURCH_REQ'
          AND DATEDELIVERY < TO_CHAR(sysdate + 532)
          )
        )
      GROUP BY ID,
        MATERIALID
      )PR_MM
    ON PR_MM.ID = ITEM_SFS.ID
    )ITEM_SFSP
  LEFT JOIN
    (SELECT ID,
      MATERIALID,
      SUM(MONTH_1)  AS PLAN_MONTH_1,
      SUM(MONTH_2)  AS PLAN_MONTH_2,
      SUM(MONTH_3)  AS PLAN_MONTH_3,
      SUM(MONTH_4)  AS PLAN_MONTH_4,
      SUM(MONTH_5)  AS PLAN_MONTH_5,
      SUM(MONTH_6)  AS PLAN_MONTH_6,
      SUM(MONTH_7)  AS PLAN_MONTH_7,
      SUM(MONTH_8)  AS PLAN_MONTH_8,
      SUM(MONTH_9)  AS PLAN_MONTH_9,
      SUM(MONTH_10) AS PLAN_MONTH_10,
      SUM(MONTH_11) AS PLAN_MONTH_11,
      SUM(MONTH_12) AS PLAN_MONTH_12,
      SUM(MONTH_13) AS PLAN_MONTH_13
    FROM
      (SELECT ID,
        MATERIALID,
        PLANTID,
        CASE
          WHEN MONTH_NUMBER <= TO_CHAR(SYSDATE,'mm')
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_1,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 1
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_2,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 2
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_3,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 3
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_4,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 4
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_5,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 5
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_6,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 6
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_7,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 7
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_8,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 8
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_9,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 9
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_10,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 10
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_11,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 11
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_12,
        CASE
          WHEN MONTH_NUMBER = TO_CHAR(SYSDATE,'mm') + 12
          THEN OPEN_PLAN_QTY
          ELSE 0
        END MONTH_13
      FROM
        (SELECT MATERIALID
          ||'_'
          ||PLANTID AS ID,
          MATERIALID,
          PLANTID,
          TO_CHAR(DATEDELIVERY,'mm') AS MONTH_NUMBER,
          PONUMBER,
          PO_OPENQTY AS OPEN_PLAN_QTY
        FROM INV_SAP_IO_INPUTS_DAILY
        WHERE INPUT_TYPE = 'PLAN_PD_PO'
        AND DATEDELIVERY < TO_CHAR(sysdate + 532)
        )
      )
    GROUP BY ID,
      MATERIALID
    )PLAN_MM
  ON PLAN_MM.ID = ITEM_SFSP.ID
  )
WHERE PLANT IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');












-- Unable to render VIEW DDL for object DWQ$LIBRARIAN.INV_SAP_SALES_VBAK_VBAP_VBUP_V with DBMS_METADATA attempting internal generator.
CREATE VIEW DWQ$LIBRARIAN.INV_SAP_SALES_VBAK_VBAP_VBUP_V AS
SELECT
  /*+ DRIVING_SITE(vbap) DRIVING_SITE(vbak) DRIVING_SITE(vbep) DRIVING_SITE(vbeh) DRIVING_SITE(vbup) DRIVING_SITE(vbbe) */
  CASE
    WHEN TRIM (VBAP.VBELN) LIKE '00%'
    THEN TO_CHAR (TO_NUMBER (TRIM (VBAP.VBELN)))
    ELSE TRIM (VBAP.VBELN)
  END SalesDoc,
  CASE
    WHEN TRIM (VBAP.POSNR) LIKE '0%'
    THEN TO_CHAR (TO_NUMBER (VBAP.POSNR))
    ELSE VBAP.POSNR
  END SalesDocItem,
  CASE
    WHEN TRANSLATE ( vbap.matnr, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ~`@#$%^&*()_-+={[}]|\:;"<,>.?/', '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!') LIKE '%!%'
    THEN TRIM (vbap.MATNR)
    WHEN TRIM (vbap.MATNR) LIKE '00000000000___ ___'
    THEN SUBSTR (TRIM (vbap.MATNR), 12, 50)
    WHEN TRIM (vbap.MATNR) LIKE '0%'
    THEN TO_CHAR (TO_NUMBER (REPLACE (TRIM (vbap.MATNR), ',', NULL)))
    ELSE TRIM (vbap.MATNR)
  END MATERIALID,
  TO_NUMBER (TRIM (VBAP.WERKS)) Plant,
  CASE
    WHEN LENGTH (vbap.erdat) = 8
    THEN --CPZ 12-21-2012 added case when to protect for incorrect dates
      TO_DATE (DECODE (VBAP.ERDAT, '00000000', NULL, vbap.erdat), 'yyyymmdd')
    ELSE NULL
  END LineCreateDate,
  VBAP.PRODH ProdHier,
  VBAP.KWMENG OrderQty,
  VBAP.KBMENG ConfirmQty,
  VBAP.LPRIO DelivPrio,
  VBAP.ERDAT LineCreatedCounter,
  VBAP.PRCTR ProfitCenter,
  VBAP.NETWR SalesPrice,
  VBAP.WAVWR Cost,
  TRIM (VBAP.BONUS) StockStatus,
  TO_DATE (NULL) Max_Commit_Date,
  TRIM (VBAP.BEDAE) ReqType ---
  ,
  VBAK.SUBMI PSPT,
  VBAK.ERDAT HeaderCreateCounter,
  TO_DATE (NULL) MAx_Confirm_Date,
  TRIM (VBAK.KUNNR) Sold_To,
  TRIM (VBAK.VKBUR) SalesOff,
  TRIM (VBAK.TELF1) Tele ---
  ,
  SYSDATE DW_DATE,
  TRIM (auart) SALESDOCTYPE,
  TRIM (abgru) RejectReason_abgru,
  TRIM (PSTYV) SaleDocItemCategory_PSTYV,
  LSMENG Req_deliveryQty_LSMENG,
  TRIM (VSTEL) ShipFrom_VSTEL,
  vbak.vkorg Sales_Org,
  vbap.waerk Currency, --CPZ 05-03-2012
  vbap.umvkz Numerator,
  vbap.umvkn DENOMINATOR,
  NVL (VBAP.KWMENG, 0)  - NVL (lips.Delivery_qty, 0) Open_Qty,
  (NVL (VBAP.KWMENG, 0) - NVL (lips.Delivery_qty, 0)) * (NVL (vbap.umvkz, 1) / NVL (vbap.umvkn, 1)) Open_QTY_Base_UOM,
  lips.Lst_Act_GI_Date,
  lips.Lst_Delv_Created_Date,
  NULL EXCHANGE_RATE_TO_USD,
  NULL max_Request_Date,
  vbap.route Route
FROM VBAK_V vbak --- sales order header
  ,
  VBAP_V vbap --- sales order item
  ,
  (SELECT REFERENCE_DOC,
    REFERENCE_DOC_ITEM,
    SUM (
    CASE
      WHEN ACT_GI_DATE IS NOT NULL
      THEN DELIVERY_QTY_SUOM
      ELSE 0
    END) Delivery_Qty,
    --   MAX (erdat) Delivery_Create,
    MAX (ACT_GI_DATE) Lst_Act_GI_Date,
    MAX (CREATED_ON_DATE) Lst_Delv_Created_Date,
    NULL EXCHANGE_RATE_TO_USD
  FROM DWQ$LIBRARIAN.INV_SAP_LIKP_LIPS_daily lips
  WHERE lips.MVMT_TYPE IN ('601')
    -- AND Created_on_Date >= SYSDATE - 200
  GROUP BY REFERENCE_DOC,
    REFERENCE_DOC_ITEM
  ) Lips
WHERE vbak.VBELN = vbap.VBELN ---
AND VBAp.ERDAT   > TO_NUMBER (TO_CHAR (SYSDATE - 730, 'yyyymmdd'))
AND vbap.vbeln   = lips.REFERENCE_DOC(+)
AND vbap.posnr   = lips.REFERENCE_DOC_ITEM(+)
AND VBAP.KWMENG  > NVL (lips.delivery_Qty, 0)
  -- and vbak.vbeln= '6501754346'
AND TRIM (abgru) IS NULL
AND auart        IN ('ZOR', 'ZOR1', 'ZOR3', 'ZOR4', 'ZOR5', 'ZOR8')
AND PSTYV        IN ('ZTAN', 'ZTAI', 'ZANN', 'ZEUR', 'ZRS1', 'ZRL1', 'ZRS6', 'ZNF', 'ZRL6', 'ZTS', 'ZANE', 'ZET5', 'ZRS7', 'ZRN1', 'ZFRE', 'ZTAS', 'ZET2', 'ZTAP', 'ZTAC', 'ZIN2', 'ZCTO', 'ZBP5', 'ZRS9', 'ZCT2', 'ZRS3', 'ZRS8', 'ZET6', 'ZET4', 'ZRS2', 'ZRS4', 'ZBIL', 'ZTST', 'ZRN4', 'ZTAV', 'ZFRC', 'ZBIV', 'ZTAM', 'ZFRD', 'ZTFT', 'ZAND', 'ZSTK', 'ZNRE', 'ZTLH', 'ZRL8', 'ZCSM', 'ZPPH', 'ZRB1')




SELECT * FROM VBAP_V WHERE vbeln= '6501754346'










SELECT 
MATERIALID,
PLANTID,
LEADTIME_WEEKS,
STRATEGY_GRP,

FROM
INV_SAP_PP_OPTIMIZATION WHERE STRATEGY_GRP = '40' AND PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140')
       