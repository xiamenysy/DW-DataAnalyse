---To Create a useful tools for analyse pre-demand and supplier capacity.
---All plants
--'5041', '5051', '5101', '5111', '5121', '5161', '5191', '5201','5071','5141'
--'||5040||', '||5050||', '||5100||', '||5110||', '||5120||', '||5160||', '||5190||', '||5200||','||5070||','||5140||'
--'5041', '5051', '5101', '5111', '5121', '5161', '5191', '5201','5071','5141'
--'5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140'

---INI SETUP
DROP TABLE INV_SAP_MATERIAL_CATALOG;
CREATE TABLE INV_SAP_MATERIAL_CATALOG AS SELECT * FROM DWQ$LIBRARIAN.INV_SAP_MATERIAL_CATALOG@ROCKWELL_DBLINK;

DROP TABLE INV_SAP_SHIP_SOLD_TO_PARTYID;
CREATE TABLE INV_SAP_SHIP_SOLD_TO_PARTYID AS SELECT * FROM DWQ$LIBRARIAN.INV_SAP_SHIP_SOLD_TO_PARTYID@ROCKWELL_DBLINK;

DROP TABLE INV_SAP_PP_MVKE;
CREATE TABLE INV_SAP_PP_MVKE AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_MVKE@ROCKWELL_DBLINK;

Drop table INV_SAP_PP_OPTIMIZATION;
CREATE TABLE INV_SAP_PP_OPTIMIZATION AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_OPTIMIZATION@ROCKWELL_DBLINK;

Drop table INV_SAP_SALES_VBAK_VBAP_VBUP;
CREATE TABLE INV_SAP_SALES_VBAK_VBAP_VBUP AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_SALES_VBAK_VBAP_VBUP@ROCKWELL_DBLINK WHERE PLANT IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');

DROP TABLE INV_SAP_PP_FRCST_PBIM_PBED;
CREATE TABLE INV_SAP_PP_FRCST_PBIM_PBED AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_FRCST_PBIM_PBED@ROCKWELL_DBLINK WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');

DROP TABLE INV_SAP_SALES_HST;
CREATE TABLE INV_SAP_SALES_HST AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_SALES_HST@ROCKWELL_DBLINK WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');

DROP TABLE INV_SAP_PP_PO_HISTORY;
CREATE TABLE INV_SAP_PP_PO_HISTORY AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_PO_HISTORY@ROCKWELL_DBLINK WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');

DROP TABLE INV_SAP_LIKP_LIPS_DAILY;
CREATE TABLE INV_SAP_LIKP_LIPS_DAILY AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_LIKP_LIPS_DAILY;

DROP TABLE INV_SAP_INVENTORY_BY_PLANT;
CREATE TABLE INV_SAP_INVENTORY_BY_PLANT AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_INVENTORY_BY_PLANT@ROCKWELL_DBLINK WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');


--Weekly
--Catalog#
DECLARE
  CREATE_TABLE_INV_SAP_MATERIAL_CATALOG        VARCHAR2(1000);
  DROP_TABLE_INV_SAP_MATERIAL_CATALOG              VARCHAR2(1000);
BEGIN
  DROP_TABLE_INV_SAP_MATERIAL_CATALOG:= 'DROP TABLE INV_SAP_MATERIAL_CATALOG';
  CREATE_TABLE_INV_SAP_MATERIAL_CATALOG       := 'CREATE TABLE INV_SAP_MATERIAL_CATALOG AS SELECT * FROM DWQ$LIBRARIAN.INV_SAP_MATERIAL_CATALOG@ROCKWELL_DBLINK';
  EXECUTE IMMEDIATE DROP_TABLE;
  EXECUTE IMMEDIATE STR_CREATE_TABLE;
END;

--DWQ$LIBRARIAN.INV_SAP_SHIP_SOLD_TO_PARTYID@ROCKWELL_DBLINK
DECLARE
  CREATE_TABLE_SOLD_TO_PARTYID VARCHAR2(1000);
  DROP_TABLE_SOLD_TO_PARTYID   VARCHAR2(1000);
BEGIN
  DROP_TABLE_SOLD_TO_PARTYID   := 'DROP TABLE INV_SAP_SHIP_SOLD_TO_PARTYID';
  CREATE_TABLE_SOLD_TO_PARTYID := 'CREATE TABLE INV_SAP_SHIP_SOLD_TO_PARTYID AS SELECT * FROM DWQ$LIBRARIAN.INV_SAP_SHIP_SOLD_TO_PARTYID@ROCKWELL_DBLINK';
  EXECUTE IMMEDIATE DROP_TABLE_SOLD_TO_PARTYID;
  EXECUTE IMMEDIATE CREATE_TABLE_SOLD_TO_PARTYID;
END;

--DWQ$LIBRARIAN.INV_SAP_PP_MVKE@ROCKWELL_DBLINK
DROP TABLE INV_SAP_PP_MVKE;
CREATE TABLE INV_SAP_PP_MVKE AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_MVKE@ROCKWELL_DBLINK;

DECLARE
  DROP_TABLE_INV_SAP_PP_MVKE   VARCHAR2(1000);
  CREATE_TABLE_INV_SAP_PP_MVKE VARCHAR2(1000);
BEGIN
  DROP_TABLE_INV_SAP_PP_MVKE   := 'DROP TABLE INV_SAP_PP_MVKE';
  CREATE_TABLE_INV_SAP_PP_MVKE := 'CREATE TABLE INV_SAP_PP_MVKE AS SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_MVKE@ROCKWELL_DBLINK';
  EXECUTE IMMEDIATE DROP_TABLE_INV_SAP_PP_MVKE;
  EXECUTE IMMEDIATE CREATE_TABLE_INV_SAP_PP_MVKE;
END;

--Basic Tables Update Every day
 
--DWQ$LIBRARIAN.INV_SAP_PP_OPTIMIZATION@ROCKWELL_DBLINK
Drop table INV_SAP_PP_OPTIMIZATION;
CREATE TABLE INV_SAP_PP_OPTIMIZATION AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_OPTIMIZATION@ROCKWELL_DBLINK WHERE PLANTID IN ('5041', '5051', '5101', '5111', '5121', '5161', '5191', '5201','5071','5141'); 

DECLARE
  DROP_TABLE_PP_OPTIMIZATION   VARCHAR2(1000);
  CREATE_TABLE_PP_OPTIMIZATION VARCHAR2(1000);
BEGIN
  DROP_TABLE_PP_OPTIMIZATION   := 'DROP TABLE INV_SAP_PP_OPTIMIZATION';
  CREATE_TABLE_PP_OPTIMIZATION := 'CREATE TABLE INV_SAP_PP_OPTIMIZATION AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_OPTIMIZATION@ROCKWELL_DBLINK WHERE PLANTID IN ('||5041||', '||5051||', '||5101||', '||5111||', '||5121||', '||5161||', '||5191||', '||5201||','||5071||','||5141||')';
  EXECUTE IMMEDIATE DROP_TABLE_PP_OPTIMIZATION;
  EXECUTE IMMEDIATE CREATE_TABLE_PP_OPTIMIZATION;
END;

--ALL
SELECT COUNT(*) FROM DWQ$LIBRARIAN.INV_SAP_PP_OPTIMIZATION@ROCKWELL_DBLINK;
DECLARE
  DROP_TABLE_PP_OPTIMIZATION   VARCHAR2(1000);
  CREATE_TABLE_PP_OPTIMIZATION VARCHAR2(1000);
BEGIN
  DROP_TABLE_PP_OPTIMIZATION   := 'DROP TABLE INV_SAP_PP_OPTIMIZATION';
  CREATE_TABLE_PP_OPTIMIZATION := 'CREATE TABLE INV_SAP_PP_OPTIMIZATION AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_OPTIMIZATION@ROCKWELL_DBLINK';
  EXECUTE IMMEDIATE DROP_TABLE_PP_OPTIMIZATION;
  EXECUTE IMMEDIATE CREATE_TABLE_PP_OPTIMIZATION;
END;

--DWQ$LIBRARIAN.INV_SAP_SALES_VBAK_VBAP_VBUP@ROCKWELL_DBLINK
Drop table INV_SAP_SALES_VBAK_VBAP_VBUP;
CREATE TABLE INV_SAP_SALES_VBAK_VBAP_VBUP AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_SALES_VBAK_VBAP_VBUP@ROCKWELL_DBLINK WHERE PLANT IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');

DECLARE
  DROP_TABLE_OPEN_SALES   VARCHAR2(1000);
  CREATE_TABLE_OPEN_SALES  VARCHAR2(1000);
BEGIN
  DROP_TABLE_OPEN_SALES   := 'Drop table INV_SAP_SALES_VBAK_VBAP_VBUP';
  CREATE_TABLE_OPEN_SALES := 'CREATE TABLE INV_SAP_SALES_VBAK_VBAP_VBUP AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_SALES_VBAK_VBAP_VBUP@ROCKWELL_DBLINK WHERE PLANT IN ('||5040||', '||5050||', '||5100||', '||5110||', '||5120||', '||5160||', '||5190||', '||5200||','||5070||','||5140||')';
  EXECUTE IMMEDIATE DROP_TABLE_OPEN_SALES;
  EXECUTE IMMEDIATE CREATE_TABLE_OPEN_SALES;
END;

--DWQ$LIBRARIAN.INV_SAP_PP_FRCST_PBIM_PBED@ROCKWELL_DBLINK
DROP TABLE INV_SAP_PP_FRCST_PBIM_PBED;
CREATE TABLE INV_SAP_PP_FRCST_PBIM_PBED AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_FRCST_PBIM_PBED@ROCKWELL_DBLINK WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');

DECLARE
  DROP_TABLE_OPEN_FC   VARCHAR2(1000);
  CREATE_TABLE_OPEN_FC  VARCHAR2(1000);
BEGIN
  DROP_TABLE_OPEN_FC   := 'Drop table INV_SAP_PP_FRCST_PBIM_PBED';
  CREATE_TABLE_OPEN_FC := 'CREATE TABLE INV_SAP_PP_FRCST_PBIM_PBED AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_FRCST_PBIM_PBED@ROCKWELL_DBLINK WHERE PLANTID IN ('||5040||', '||5050||', '||5100||', '||5110||', '||5120||', '||5160||', '||5190||', '||5200||','||5070||','||5140||')';
  EXECUTE IMMEDIATE DROP_TABLE_OPEN_FC;
  EXECUTE IMMEDIATE CREATE_TABLE_OPEN_FC;
END;


--DWQ$LIBRARIAN.INV_SAP_SALES_HST@ROCKWELL_DBLINK
DROP TABLE INV_SAP_SALES_HST;
CREATE TABLE INV_SAP_SALES_HST AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_SALES_HST@ROCKWELL_DBLINK WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');

DECLARE
  DROP_TABLE_SALES_HST  VARCHAR2(1000);
  CREATE_TABLE_SALES_HST  VARCHAR2(1000);
BEGIN
  DROP_TABLE_SALES_HST   := 'Drop table INV_SAP_SALES_HST';
  CREATE_TABLE_SALES_HST := 'CREATE TABLE INV_SAP_SALES_HST AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_SALES_HST@ROCKWELL_DBLINK WHERE PLANTID IN ('||5040||', '||5050||', '||5100||', '||5110||', '||5120||', '||5160||', '||5190||', '||5200||','||5070||','||5140||')';
  EXECUTE IMMEDIATE DROP_TABLE_SALES_HST;
  EXECUTE IMMEDIATE CREATE_TABLE_SALES_HST;
END;


--DWQ$LIBRARIAN.INV_SAP_PP_PO_HISTORY@ROCKWELL_DBLINK
DROP TABLE INV_SAP_PP_PO_HISTORY;
CREATE TABLE INV_SAP_PP_PO_HISTORY AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_PO_HISTORY@ROCKWELL_DBLINK WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');

DECLARE
  DROP_TABLE_PP_PO_HISTORY  VARCHAR2(1000);
  CREATE_TABLE_PP_PO_HISTORY  VARCHAR2(1000);
BEGIN
  DROP_TABLE_PP_PO_HISTORY   := 'Drop table INV_SAP_PP_PO_HISTORY';
  CREATE_TABLE_PP_PO_HISTORY := 'CREATE TABLE INV_SAP_PP_PO_HISTORY AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_PP_PO_HISTORY@ROCKWELL_DBLINK WHERE PLANTID IN ('||5040||', '||5050||', '||5100||', '||5110||', '||5120||', '||5160||', '||5190||', '||5200||','||5070||','||5140||')';
  EXECUTE IMMEDIATE DROP_TABLE_PP_PO_HISTORY;
  EXECUTE IMMEDIATE CREATE_TABLE_PP_PO_HISTORY;
END;

--DWQ$LIBRARIAN.INV_SAP_LIKP_LIPS_DAILY@ROCKWELL_DBLINK
DROP TABLE INV_SAP_LIKP_LIPS_DAILY;
CREATE TABLE INV_SAP_LIKP_LIPS_DAILY AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_LIKP_LIPS_DAILY@ROCKWELL_DBLINK WHERE CREATED_ON_DATE > SYSDATE - 91;

DECLARE
  DROP_TABLE_DELIVERY_REC  VARCHAR2(1000);
  CREATE_TABLE_DELIVERY_REC  VARCHAR2(1000);
BEGIN
  DROP_TABLE_DELIVERY_REC   := 'Drop table INV_SAP_LIKP_LIPS_DAILY';
  CREATE_TABLE_DELIVERY_REC := 'CREATE TABLE INV_SAP_LIKP_LIPS_DAILY AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_LIKP_LIPS_DAILY@ROCKWELL_DBLINK WHERE CREATED_ON_DATE > SYSDATE - 91';
  EXECUTE IMMEDIATE DROP_TABLE_DELIVERY_REC;
  EXECUTE IMMEDIATE CREATE_TABLE_DELIVERY_REC;
END;

--DWQ$LIBRARIAN.INV_SAP_INVENTORY_BY_PLANT@ROCKWELL_DBLINK
DROP TABLE INV_SAP_INVENTORY_BY_PLANT;
CREATE TABLE INV_SAP_INVENTORY_BY_PLANT AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_INVENTORY_BY_PLANT@ROCKWELL_DBLINK WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');

DECLARE
  DROP_TABLE_INVENTORY_REC  VARCHAR2(1000);
  CREATE_TABLE_INVENTORY_REC  VARCHAR2(1000);
BEGIN
  DROP_TABLE_INVENTORY_REC   := 'Drop table INV_SAP_INVENTORY_BY_PLANT';
  CREATE_TABLE_INVENTORY_REC := 'CREATE TABLE INV_SAP_INVENTORY_BY_PLANT AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_INVENTORY_BY_PLANT@ROCKWELL_DBLINK WHERE PLANTID IN ('||5040||', '||5050||', '||5100||', '||5110||', '||5120||', '||5160||', '||5190||', '||5200||','||5070||','||5140||')';
  EXECUTE IMMEDIATE DROP_TABLE_INVENTORY_REC;
  EXECUTE IMMEDIATE CREATE_TABLE_INVENTORY_REC;
END;


--DWQ$LIBRARIAN.INV_SAP_INVENTORY_BY_PLANT@ROCKWELL_DBLINK
DROP TABLE INV_SAP_IO_INPUTS_DAILY;
CREATE TABLE INV_SAP_IO_INPUTS_DAILY AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_IO_INPUTS_DAILY@ROCKWELL_DBLINK WHERE PLANTID IN ('5040', '5050', '5100', '5110', '5120', '5160', '5190', '5200','5070','5140');

DECLARE
  DROP_TABLE_IO_REC  VARCHAR2(1000);
  CREATE_TABLE_IO_REC  VARCHAR2(1000);
BEGIN
  DROP_TABLE_IO_REC   := 'Drop table INV_SAP_IO_INPUTS_DAILY';
  CREATE_TABLE_IO_REC := 'CREATE TABLE INV_SAP_IO_INPUTS_DAILY AS
SELECT * FROM DWQ$LIBRARIAN.INV_SAP_IO_INPUTS_DAILY@ROCKWELL_DBLINK WHERE PLANTID IN ('||5040||', '||5050||', '||5100||', '||5110||', '||5120||', '||5160||', '||5190||', '||5200||','||5070||','||5140||')';
  EXECUTE IMMEDIATE DROP_TABLE_IO_REC;
  EXECUTE IMMEDIATE CREATE_TABLE_IO_REC;
END;

--FUNCTION COLLECTIONS
-----Catalog Table Remove Dash
SELECT * FROM INV_SAP_NODASH_MAT_CATA;

DECLARE
  DROP_TABLE_CATANODSH   VARCHAR2(1000);
  CREATE_TABLE_CATANODSH VARCHAR2(1000);
BEGIN
  DROP_TABLE_CATANODSH   := 'DROP TABLE INV_SAP_NODASH_MAT_CATA';
  CREATE_TABLE_CATANODSH := 'CREATE TABLE INV_SAP_NODASH_MAT_CATA AS SELECT * FROM INV_SAP_MATERIAL_CATALOG';
  EXECUTE IMMEDIATE DROP_TABLE_INVENTORY_REC;
  EXECUTE IMMEDIATE CREATE_TABLE_CATANODSH;
END;
  
DECLARE
  CURSOR cur
  IS
    SELECT a.CATALOG_STRING1,
      b.ROWID ROW_ID
    FROM INV_SAP_MATERIAL_CATALOG a,
      INV_SAP_NODASH_MAT_CATA b
    WHERE a.MATERIALID = b.MATERIALID
    ORDER BY b.ROWID; ---order by rowid
  V_COUNTER NUMBER;
BEGIN
  V_COUNTER := 0;
  FOR row IN cur
  LOOP
    UPDATE INV_SAP_NODASH_MAT_CATA SET CATALOG_STRING2 = REPLACE(row.CATALOG_STRING1, '-') WHERE ROWID = row.ROW_ID;
    V_COUNTER     := V_COUNTER + 1;
    IF (V_COUNTER >= 1000) THEN
      COMMIT;
      V_COUNTER := 0;
    END IF;
  END LOOP;
  COMMIT;
END;




----------------------------------------------------VIEWS---------------------------------------------------------------
--VIEW COLLECTIONS
----X CURRENT ITEM VIEW
DROP VIEW VIEW_INV_SAP_ITEM_X;
SELECT * FROM VIEW_INV_SAP_ITEM_X;
CREATE VIEW VIEW_INV_SAP_ITEM_X AS 
SELECT DISTINCT * FROM
(SELECT ISPM.ID           AS ID,
  ISPM.DIRECT_SHIP_PLANT AS PLANT,
  ISPM.MATERIALID        AS MATERIAL,
  ISMC.CATALOG_STRING1   AS CATALOG_DASH,
  ISMC.CATALOG_STRING2   AS CATALOG_NO_DASH,
  ISPM.DIST_CHL          AS DIST_CHL,
  ISPM.CURRENT_SERIES    AS CURRENT_SERIES
FROM
  (SELECT MATERIALID
    ||'_'
    ||DIRECT_SHIP_PLANT AS ID,
    MATERIALID,
    DIST_CHL,
    DIRECT_SHIP_PLANT,
    CURRENT_SERIES
  FROM INV_SAP_PP_MVKE
  WHERE CURRENT_SERIES = 'X'
  )ISPM
LEFT JOIN
  (SELECT CATALOG_STRING1,
    CATALOG_STRING2,
    MATERIALID
  FROM INV_SAP_NODASH_MAT_CATA
  )ISMC
ON ISPM.MATERIALID = ISMC.MATERIALID); --WHERE ID = '80026-146-56-R_5200';

--ITEM ALL
CREATE VIEW VIEW_INV_SAP_ITEM_ALL AS 
SELECT ISPM.ID           AS ID,
  ISPM.DIRECT_SHIP_PLANT AS PLANT,
  ISPM.MATERIALID        AS MATERIAL,
  ISMC.CATALOG_STRING1   AS CATALOG_DASH,
  ISMC.CATALOG_STRING2   AS CATALOG_NO_DASH,
  ISPM.SALES_ORG         AS SALES_ORG,
  ISPM.DIST_CHL          AS DIST_CHL,
  ISPM.D_CHAIN_BLK       AS D_CHAIN_BLK,
  ISPM.VALID_FROM_DATE   AS VALID_FROM_DATE,
  ISPM.STOCK_STATUS      AS STOCK_STATUS,
  ISPM.CURRENT_SERIES    AS CURRENT_SERIES
FROM
  (SELECT MATERIALID
    ||'_'
    ||DIRECT_SHIP_PLANT AS ID,
    MATERIALID,
    SALES_ORG,
    DIST_CHL,
    D_CHAIN_BLK,
    VALID_FROM_DATE,
    DIRECT_SHIP_PLANT,
    STOCK_STATUS,
    CURRENT_SERIES
  FROM INV_SAP_PP_MVKE
  )ISPM
LEFT JOIN
  (SELECT CATALOG_STRING1,
    CATALOG_STRING2,
    MATERIALID
  FROM INV_SAP_NODASH_MAT_CATA
  )ISMC
ON ISPM.MATERIALID = ISMC.MATERIALID;

----PP TABLE BASIC_INFO
--CURRENT ITEM
DROP VIEW VIEW_INV_SAP_PP_OPT_X;
SELECT * FROM VIEW_INV_SAP_PP_OPT_X;
CREATE VIEW VIEW_INV_SAP_PP_OPT_X AS
SELECT *
FROM
  (SELECT PP_BASIC.ID,
    PP_BASIC.LAST_REVIEW,
    PP_BASIC.MATERIAL,
    ITEM_X.CATALOG_DASH,
    ITEM_X.CATALOG_NO_DASH,
    PP_BASIC.PLANT,
    PP_BASIC.MAT_DESC,
    PP_BASIC.SAFETY_STOCK,
    PP_BASIC.OH_QTY,
    PP_BASIC.UNIT,
    PP_BASIC.UNIT_COST,
    PP_BASIC.OH_QTY_INTRANSIT,
    PP_BASIC.PROD_BU,
    PP_BASIC.PROD_FAM,
    PP_BASIC.PROC_TYPE,
    PP_BASIC.STRATEGY_GRP,
    PP_BASIC.MRP_TYPE,
    PP_BASIC.PROD_SCHEDULER,
    PP_BASIC.PLANT_SP_MATL_STA,
    PP_BASIC.VENDOR_KEY,
    PP_BASIC.VENDOR_ITEM,
    PP_BASIC.MIN_INV,
    PP_BASIC.TARGET_INV,
    PP_BASIC.MAX_INV,
    PP_BASIC.LOT_SIZE_QTY,
    PP_BASIC.LOT_ROUNDING_VALUE,
    PP_BASIC.LOT_SIZE_DISLS,
    PP_BASIC.AVG26_USAGE_QTY,
    PP_BASIC.STDEV26_USAGE,
    PP_BASIC.AVG13_USAGE_QTY,
    PP_BASIC.STDEV13_USAGE,
    PP_BASIC.Q1_LINES,
    PP_BASIC.Q2_LINES,
    PP_BASIC.Q3_LINES,
    PP_BASIC.Q4_LINES,
    PP_BASIC.Q1_FREQ_COUNT,
    PP_BASIC.Q2_FREQ_COUNT,
    PP_BASIC.Q3_FREQ_COUNT,
    PP_BASIC.Q4_FREQ_COUNT,
    PP_BASIC.EXCHANGE_RATE,
    PP_BASIC.LEVEL_TYPE,
    PP_BASIC.OUT_QTY_W01,
    PP_BASIC.OUT_QTY_W02,
    PP_BASIC.OUT_QTY_W03,
    PP_BASIC.OUT_QTY_W04,
    PP_BASIC.OUT_QTY_W05,
    PP_BASIC.OUT_QTY_W06,
    PP_BASIC.OUT_QTY_W07,
    PP_BASIC.OUT_QTY_W08,
    PP_BASIC.OUT_QTY_W09,
    PP_BASIC.OUT_QTY_W10,
    PP_BASIC.OUT_QTY_W11,
    PP_BASIC.OUT_QTY_W12,
    PP_BASIC.OUT_QTY_W13,
    PP_BASIC.OUT_QTY_W14,
    PP_BASIC.OUT_QTY_W15,
    PP_BASIC.OUT_QTY_W16,
    PP_BASIC.OUT_QTY_W17,
    PP_BASIC.OUT_QTY_W18,
    PP_BASIC.OUT_QTY_W19,
    PP_BASIC.OUT_QTY_W20,
    PP_BASIC.OUT_QTY_W21,
    PP_BASIC.OUT_QTY_W22,
    PP_BASIC.OUT_QTY_W23,
    PP_BASIC.OUT_QTY_W24,
    PP_BASIC.OUT_QTY_W25,
    PP_BASIC.OUT_QTY_W26,
    PP_BASIC.IN_QTY_W01,
    PP_BASIC.IN_QTY_W02,
    PP_BASIC.IN_QTY_W03,
    PP_BASIC.IN_QTY_W04,
    PP_BASIC.IN_QTY_W05,
    PP_BASIC.IN_QTY_W06,
    PP_BASIC.IN_QTY_W07,
    PP_BASIC.IN_QTY_W08,
    PP_BASIC.IN_QTY_W09,
    PP_BASIC.IN_QTY_W10,
    PP_BASIC.IN_QTY_W11,
    PP_BASIC.IN_QTY_W12,
    PP_BASIC.IN_QTY_W13,
    PP_BASIC.IN_QTY_W14,
    PP_BASIC.IN_QTY_W15,
    PP_BASIC.IN_QTY_W16,
    PP_BASIC.IN_QTY_W17,
    PP_BASIC.IN_QTY_W18,
    PP_BASIC.IN_QTY_W19,
    PP_BASIC.IN_QTY_W20,
    PP_BASIC.IN_QTY_W21,
    PP_BASIC.IN_QTY_W22,
    PP_BASIC.IN_QTY_W23,
    PP_BASIC.IN_QTY_W24,
    PP_BASIC.IN_QTY_W25,
    PP_BASIC.IN_QTY_W26,
    PP_BASIC.MATERIAL_LEVEL_VALUE,
    PP_BASIC.MRP_CONTROLLER,
    PP_BASIC.MRP_CONTROLLER_KEY,
    PP_BASIC.PURCH_GROUP,
    PP_BASIC.PURCH_GROUP_KEY,
    PP_BASIC.PROD_SCHED_KEY,
    PP_BASIC.RECORDER_POINT,
    PP_BASIC.LEAD_TIME,
    ITEM_X.DIST_CHL,
    PP_BASIC.ISSUE_UOM_NUMERATOR,
    PP_BASIC.PO_UOM_NUMERATOR,
    PP_BASIC.MATL_TYPE,
    ITEM_X.CURRENT_SERIES,
    PP_BASIC.ULTIMATE_SOURCE
  FROM
    (SELECT MATERIALID
      ||'_'
      ||(PLANTID - 1) AS ID,
      LAST_REVIEW,
      MATERIALID    AS MATERIAL,
      (PLANTID - 1) AS PLANT,
      MAT_DESC,
      SAFETY_STK AS SAFETY_STOCK,
      OH_QTY,
      UNIT_COST,
      OH_QTY_INTRANSIT,
      SUBSTR(PROD_BU,0,3) AS PROD_BU,
      PROD_FAM,
      PROC_TYPE,
      STRATEGY_GRP,
      MRP_TYPE,
      PROD_SCHEDULER,
      SP_MATL_STAT_MMSTA AS PLANT_SP_MATL_STA,
      SPC_PROC_KEY_SOBSL AS VENDOR_KEY,
      MATERIALID
      ||'_'
      ||SUBSTR(VENDOR_NAME,0,4)           AS VENDOR_ITEM,
      (SAFETY_STK)                        AS MIN_INV,
      CEIL(SAFETY_STK + 0.5*LOT_SIZE_QTY) AS TARGET_INV,
      CEIL(SAFETY_STK + LOT_SIZE_QTY) AS MAX_INV,
      LOT_SIZE_QTY,
      LOT_ROUNDING_VALUE,
      LOT_SIZE_DISLS,
      AVG26_USAGE_QTY,
      STDEV26_USAGE,
      AVG13_USAGE_QTY,
      STDEV13_USAGE,
      Q1_LINES,
      Q2_LINES,
      Q3_LINES,
      Q4_LINES,
      Q1_FREQ_COUNT,
      Q2_FREQ_COUNT,
      Q3_FREQ_COUNT,
      Q4_FREQ_COUNT,
      EXCHANGE_RATE,
      LEVEL_TYPE,
      OUT_QTY_W01,
      OUT_QTY_W02,
      OUT_QTY_W03,
      OUT_QTY_W04,
      OUT_QTY_W05,
      OUT_QTY_W06,
      OUT_QTY_W07,
      OUT_QTY_W08,
      OUT_QTY_W09,
      OUT_QTY_W10,
      OUT_QTY_W11,
      OUT_QTY_W12,
      OUT_QTY_W13,
      OUT_QTY_W14,
      OUT_QTY_W15,
      OUT_QTY_W16,
      OUT_QTY_W17,
      OUT_QTY_W18,
      OUT_QTY_W19,
      OUT_QTY_W20,
      OUT_QTY_W21,
      OUT_QTY_W22,
      OUT_QTY_W23,
      OUT_QTY_W24,
      OUT_QTY_W25,
      OUT_QTY_W26,
      IN_QTY_W01,
      IN_QTY_W02,
      IN_QTY_W03,
      IN_QTY_W04,
      IN_QTY_W05,
      IN_QTY_W06,
      IN_QTY_W07,
      IN_QTY_W08,
      IN_QTY_W09,
      IN_QTY_W10,
      IN_QTY_W11,
      IN_QTY_W12,
      IN_QTY_W13,
      IN_QTY_W14,
      IN_QTY_W15,
      IN_QTY_W16,
      IN_QTY_W17,
      IN_QTY_W18,
      IN_QTY_W19,
      IN_QTY_W20,
      IN_QTY_W21,
      IN_QTY_W22,
      IN_QTY_W23,
      IN_QTY_W24,
      IN_QTY_W25,
      IN_QTY_W26,
      MATERIAL_LEVEL_VALUE,
      MRP_CONTROLLER,
      MRP_CONTROLLER_DISPO AS MRP_CONTROLLER_KEY,
      PURCH_GROUP,
      PURCH_GROUP_EKGRP AS PURCH_GROUP_KEY,
      PROD_SCHED_FEVOR  AS PROD_SCHED_KEY,
      REORDER_PT        AS RECORDER_POINT,
      (GRT + PDT + 1)   AS LEAD_TIME,
      MEINS_ISSUE_UOM   AS UNIT,
      ISSUE_UOM_NUMERATOR,
      PO_UOM_NUMERATOR,
      MATL_TYPE_MTART AS MATL_TYPE,
      ULTIMATE_SOURCE
    FROM INV_SAP_PP_OPTIMIZATION --WHERE MATERIALID = '100-C09KJ400 A' AND PLANTID = '5200'
    )PP_BASIC
  LEFT JOIN
    (SELECT ID,
      MATERIAL,
      CATALOG_DASH,
      CATALOG_NO_DASH,
      DIST_CHL,
      CURRENT_SERIES
    FROM VIEW_INV_SAP_ITEM_X --WHERE MATERIAL = '100-C09KJ400 A' AND PLANTID = '5200'
    )ITEM_X
  ON ITEM_X.ID = PP_BASIC.ID
  )
WHERE CURRENT_SERIES = 'X';

--VIEW_INV_SAP_PP_OPT_ALL INCLUDE NON-CURRENT ITEM, LOOK LIKE UNDER DEV ETC.
DROP VIEW VIEW_INV_SAP_PP_OPT_ALL;
CREATE VIEW VIEW_INV_SAP_PP_OPT_ALL AS
SELECT PP_BASIC.ID,
    PP_BASIC.LAST_REVIEW,
    PP_BASIC.MATERIAL,
    ITEM_X.CATALOG_DASH,
    ITEM_X.CATALOG_NO_DASH,
    PP_BASIC.PLANT,
    PP_BASIC.MAT_DESC,
    PP_BASIC.SAFETY_STOCK,
    PP_BASIC.OH_QTY,
    PP_BASIC.UNIT,
    PP_BASIC.UNIT_COST,
    PP_BASIC.OH_QTY_INTRANSIT,
    PP_BASIC.PROD_BU,
    PP_BASIC.PROD_FAM,
    PP_BASIC.PROC_TYPE,
    PP_BASIC.STRATEGY_GRP,
    PP_BASIC.MRP_TYPE,
    PP_BASIC.PROD_SCHEDULER,
    PP_BASIC.PLANT_SP_MATL_STA,
    PP_BASIC.VENDOR_KEY,
    PP_BASIC.VENDOR_ITEM,
    PP_BASIC.MIN_INV,
    PP_BASIC.TARGET_INV,
    PP_BASIC.MAX_INV,
    PP_BASIC.LOT_SIZE_QTY,
    PP_BASIC.LOT_ROUNDING_VALUE,
    PP_BASIC.LOT_SIZE_DISLS,
    PP_BASIC.AVG26_USAGE_QTY,
    PP_BASIC.STDEV26_USAGE,
    PP_BASIC.AVG13_USAGE_QTY,
    PP_BASIC.STDEV13_USAGE,
    PP_BASIC.Q1_LINES,
    PP_BASIC.Q2_LINES,
    PP_BASIC.Q3_LINES,
    PP_BASIC.Q4_LINES,
    PP_BASIC.Q1_FREQ_COUNT,
    PP_BASIC.Q2_FREQ_COUNT,
    PP_BASIC.Q3_FREQ_COUNT,
    PP_BASIC.Q4_FREQ_COUNT,
    PP_BASIC.EXCHANGE_RATE,
    PP_BASIC.LEVEL_TYPE,
    PP_BASIC.OUT_QTY_W01,
    PP_BASIC.OUT_QTY_W02,
    PP_BASIC.OUT_QTY_W03,
    PP_BASIC.OUT_QTY_W04,
    PP_BASIC.OUT_QTY_W05,
    PP_BASIC.OUT_QTY_W06,
    PP_BASIC.OUT_QTY_W07,
    PP_BASIC.OUT_QTY_W08,
    PP_BASIC.OUT_QTY_W09,
    PP_BASIC.OUT_QTY_W10,
    PP_BASIC.OUT_QTY_W11,
    PP_BASIC.OUT_QTY_W12,
    PP_BASIC.OUT_QTY_W13,
    PP_BASIC.OUT_QTY_W14,
    PP_BASIC.OUT_QTY_W15,
    PP_BASIC.OUT_QTY_W16,
    PP_BASIC.OUT_QTY_W17,
    PP_BASIC.OUT_QTY_W18,
    PP_BASIC.OUT_QTY_W19,
    PP_BASIC.OUT_QTY_W20,
    PP_BASIC.OUT_QTY_W21,
    PP_BASIC.OUT_QTY_W22,
    PP_BASIC.OUT_QTY_W23,
    PP_BASIC.OUT_QTY_W24,
    PP_BASIC.OUT_QTY_W25,
    PP_BASIC.OUT_QTY_W26,
    PP_BASIC.IN_QTY_W01,
    PP_BASIC.IN_QTY_W02,
    PP_BASIC.IN_QTY_W03,
    PP_BASIC.IN_QTY_W04,
    PP_BASIC.IN_QTY_W05,
    PP_BASIC.IN_QTY_W06,
    PP_BASIC.IN_QTY_W07,
    PP_BASIC.IN_QTY_W08,
    PP_BASIC.IN_QTY_W09,
    PP_BASIC.IN_QTY_W10,
    PP_BASIC.IN_QTY_W11,
    PP_BASIC.IN_QTY_W12,
    PP_BASIC.IN_QTY_W13,
    PP_BASIC.IN_QTY_W14,
    PP_BASIC.IN_QTY_W15,
    PP_BASIC.IN_QTY_W16,
    PP_BASIC.IN_QTY_W17,
    PP_BASIC.IN_QTY_W18,
    PP_BASIC.IN_QTY_W19,
    PP_BASIC.IN_QTY_W20,
    PP_BASIC.IN_QTY_W21,
    PP_BASIC.IN_QTY_W22,
    PP_BASIC.IN_QTY_W23,
    PP_BASIC.IN_QTY_W24,
    PP_BASIC.IN_QTY_W25,
    PP_BASIC.IN_QTY_W26,
    PP_BASIC.MATERIAL_LEVEL_VALUE,
    PP_BASIC.MRP_CONTROLLER,
    PP_BASIC.MRP_CONTROLLER_KEY,
    PP_BASIC.PURCH_GROUP,
    PP_BASIC.PURCH_GROUP_KEY,
    PP_BASIC.PROD_SCHED_KEY,
    PP_BASIC.RECORDER_POINT,
    PP_BASIC.LEAD_TIME,
    ITEM_X.DIST_CHL,
    PP_BASIC.ISSUE_UOM_NUMERATOR,
    PP_BASIC.PO_UOM_NUMERATOR,
    PP_BASIC.MATL_TYPE,
    ITEM_X.CURRENT_SERIES,
    PP_BASIC.ULTIMATE_SOURCE
  FROM
    (SELECT MATERIALID
      ||'_'
      ||(PLANTID - 1) AS ID,
      LAST_REVIEW,
      MATERIALID    AS MATERIAL,
      (PLANTID - 1) AS PLANT,
      MAT_DESC,
      SAFETY_STK AS SAFETY_STOCK,
      OH_QTY,
      UNIT_COST,
      OH_QTY_INTRANSIT,
      SUBSTR(PROD_BU,0,3) AS PROD_BU,
      PROD_FAM,
      PROC_TYPE,
      STRATEGY_GRP,
      MRP_TYPE,
      PROD_SCHEDULER,
      SP_MATL_STAT_MMSTA AS PLANT_SP_MATL_STA,
      SPC_PROC_KEY_SOBSL AS VENDOR_KEY,
      MATERIALID
      ||'_'
      ||SUBSTR(VENDOR_NAME,0,4)           AS VENDOR_ITEM,
      (SAFETY_STK)                        AS MIN_INV,
      CEIL(SAFETY_STK + 0.5*LOT_SIZE_QTY) AS TARGET_INV,
      CEIL(SAFETY_STK + LOT_SIZE_QTY) AS MAX_INV,
      LOT_SIZE_QTY,
      LOT_ROUNDING_VALUE,
      LOT_SIZE_DISLS,
      AVG26_USAGE_QTY,
      STDEV26_USAGE,
      AVG13_USAGE_QTY,
      STDEV13_USAGE,
      Q1_LINES,
      Q2_LINES,
      Q3_LINES,
      Q4_LINES,
      Q1_FREQ_COUNT,
      Q2_FREQ_COUNT,
      Q3_FREQ_COUNT,
      Q4_FREQ_COUNT,
      EXCHANGE_RATE,
      LEVEL_TYPE,
      OUT_QTY_W01,
      OUT_QTY_W02,
      OUT_QTY_W03,
      OUT_QTY_W04,
      OUT_QTY_W05,
      OUT_QTY_W06,
      OUT_QTY_W07,
      OUT_QTY_W08,
      OUT_QTY_W09,
      OUT_QTY_W10,
      OUT_QTY_W11,
      OUT_QTY_W12,
      OUT_QTY_W13,
      OUT_QTY_W14,
      OUT_QTY_W15,
      OUT_QTY_W16,
      OUT_QTY_W17,
      OUT_QTY_W18,
      OUT_QTY_W19,
      OUT_QTY_W20,
      OUT_QTY_W21,
      OUT_QTY_W22,
      OUT_QTY_W23,
      OUT_QTY_W24,
      OUT_QTY_W25,
      OUT_QTY_W26,
      IN_QTY_W01,
      IN_QTY_W02,
      IN_QTY_W03,
      IN_QTY_W04,
      IN_QTY_W05,
      IN_QTY_W06,
      IN_QTY_W07,
      IN_QTY_W08,
      IN_QTY_W09,
      IN_QTY_W10,
      IN_QTY_W11,
      IN_QTY_W12,
      IN_QTY_W13,
      IN_QTY_W14,
      IN_QTY_W15,
      IN_QTY_W16,
      IN_QTY_W17,
      IN_QTY_W18,
      IN_QTY_W19,
      IN_QTY_W20,
      IN_QTY_W21,
      IN_QTY_W22,
      IN_QTY_W23,
      IN_QTY_W24,
      IN_QTY_W25,
      IN_QTY_W26,
      MATERIAL_LEVEL_VALUE,
      MRP_CONTROLLER,
      MRP_CONTROLLER_DISPO AS MRP_CONTROLLER_KEY,
      PURCH_GROUP,
      PURCH_GROUP_EKGRP AS PURCH_GROUP_KEY,
      PROD_SCHED_FEVOR  AS PROD_SCHED_KEY,
      REORDER_PT        AS RECORDER_POINT,
      (GRT + PDT + 1)   AS LEAD_TIME,
      MEINS_ISSUE_UOM   AS UNIT,
      ISSUE_UOM_NUMERATOR,
      PO_UOM_NUMERATOR,
      MATL_TYPE_MTART AS MATL_TYPE,
      ULTIMATE_SOURCE
    FROM INV_SAP_PP_OPTIMIZATION
    )PP_BASIC
  LEFT JOIN
    (SELECT ID,
      MATERIAL,
      CATALOG_DASH,
      CATALOG_NO_DASH,
      DIST_CHL,
      CURRENT_SERIES
    FROM VIEW_INV_SAP_ITEM_X
    )ITEM_X
  ON ITEM_X.ID = PP_BASIC.ID;

-- VIEW_INV_SAP_OPEN_SO BASIC OPEN SALES ORDER
DROP VIEW VIEW_INV_SAP_OPEN_SO;
SELECT * FROM VIEW_INV_SAP_OPEN_SO;
CREATE VIEW VIEW_INV_SAP_OPEN_SO AS 
SELECT SALESDOC
  ||'_'
  || SALESDOCITEM AS SO_ID,
  MATERIAL
  ||'_'
  || PLANT                  AS ID,
  SALESDOC                  AS SALES_DOC,
  SALESDOCITEM              AS LINE_NUM,
  MATERIAL                  AS MATERIAL,
  PLANT                     AS PLANT,
  SALES_ORG                 AS SALES_ORG,
  LINECREATEDATE            AS LINE_CREATED_DATE,
  SUBSTR(PRODHIER,0,3)      AS BU,
  ORDERQTY                  AS ORDER_QTY,
  OPEN_QTY                  AS OPEN_QTY,
  OPEN_QTY_BASE_UOM         AS OPEN_QTY_BASE_UOM,
  PROFITCENTER              AS PROFIT_CENTER,
  SALESPRICE                AS SALES_PRICE,
  CURRENCY                  AS CURRENCY,
  MAX_COMMIT_DATE           AS COMMITTED_DATE,
  MAX_CONFIRM_DATE          AS CONFIRM_DATE,
  SOLD_TO                   AS SOLD_TO_PARTY,
  DELIVSTATUS               AS DELIVERY_STATUS,
  OVERALLDELIVSTATSU        AS OVER_ALL_DELIVERY_STATUS,
  SALESDOCTYPE              AS SALE_DOC_TYPE,
  SALEDOCITEMCATEGORY_PSTYV AS SALEDOCITEMCATEGORY_PSTYV,
  SHIPFROM_VSTEL            AS SHIPPING_POINT,
  STOCKSTATUS               AS STOCK_STATUS,
  DELIVPRIO                 AS DELIVERY_PRIORITY,
  LST_ACT_GI_DATE           AS LST_ACT_GI_DATE,
  LST_DELV_CREATED_DATE     AS LST_DELIVERY_CREATE_DATE,
  REQTYPE                   AS REQUEST_TYPE,
  EXCHANGE_RATE_TO_USD      AS EXCHANGE_RATE_TO_USD,
  MAX_REQUEST_DATE          AS REQUIRE_DATE,
  ROUTE                     AS ROUTE
FROM INV_SAP_SALES_VBAK_VBAP_VBUP; 

--VIEW_INV_SAP_BACKLOG_SO
--WILL ADD PP INFORMATION IN IT
DROP VIEW VIEW_INV_SAP_BACKLOG_SO;
DROP TABLE INV_SAP_BACKLOG_SO;
SELECT * FROM INV_SAP_BACKLOG_SO;
CREATE TABLE INV_SAP_BACKLOG_SO AS 
SELECT * FROM VIEW_INV_SAP_BACKLOG_SO;
CREATE VIEW VIEW_INV_SAP_BACKLOG_SO AS 
SELECT  OPEN_SO_BASIC.ID,
  OPEN_SO_BASIC.SO_ID,
  OPEN_SO_BASIC.SALES_DOC,
  OPEN_SO_BASIC.LINE_NUM,
  OPEN_SO_BASIC.MATERIAL,
  SALES_PP_X.CATALOG_DASH,
  SALES_PP_X.MAT_DESC,
  OPEN_SO_BASIC.PLANT,
  OPEN_SO_BASIC.SALES_ORG,
  OPEN_SO_BASIC.LINE_CREATED_DATE,
  OPEN_SO_BASIC.BU,
  OPEN_SO_BASIC.ORDER_QTY,
  OPEN_SO_BASIC.OPEN_QTY,
  OPEN_SO_BASIC.OPEN_QTY_BASE_UOM,
  SALES_PP_X.SAFETY_STOCK,
  SALES_PP_X.OH_QTY,
  SALES_PP_X.UNIT,
  SALES_PP_X.STRATEGY_GRP,
  OPEN_SO_BASIC.PROFIT_CENTER,
  OPEN_SO_BASIC.SALES_PRICE,
  OPEN_SO_BASIC.CURRENCY,
  OPEN_SO_BASIC.REQUIRE_DATE,
  OPEN_SO_BASIC.COMMITTED_DATE,
  OPEN_SO_BASIC.CONFIRM_DATE,
  OPEN_SO_BASIC.SOLD_TO_PARTY,
  OPEN_SO_BASIC.DELIVERY_STATUS,
  OPEN_SO_BASIC.OVER_ALL_DELIVERY_STATUS,
  OPEN_SO_BASIC.SALE_DOC_TYPE,
  OPEN_SO_BASIC.SALEDOCITEMCATEGORY_PSTYV,
  OPEN_SO_BASIC.SHIPPING_POINT,
  OPEN_SO_BASIC.STOCK_STATUS,
  OPEN_SO_BASIC.ROUTE,
  OPEN_SO_BASIC.DELIVERY_PRIORITY,
  SALES_PP_X.MRP_TYPE,
  SALES_PP_X.VENDOR_KEY,
  SALES_PP_X.MRP_CONTROLLER,
  SALES_PP_X.PURCH_GROUP,
  SALES_PP_X.LEAD_TIME,
  SALES_PP_X.MATL_TYPE,
  OPEN_SO_BASIC.LST_ACT_GI_DATE,
  OPEN_SO_BASIC.LST_DELIVERY_CREATE_DATE,
  OPEN_SO_BASIC.REQUEST_TYPE,
  OPEN_SO_BASIC.EXCHANGE_RATE_TO_USD
FROM
  (SELECT ID,
    SO_ID,
    SALES_DOC,
    LINE_NUM,
    MATERIAL,
    PLANT,
    SALES_ORG,
    LINE_CREATED_DATE,
    BU,
    ORDER_QTY,
    OPEN_QTY,
    OPEN_QTY_BASE_UOM,
    PROFIT_CENTER,
    SALES_PRICE,
    CURRENCY,
    COMMITTED_DATE,
    CONFIRM_DATE,
    SOLD_TO_PARTY,
    DELIVERY_STATUS,
    OVER_ALL_DELIVERY_STATUS,
    SALE_DOC_TYPE,
    SALEDOCITEMCATEGORY_PSTYV,
    SHIPPING_POINT,
    STOCK_STATUS,
    DELIVERY_PRIORITY,
    LST_ACT_GI_DATE,
    LST_DELIVERY_CREATE_DATE,
    REQUEST_TYPE,
    EXCHANGE_RATE_TO_USD,
    REQUIRE_DATE,
    ROUTE
  FROM VIEW_INV_SAP_OPEN_SO
  )OPEN_SO_BASIC
LEFT JOIN
  (SELECT ID,
    CATALOG_DASH,
    MAT_DESC,
    SAFETY_STOCK,
    OH_QTY,
    UNIT,
    STRATEGY_GRP,
    MRP_TYPE,
    VENDOR_KEY,
    MRP_CONTROLLER,
    PURCH_GROUP,
    LEAD_TIME,
    MATL_TYPE
  FROM VIEW_INV_SAP_PP_OPT_X
  )SALES_PP_X
ON SALES_PP_X.ID = OPEN_SO_BASIC.ID;

--VIEW_INV_SAP_ITEM_STATISTICS
--1.pass-due open qty and line
--2.LT open so qty and line
--3.(13weeks - LT) open so qty and line
--4. 13weeks after (Long Committed Date) open so qty and line
--5.All open so qty and line.
--6.FC_QTY

--LT 5040 14, 5050 8,5100 10,5110 11,5110 13,5160 16, 5190 16, 5200 10,5070 14, 5140 14
-- 5040 14,5110 13,5070 14, 5140 14



(
SELECT PLANTID
      ||'_'
      ||MATERIALID                           AS ID,
      MATERIALID                          AS MATERIALID,
      PLANTID                             AS PLANTID,
      CEIL(SUM(PLNMG_PLANNEDQUANTITY)/26) AS FC_AVG_WEEK
    FROM DWQ$LIBRARIAN.INV_SAP_PP_FRCST_PBIM_PBED@ROCKWELL_DBLINK
    WHERE (PDATU_DELIV_ORDFINISHDATE BETWEEN TO_CHAR(sysdate) AND TO_CHAR(sysdate + 182))
    AND PLANTID = '5110'
    AND VERSBP_VERSION = '55'
    AND MATERIALID    IN  ()
    GROUP BY MATERIALID,
      MATERIALID
      ||'_'
      ||PLANTID,
      PLANTID,
      MATERIALID
      )FC_QTY_WEEK26

--BACKLOG_OPEN_QTY,PAST_DUE_OPEN_QTY,PO_SO_SA_FLAG,STO_OPEN_QTY
--OPEN STATUS
DROP VIEW VIEW_INV_SAP_SOPO_OPEN_QTY;
SELECT * FROM VIEW_INV_SAP_SOPO_OPEN_QTY;
CREATE VIEW VIEW_INV_SAP_SOPO_OPEN_QTY AS
SELECT SALES_OPEN_PASS_QTY.ID           AS ID,
  SALES_OPEN_PASS_QTY.BACKLOG_OPEN_QTY  AS BACKLOG_OPEN_QTY,
  SALES_OPEN_PASS_QTY.PAST_DUE_OPEN_QTY AS PAST_DUE_OPEN_QTY,
  STO_OPEN_QTY_S.PO_SO_SA_FLAG          AS PO_SO_SA_FLAG,
  STO_OPEN_QTY_S.STO_OPEN_QTY           AS STO_OPEN_QTY
FROM
  (
  --Sales Orders Status
  SELECT BACKLOG_OPEN.ID                   AS ID,
    NVL(BACKLOG_OPEN.OPEN_QTY,0)           AS BACKLOG_OPEN_QTY,
    NVL(PAST_DUE_OPEN.PAST_DUE_OPEN_QTY,0) AS PAST_DUE_OPEN_QTY
  FROM
    (SELECT MATERIAL
      ||'_'
      ||PLANT              AS ID,
      MATERIAL             AS MATERIALID,
      PLANT                AS PLANTID,
      NVL(SUM(OPEN_QTY),0) AS OPEN_QTY
    FROM INV_SAP_SALES_VBAK_VBAP_VBUP
    GROUP BY MATERIAL
      ||'_'
      ||PLANT,
      MATERIAL,
      PLANT
    )BACKLOG_OPEN
  LEFT JOIN
    (SELECT MATERIAL
      ||'_'
      ||PLANT               AS ID,
      MATERIAL              AS MATERIALID,
      PLANT                 AS PLANTID,
      NVL(SUM(OPEN_QTY), 0) AS PAST_DUE_OPEN_QTY
    FROM INV_SAP_SALES_VBAK_VBAP_VBUP
    WHERE MAX_COMMIT_DATE < SYSDATE - 1
    GROUP BY MATERIAL
      ||'_'
      ||PLANT,
      MATERIAL,
      PLANT
    )PAST_DUE_OPEN
  ON PAST_DUE_OPEN.ID = BACKLOG_OPEN.ID
  )SALES_OPEN_PASS_QTY
LEFT JOIN
  ---STO_OPEN_QTY
  (
  SELECT MATERIALID
    ||'_'
    ||PLANTID AS ID,
    MATERIALID,
    PLANTID,
    PO_SO_SA_FLAG,
    NVL(SUM(COMMITTEDQTY),0) AS STO_OPEN_QTY
  FROM INV_SAP_PP_PO_HISTORY
  WHERE PO_SO_SA_FLAG     = 'STO'
  AND DELIVERYCOMPLETE IS NULL
  GROUP BY MATERIALID,
    PLANTID,
    PO_SO_SA_FLAG
  )STO_OPEN_QTY_S
ON SALES_OPEN_PASS_QTY.ID = STO_OPEN_QTY_S.ID;
  
--VIEW_INV_SAP_INV_BASIC
DROP VIEW VIEW_INV_SAP_INV_BASIC;
SELECT * FROM VIEW_INV_SAP_INV_BASIC;
CREATE VIEW VIEW_INV_SAP_INV_BASIC AS
SELECT INV_BASIC.LAST_REVIEW_DATE AS LAST_REVIEW_DATE,
  INV_BASIC.ID                    AS ID,
  INV_BASIC.PLANT                 AS PLANT,
  INV_BASIC.MATERIAL              AS MATERIAL,
  ITEM_BASIC.CATALOG_DASH         AS CATALOG_DASH,
  ITEM_BASIC.MAT_DESC             AS MAT_DESC,
  INV_BASIC.TOTAL_QTY             AS TOTAL_QTY,
  INV_BASIC.LOCATION              AS LOCATION,
  ITEM_BASIC.PROD_BU              AS PROD_BU,
  ITEM_BASIC.MATL_TYPE            AS MATL_TYPE,
  ITEM_BASIC.MRP_TYPE             AS MRP_TYPE,
  ITEM_BASIC.STRATEGY_GRP         AS STRATEGY_GRP,
  ITEM_BASIC.SAFETY_STOCK         AS SAFETY_STOCK,
  ITEM_BASIC.RECORDER_POINT       AS RECORDER_POINT,
  ITEM_BASIC.UNIT_COST            AS UNIT_COST,
  ITEM_BASIC.LEAD_TIME            AS LEAD_TIME,
  ITEM_BASIC.VENDOR_ITEM          AS VENDOR_ITEM
FROM
  (SELECT MATERIALID
    ||'_'
    ||PLANTID     AS ID,
    MATERIALID    AS MATERIAL,
    PLANTID       AS PLANT,
    LOCATIONID    AS LOCATION,
    NVL(OH_QTY,0) AS TOTAL_QTY,
    ASOFDATE      AS LAST_REVIEW_DATE
  FROM INV_SAP_INVENTORY_BY_PLANT
  )INV_BASIC
LEFT JOIN
  (SELECT ID,
    CATALOG_DASH,
    MAT_DESC,
    SAFETY_STOCK,
    UNIT,
    STRATEGY_GRP,
    MRP_TYPE,
    PROD_BU,
    LEAD_TIME,
    RECORDER_POINT,
    UNIT_COST,
    VENDOR_ITEM,
    MATL_TYPE
  FROM VIEW_INV_SAP_PP_OPT_X
  )ITEM_BASIC
ON ITEM_BASIC.ID = INV_BASIC.ID;

--VIEW_INV_SAP_BACKLOG_INV
DROP VIEW VIEW_INV_SAP_BACKLOG_INV;
DROP TABLE INV_SAP_BACKLOG_INV;
SELECT * FROM INV_SAP_BACKLOG_INV;
CREATE TABLE INV_SAP_BACKLOG_INV AS
SELECT * FROM VIEW_INV_SAP_BACKLOG_INV WHERE ID = '0041-5077_5070';
CREATE VIEW VIEW_INV_SAP_BACKLOG_INV AS 
SELECT INV_BASIC.LAST_REVIEW_DATE,
  INV_BASIC.ID,
  INV_BASIC.PLANT,
  INV_BASIC.MATERIAL,
  INV_BASIC.CATALOG_DASH,
  INV_BASIC.MAT_DESC,
  INV_BASIC.TOTAL_QTY,
  INV_BASIC.LOCATION,
  SOPO_OPEN_QTY.BACKLOG_OPEN_QTY,
  SOPO_OPEN_QTY.PAST_DUE_OPEN_QTY,
  SOPO_OPEN_QTY.PO_SO_SA_FLAG,
  SOPO_OPEN_QTY.STO_OPEN_QTY,
  INV_BASIC.PROD_BU,
  INV_BASIC.MATL_TYPE,
  INV_BASIC.MRP_TYPE,
  INV_BASIC.STRATEGY_GRP,
  INV_BASIC.SAFETY_STOCK,
  INV_BASIC.RECORDER_POINT,
  INV_BASIC.UNIT_COST,
  INV_BASIC.LEAD_TIME,
  INV_BASIC.VENDOR_ITEM
FROM
  (SELECT LAST_REVIEW_DATE,
    ID,
    PLANT,
    MATERIAL,
    CATALOG_DASH,
    MAT_DESC,
    TOTAL_QTY,
    LOCATION,
    PROD_BU,
    MATL_TYPE,
    MRP_TYPE,
    STRATEGY_GRP,
    SAFETY_STOCK,
    RECORDER_POINT,
    UNIT_COST,
    LEAD_TIME,
    VENDOR_ITEM
  FROM VIEW_INV_SAP_INV_BASIC
  )INV_BASIC
LEFT JOIN
  (SELECT ID,
    BACKLOG_OPEN_QTY,
    PAST_DUE_OPEN_QTY,
    PO_SO_SA_FLAG,
    STO_OPEN_QTY
  FROM VIEW_INV_SAP_SOPO_OPEN_QTY
  )SOPO_OPEN_QTY
ON SOPO_OPEN_QTY.ID = INV_BASIC.ID;

--PO TAB INFOMATION
--VIEW_INV_SAP_OPEN_PO
DROP VIEW VIEW_INV_SAP_OPEN_PO;
DROP TABLE INV_SAP_OPEN_PO;
SELECT * FROM INV_SAP_OPEN_PO;
CREATE TABLE INV_SAP_OPEN_PO AS
SELECT * FROM VIEW_INV_SAP_OPEN_PO;
CREATE VIEW VIEW_INV_SAP_OPEN_PO AS
SELECT PO_HIS.PO_ID                AS PO_ID,
  PO_HIS.ID                AS ID,
  PO_HIS.PO                     AS PO,
  PO_HIS.ITEM                   AS ITEM,
  PO_HIS.MATERIAL               AS MATERIAL,
  PO_HIS.PLANT                  AS PLANT,
  PO_HIS.PURCHDOCCAT            AS PURCHDOCCAT,
  PO_HIS.PURCHDOC_TYPE          AS PURCHDOC_TYPE,
  PO_HIS.STATUSPURCHDOC         AS STATUSPURCHDOC,
  PO_HIS.VENDOR                 AS VENDOR,
  PO_HIS.PURCHDELIVSCH_LINE     AS PURCHDELIVSCH_LINE,
  PO_HIS.PURHCASE_QTY           AS PURHCASE_QTY,
  PO_HIS.START_DELIVER_DATE     AS START_DELIVER_DATE,
  PO_HIS.COMMITTED_DATE         AS COMMITTED_DATE,
  PO_HIS.COMMIT_VS_CONFIRM      AS COMMIT_VS_CONFIRM,
  PO_HIS.PO_SO_SA_FLAG          AS PO_SO_SA_FLAG,
  PO_HIS.CREATED_DATE           AS CREATED_DATE,
  PO_HIS.CURRENCY               AS CURRENCY,
  PO_HIS.ORDER_VALUE            AS ORDER_VALUE,
  PO_HIS.LEAD_TIME              AS LEAD_TIME,
  PO_HIS.GRT                    AS GRT,
  PO_HIS.MRP_CONTROLLER         AS MRP_CONTROLLER,
  PO_HIS.PROC_KEY               AS PROC_KEY,
  PO_HIS.PURCH_GROUP            AS PURCH_GROUP,
  PO_HIS.STRATEGY_GRP           AS STRATEGY_GRP,
  PO_HIS.UNIT_COST              AS UNIT_COST,
  PO_HIS.PR                     AS PR,
  PO_HIS.SHIPPING_POINT         AS SHIPPING_POINT,
  PO_HIS.DELIVERY_PRIORITY      AS DELIVERY_PRIORITY,
  PO_HIS.ROUTE                  AS ROUTE,
  PO_HIS.TRANSIT_DAYS           AS TRANSIT_DAYS,
  SPLIT_LINE_DELIVERY.PO_OPEN_LINE_QTY     AS PO_OPEN_LINE_QTY,
  SPLIT_LINE_DELIVERY.PO_OPEN_QTY AS PO_OPEN_QTY
FROM
  (SELECT EBELNPURCHDOCNO
    ||'_'
    ||MATERIALID             AS PO_ID,
    MATERIALID
      ||'_'
      ||PLANTID AS ID,
    MATERIALID               AS MATERIAL,
    PLANTID                  AS PLANT,
    BSTYP_PURCHDOCCAT        AS PURCHDOCCAT,
    BSART_PURCHDOCTYPE       AS PURCHDOC_TYPE,
    STATU_STATUSPURCHDOC     AS STATUSPURCHDOC,
    LIFNR_VENDORNO           AS VENDOR,
    EBELNPURCHDOCNO          AS PO,
    EBELPPURCHITEMNO         AS ITEM,
    ETENRPURCHDELIVSCHLINESA AS PURCHDELIVSCH_LINE,
    MENGESCHEDULEDQTY        AS PURHCASE_QTY,
    WEMNGRECEIVEDQTY         AS RECEIVED_QTY,
    SLFDTSTATDELIVERYDATE    AS START_DELIVER_DATE,
    DELIVERYCOMPLETE         AS DELIVERY_COMPLETE_FLAG,
    COMMITTED_DATE           AS COMMITTED_DATE,
    COMMITTEDQTY             AS COMMITTED_QTY,
    COMMIT_CONFIRM_SUM       AS COMMIT_VS_CONFIRM,
    PO_SO_SA_FLAG            AS PO_SO_SA_FLAG,
    CREATED_DATE             AS CREATED_DATE,
    WAERS_CURRENCYKEY        AS CURRENCY,
    NETWRNETORDERVALUE       AS ORDER_VALUE,
    LT                       AS LEAD_TIME,
    GRT                      AS GRT,
    MRP_CONTROLLER           AS MRP_CONTROLLER,
    SPC_PROC_KEY             AS PROC_KEY,
    PURCH_GROUP              AS PURCH_GROUP,
    STRATEGY_GRP             AS STRATEGY_GRP,
    UNIT_COST                AS UNIT_COST,
    PURCH_REQ                AS PR,
    SHIPPING_POINT           AS SHIPPING_POINT,
    DELIVERY_PRIORITY        AS DELIVERY_PRIORITY,
    ROUTE                    AS ROUTE,
    TRANSIT_DAYS             AS TRANSIT_DAYS
  FROM INV_SAP_PP_PO_HISTORY
  WHERE DELIVERYCOMPLETE        IS NULL
  AND ETENRPURCHDELIVSCHLINESA = '1'
  )PO_HIS
LEFT JOIN
(
SELECT PO_OPEN_LINE.PO_ID AS PO_ID,
  CASE
    WHEN PO_OPEN_LINE.LINECOUNT = '1'
    THEN 1
    ELSE (PO_OPEN_LINE.LINECOUNT - 1)
  END PO_OPEN_LINE_QTY,
  PO_OPEN_QTY.OPEN_QTY AS PO_OPEN_QTY
FROM
  (SELECT EBELNPURCHDOCNO
    ||'_'
    ||MATERIALID AS PO_ID,
    MATERIALID,
    PLANTID,
    SUM(PLANTID)/PLANTID AS LINECOUNT
  FROM INV_SAP_PP_PO_HISTORY
  GROUP BY EBELNPURCHDOCNO
    ||'_'
    ||MATERIALID,
    MATERIALID,
    PLANTID
  )PO_OPEN_LINE
LEFT JOIN
--PO_OPEN_QTY
  (
  SELECT EBELNPURCHDOCNO
    ||'_'
    ||MATERIALID AS PO_ID,
    MATERIALID,
    PLANTID,
    SUM(COMMITTEDQTY) AS OPEN_QTY
  FROM INV_SAP_PP_PO_HISTORY
  WHERE DELIVERYCOMPLETE IS NULL 
  GROUP BY EBELNPURCHDOCNO
    ||'_'
    ||MATERIALID,
    MATERIALID,
    PLANTID
  )PO_OPEN_QTY
  ON PO_OPEN_QTY.PO_ID = PO_OPEN_LINE.PO_ID
)SPLIT_LINE_DELIVERY
ON SPLIT_LINE_DELIVERY.PO_ID = PO_HIS.PO_ID;

---VIEW_INV_SAP_BACKLOG_PO
DROP VIEW VIEW_INV_SAP_BACKLOG_PO;
DROP TABLE INV_SAP_BACKLOG_PO;
CREATE TABLE INV_SAP_BACKLOG_PO AS 
SELECT * FROM VIEW_INV_SAP_BACKLOG_PO WHERE ID = '0041-5081_5070';
CREATE VIEW VIEW_INV_SAP_BACKLOG_PO AS
SELECT OPEN_PO.PO_ID                      AS PO_ID,
  OPEN_PO.ID                              AS ID,
  OPEN_PO.PLANT                           AS PLANT,
  OPEN_PO.PO                              AS PO,
  OPEN_PO.ITEM                            AS ITEM,
  OPEN_PO.MATERIAL                        AS MATERIAL,
  TRANSIT_ITEM_BASIC.CATALOG_DASH         AS CATALOG_DASH,
  TRANSIT_ITEM_BASIC.MAT_DESC             AS MAT_DESC,
  OPEN_PO.PURCHDOCCAT                     AS PURCHDOCCAT,
  OPEN_PO.PURCHDOC_TYPE                   AS PURCHDOC_TYPE,
  OPEN_PO.STATUSPURCHDOC                  AS STATUSPURCHDOC,
  OPEN_PO.VENDOR                          AS VENDOR,
  TRANSIT_ITEM_BASIC.MRP_TYPE             AS MRP_TYPE,
  TRANSIT_ITEM_BASIC.PROD_BU              AS PROD_BU,
  TRANSIT_ITEM_BASIC.MATL_TYPE            AS MATL_TYPE,
  OPEN_PO.PURCHDELIVSCH_LINE              AS PURCHDELIVSCH_LINE,
  OPEN_PO.PURHCASE_QTY                    AS PURHCASE_QTY,
  OPEN_PO.START_DELIVER_DATE              AS START_DELIVER_DATE,
  OPEN_PO.COMMITTED_DATE                  AS MAX_COMMITTED_DATE,
  OPEN_PO.COMMIT_VS_CONFIRM               AS COMMIT_VS_CONFIRM,
  OPEN_PO.PO_SO_SA_FLAG                   AS PO_SO_SA_FLAG,
  OPEN_PO.CREATED_DATE                    AS CREATED_DATE,
  OPEN_PO.CURRENCY                        AS CURRENCY,
  OPEN_PO.ORDER_VALUE                     AS ORDER_VALUE,
  OPEN_PO.LEAD_TIME                       AS LEAD_TIME,
  OPEN_PO.GRT                             AS GRT,
  OPEN_PO.MRP_CONTROLLER                  AS MRP_CONTROLLER,
  OPEN_PO.PROC_KEY                        AS PROC_KEY,
  OPEN_PO.PURCH_GROUP                     AS PURCH_GROUP,
  OPEN_PO.STRATEGY_GRP                    AS STRATEGY_GRP,
  OPEN_PO.UNIT_COST                       AS UNIT_COST,
  OPEN_PO.PR                              AS PR,
  OPEN_PO.SHIPPING_POINT                  AS SHIPPING_POINT,
  OPEN_PO.DELIVERY_PRIORITY               AS DELIVERY_PRIORITY,
  OPEN_PO.ROUTE                           AS ROUTE,
  OPEN_PO.TRANSIT_DAYS                    AS TRANSIT_DAYS,
  OPEN_PO.PO_OPEN_LINE_QTY                AS PO_OPEN_LINE_QTY,
  OPEN_PO.PO_OPEN_QTY                     AS PO_OPEN_QTY,
  TRANSIT_ITEM_BASIC.STOCK_IN_TRANSIT_QTY AS STOCK_IN_TRANSIT_QTY
FROM
  (SELECT PO_ID,
    ID,
    PO,
    ITEM,
    MATERIAL,
    PLANT,
    PURCHDOCCAT,
    PURCHDOC_TYPE,
    STATUSPURCHDOC,
    VENDOR,
    PURCHDELIVSCH_LINE,
    PURHCASE_QTY,
    START_DELIVER_DATE,
    COMMITTED_DATE,
    COMMIT_VS_CONFIRM,
    PO_SO_SA_FLAG,
    CREATED_DATE,
    CURRENCY,
    ORDER_VALUE,
    LEAD_TIME,
    GRT,
    MRP_CONTROLLER,
    PROC_KEY,
    PURCH_GROUP,
    STRATEGY_GRP,
    UNIT_COST,
    PR,
    SHIPPING_POINT,
    DELIVERY_PRIORITY,
    ROUTE,
    TRANSIT_DAYS,
    PO_OPEN_LINE_QTY,
    PO_OPEN_QTY
  FROM VIEW_INV_SAP_OPEN_PO
  )OPEN_PO
LEFT JOIN
  (SELECT STOCK_IN_TRAINST.ID             AS ID,
    STOCK_IN_TRAINST.STOCK_IN_TRANSIT_QTY AS STOCK_IN_TRANSIT_QTY,
    ITEM_BASIC.CATALOG_DASH               AS CATALOG_DASH,
    ITEM_BASIC.MAT_DESC                   AS MAT_DESC,
    ITEM_BASIC.MRP_TYPE                   AS MRP_TYPE,
    ITEM_BASIC.PROD_BU                    AS PROD_BU,
    ITEM_BASIC.MATL_TYPE                  AS MATL_TYPE
  FROM
    (SELECT MATERIALID
      ||'_'
      ||PLANTID AS ID,
      MATERIALID,
      PLANTID,
      SUM(DELIVERY_QTY_SUOM) AS STOCK_IN_TRANSIT_QTY
    FROM INV_SAP_LIKP_LIPS_DAILY
    WHERE REFERENCE_DOC_TRIM IN
      (SELECT EBELNPURCHDOCNO
      FROM INV_SAP_PP_PO_HISTORY
      WHERE DELIVERYCOMPLETE IS NULL
      )
    AND CHANGED_ON_DATE IS NULL
    GROUP BY MATERIALID,
      MATERIALID,
      PLANTID
    )STOCK_IN_TRAINST
  LEFT JOIN
    (SELECT ID,
      CATALOG_DASH,
      MAT_DESC,
      MRP_TYPE,
      PROD_BU,
      MATL_TYPE
    FROM VIEW_INV_SAP_PP_OPT_X
    )ITEM_BASIC
  ON ITEM_BASIC.ID                  = STOCK_IN_TRAINST.ID
  )TRANSIT_ITEM_BASIC 
  ON OPEN_PO.ID = TRANSIT_ITEM_BASIC.ID;

--DELIVERY RECORD
---This report for jane. It is about the delivery that all vendors shipment to 5040.
---Report frequency is weekly. Every Monday and time span is last week's suppliers' shipment status.
DROP VIEW VIEW_INV_SAP_DELREC_HK_SH;
CREATE VIEW VIEW_INV_SAP_DELREC_HK_SH AS
SELECT DELIVERY,
  DELIVERY_ITEM,
  CREATED_BY,
  CREATED_ON_DATE,
  MATERIALID,
  PLANTID,
  MVMT_TYPE,
  DELIVERY_QTY_SUOM,
  BASE_UOM,
  NUMERATOR,
  DENOMINATOR,
  MATERIAL_AVAIL_DATE,
  REFERENCE_DOC_TRIM,
  REFERENCE_DOC_ITEM_TRIM,
  DELIVERY_TYPE,
  INCOTERMS1,
  INCOTERMS2,
  DELIVERY_PRIORITY,
  CHANGED_ON_DATE,
  ACT_GI_DATE,
  DWQ_SRC_EXTRACT_DATE,
  DELIVERY_QTY_STO_ITEM
FROM INV_SAP_LIKP_LIPS_DAILY
WHERE REFERENCE_DOC_TRIM IN
  (SELECT EBELNPURCHDOCNO
  FROM INV_SAP_PP_PO_HISTORY
  WHERE PLANTID IN ('5040', '5050')
  )
AND CREATED_ON_DATE BETWEEN TO_CHAR(SYSDATE - 7) AND TO_CHAR(SYSDATE);

---------------------------------------------------REPORTS VIEWS--------------------------------------------------------
